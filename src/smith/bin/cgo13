#!/usr/bin/env python2
#
# Run CGO13 autotuner on training data.
#
from __future__ import print_function
from __future__ import division

import os
import sys

from argparse import ArgumentParser

import labm8

import smith
from smith import cgo13


def main():
    parser = ArgumentParser()
    parser.add_argument('input', help='path to training data CSV')
    parser.add_argument('-t', '--test', action="store", dest="test_data",
                        help='path to training data CSV')
    parser.add_argument("--with-raw-features", action="store_true",
                        help="if true, use raw features as well as combined")
    parser.add_argument("-g", "--group", action="store", default="none",
                        help='group results by {suite}')
    args = parser.parse_args()

    # try:
    training_data = cgo13.from_csv(smith.assert_exists(args.input))

    if args.test_data:
        test_data = cgo13.from_csv(smith.assert_exists(args.test_data))
    else:
        test_data = None
    cgo13.classification(training_data, test=test_data,
                         with_raw_features=args.with_raw_features,
                         group_by=args.group)
    # except Exception as e:
    #     print("fatal:", e, file=sys.stderr)
    #     # ml.stop()
    #     sys.exit(1)


if __name__ == '__main__':
    main()
