// -*-c++-*-
//
#ifndef PHD_TEST_H
#define PHD_TEST_H

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated"
#pragma GCC diagnostic ignored "-Wmissing-noreturn"
#pragma GCC diagnostic ignored "-Wpadded"
#pragma GCC diagnostic ignored "-Wshift-sign-overflow"
#pragma GCC diagnostic ignored "-Wundef"
#pragma GCC diagnostic ignored "-Wused-but-marked-unused"
#include <benchmark/benchmark.h>
#include <gtest/gtest.h>
#pragma GCC diagnostic pop

#define PHD_MAIN()                              \
  int main(int argc, char **argv) {             \
    testing::InitGoogleTest(&argc, argv);       \
    const auto ret = RUN_ALL_TESTS();           \
    benchmark::Initialize(&argc, argv);         \
    benchmark::RunSpecifiedBenchmarks();        \
    return ret;                                 \
  }

namespace phd {
namespace debug {

// Debug type:
template<typename T> struct debug_t {};

}  // debug namespace
}  // phd namespace

// Macros for debugging types:
//
// Fatally crash the compiler by attempting to construct an object of
// 'type' using an unknown argument.
#define PRINT_TYPENAME(type) type _____{phd::debug::debug_t<type>};
//
// Fatally crash the compiler by attempting to cast 'variable' to an
// unknown type.
#define PRINT_TYPE(variable) static_cast<phd::debug::debug_t<type>>(variable);

#endif  // PHD_TEST_H
