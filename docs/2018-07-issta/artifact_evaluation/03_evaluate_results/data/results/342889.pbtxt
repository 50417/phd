testcase {
  toolchain: "opencl"
  generator {
    name: "clgen"
    opts {
      key: "git_commit"
      value: "9556e7112ba2bd6f79ee59eef74f0a2304efa007"
    }
    opts {
      key: "git_remote"
      value: "https://github.com/ChrisCummins/clgen.git"
    }
    opts {
      key: "version"
      value: "0.4.0.dev0"
    }
  }
  harness {
    name: "cldrive"
    opts {
      key: "git_commit"
      value: "9556e7112ba2bd6f79ee59eef74f0a2304efa007"
    }
    opts {
      key: "git_remote"
      value: "https://github.com/ChrisCummins/clgen.git"
    }
    opts {
      key: "timeout_seconds"
      value: "60"
    }
    opts {
      key: "version"
      value: "0.4.0.dev0"
    }
  }
  inputs {
    key: "gsize"
    value: "1,1,1"
  }
  inputs {
    key: "lsize"
    value: "1,1,1"
  }
  inputs {
    key: "src"
    value: "__kernel void A(__global float4* a, int b, int c, int d, float e, float f) {\n  unsigned int g = get_global_id(0);\n  unsigned int h = get_global_id(1);\n\n  unsigned int i = h * d + g + c;\n  g += g * h;\n\n  e[f + g * b] = a[g + e];\n  barrier(1);\n\n  f = d;\n  e = a + c;\n  if (e < f) {\n    a[e] = h, a[e] = g;\n  } else if (f == (int)c - 1) {\n    b[e] = a[e];\n    b[e] += f;\n    b[e] = b[e];\n  }\n}"
  }
  profiling_events {
    client: "cc1"
    type: "generation"
    duration_ms: 838
    event_start_epoch_ms: 1500903267000
  }
}
testbed {
  toolchain: "opencl"
  name: "codeplay_cpu"
  opts {
    key: "driver_version"
    value: "1.14"
  }
  opts {
    key: "host"
    value: "Ubuntu 16.04 64bit"
  }
  opts {
    key: "opencl_device"
    value: "Codeplay Software Ltd. - host CPU"
  }
  opts {
    key: "opencl_devtype"
    value: "CPU"
  }
  opts {
    key: "opencl_opt"
    value: "disabled"
  }
  opts {
    key: "opencl_platform"
    value: "ComputeAorta"
  }
  opts {
    key: "opencl_version"
    value: "1.2"
  }
}
returncode: 1
outputs {
  key: "stderr"
  value: "[cldrive] Platform: ComputeAorta\n[cldrive] Device: Codeplay Software Ltd. - host CPU\n[cldrive] OpenCL optimizations: off\nkernel.opencl:6:4: error: subscripted value is not an array, pointer, or vector\n  e[f + g * b] = a[g + e];\n  ~^~~~~~~~~~\nkernel.opencl:6:19: error: array subscript is not an integer\n  e[f + g * b] = a[g + e];\n                  ^~~~~~\nkernel.opencl:9:5: error: assigning to \'float\' from incompatible type \'__global float4 *\'\n  e = a + c;\n    ^ ~~~~~\nkernel.opencl:11:6: error: array subscript is not an integer\n    a[e] = h, a[e] = g;\n     ^~\nkernel.opencl:11:16: error: array subscript is not an integer\n    a[e] = h, a[e] = g;\n               ^~\nkernel.opencl:13:6: error: subscripted value is not an array, pointer, or vector\n    b[e] = a[e];\n    ~^~\nkernel.opencl:13:13: error: array subscript is not an integer\n    b[e] = a[e];\n            ^~\nkernel.opencl:14:6: error: subscripted value is not an array, pointer, or vector\n    b[e] += f;\n    ~^~\nkernel.opencl:15:6: error: subscripted value is not an array, pointer, or vector\n    b[e] = b[e];\n    ~^~\nkernel.opencl:15:13: error: subscripted value is not an array, pointer, or vector\n    b[e] = b[e];\n           ~^~\nclBuildProgram CL_BUILD_PROGRAM_FAILURE\n"
}
outputs {
  key: "stdout"
  value: ""
}
profiling_events {
  client: "cc1"
  type: "runtime"
  duration_ms: 48
  event_start_epoch_ms: 1500936719000
}
