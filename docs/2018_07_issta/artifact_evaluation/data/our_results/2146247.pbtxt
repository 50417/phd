testcase {
  toolchain: "opencl"
  generator {
    name: "clgen"
    opts {
      key: "git_commit"
      value: "9556e7112ba2bd6f79ee59eef74f0a2304efa007"
    }
    opts {
      key: "git_remote"
      value: "https://github.com/ChrisCummins/clgen.git"
    }
    opts {
      key: "version"
      value: "0.4.0.dev0"
    }
  }
  harness {
    name: "cldrive"
    opts {
      key: "git_commit"
      value: "9556e7112ba2bd6f79ee59eef74f0a2304efa007"
    }
    opts {
      key: "git_remote"
      value: "https://github.com/ChrisCummins/clgen.git"
    }
    opts {
      key: "timeout_seconds"
      value: "60"
    }
    opts {
      key: "version"
      value: "0.4.0.dev0"
    }
  }
  inputs {
    key: "gsize"
    value: "128,16,1"
  }
  inputs {
    key: "lsize"
    value: "32,1,1"
  }
  inputs {
    key: "src"
    value: "__kernel void A(__global float4* a, __global float4* b, __global float2* c) {\n  if (get_global_id(0) == 0) {\n    *b = __builtin_astype(d, uint4);\n    d = complexLoadHack(a);\n  }\n\n  uint4 d = b[d], e = 1, f ) << 3U;\n\n  return c[0];\n}"
  }
  profiling_events {
    client: "cc1"
    type: "generation"
    duration_ms: 498
    event_start_epoch_ms: 1500150564000
  }
}
testbed {
  toolchain: "opencl"
  name: "oclgrind_cpu"
  opts {
    key: "driver_version"
    value: "Oclgrind 16.10"
  }
  opts {
    key: "host"
    value: "Ubuntu 16.04 64bit"
  }
  opts {
    key: "opencl_device"
    value: "Oclgrind Simulator"
  }
  opts {
    key: "opencl_devtype"
    value: "Emulator"
  }
  opts {
    key: "opencl_opt"
    value: "enabled"
  }
  opts {
    key: "opencl_platform"
    value: "Oclgrind"
  }
  opts {
    key: "opencl_version"
    value: "1.2"
  }
}
returncode: -6
outputs {
  key: "stderr"
  value: "[cldrive] Platform: Oclgrind\n[cldrive] Device: Oclgrind Simulator\n[cldrive] OpenCL optimizations: on\nUnknown builtin type!\nUNREACHABLE executed at /home/cec/src/project_b/lib/clgen/native/llvm/3.9.0/src/tools/clang/lib/AST/ASTContext.cpp:1588!\ntimeout: the monitored command dumped core\n"
}
outputs {
  key: "stdout"
  value: ""
}
profiling_events {
  client: "cc1"
  type: "runtime"
  duration_ms: 145
  event_start_epoch_ms: 1500156695000
}
