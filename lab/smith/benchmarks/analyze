#!/usr/bin/env python3
#
# kernel,transfer,wgsize,runtime
#
from argparse import ArgumentParser

import csv
import fileinput
import numpy as np
import os
import re
import shutil
import sqlite3
import sys

import labm8
from labm8 import math as labmath

import smith
from smith import clutil

def parse_cecl_log(log):
    lines = []

    insrc = False
    srcbuf = ''
    for line in log:
        if line.strip() == 'BEGIN PROGRAM SOURCE':
            insrc = True
        elif line.strip() == 'END PROGRAM SOURCE':
            insrc = False
            kernels = clutil.get_cl_kernels(srcbuf)
            names = [x.split()[2].split('(')[0] for x in kernels]
            lines[-1].append(dict(zip(names, kernels)))
            srcbuf = ''
        elif insrc:
            srcbuf += line
        else:
            components = [x.strip() for x in line.split(';')]
            if components[0]:
                lines.append(components)
    return lines

def process_cecl_log(log):
    for line in parse_cecl_log(log):
        if line[0] == 'clCreateProgramWithSource':
            print("SOURCE kernels:", ' '.join(line[1].keys()))

        if line[0] == 'clEnqueueNDRangeKernel':
            print(line[1])

def main():
    parser = ArgumentParser()
    args = parser.parse_args()

    process_cecl_log(sys.stdin)



if __name__ == "__main__":
    main()
