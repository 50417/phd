#!/usr/bin/env bash
set -eu

usage() {
    echo "Usage: $0 <cpu|gpu> <devname> <benchmarks-dir>"
    echo
    echo "Run cldrive over benchmarks directory. Arguments:"
    echo
    echo "  <cpu|gpu>         OpenCL device type"
    echo "  <devname>         Device name (e.g. 'intel', 'nvidia')"
    echo "  <benchmarks-dir>  Root of benchmarks directory"
}


main() {
    if [[ $# -ne 3 ]]; then
        usage >&2
        exit 1
    fi

    local devtype=$1
    local devname=$2
    local benchmarks_dir=$3

    local kernels_dir=$benchmarks_dir/kernels
    local results_path=$benchmarks_dir/$devname.csv
    local errors_path=$benchmarks_dir/$devname-errors.csv

    if [ ! -d $benchmarks_dir ]; then
        echo "fatal: '$benchmarks_dir' not found!" >&2
        exit 1
    fi
    if [ ! -d $kernels_dir ]; then
        echo "fatal: '$kernels_dir' not found!" >&2
        exit 1
    fi

    touch $results_path
    touch $errors_path

    local nfiles=$(find $kernels_dir -name '*.cl' -type f | wc -l)

    echo -n "building job list for $results_path ... "
    jobslist=$(./mkjoblist $kernels_dir $results_path $errors_path)
    num_jobs=$(echo "$jobslist" | wc -l)
    echo "$num_jobs jobs"

    local i=0
    for job in ${jobslist[@]}; do
        local file=$kernels_dir/$(echo $job | cut -d',' -f1)
        local dsize=$(echo $job | cut -d',' -f2)

        i=$((i+1))
        local perc_done=$(echo "($i / $num_jobs) * 100" | bc -l | xargs printf '%.2f%%')

        echo "$(tput bold)$(tput setaf 1)$(date)$(tput sgr0) job [$i/$num_jobs] $perc_done ... $devtype $dsize $(basename $file)"
        ./driver $devtype $dsize $file >> $results_path 2>> $errors_path
    done
}
main $@
