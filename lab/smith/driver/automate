#!/usr/bin/env bash
set -eu

usage() {
    echo "Usage: $0 <cpu|gpu> <opencl-dir> <results-base>"
}

DSIZES=(12 24 64 102 162 408 1020)


drive_file_dsize() {
    if [[ $HOSTNAME == "monza" ]]; then
        echo "monza"
    elif grep "diana" /etc/hosts &>/dev/null ; then
        echo "diana"
    else
        echo "fatal: unknown host!" >&2
        exit 1
    fi
}


get_joblist() {
    local in_dir=$1
    local results_path=$2

    set +e
    for f in $(find $in_dir -name '*.cl' -type f); do
        base=$(basename $f)
        for dsize in ${DSIZES[@]}; do
            has_result=$(awk -F "," '{print $1,$2}' < $results_path | grep "$dsize $base")
            if [[ "$has_result" == "" ]]; then
                echo "$f,$dsize"
            fi
        done
    done
    set -e
}

main() {
    if [[ $# -ne 3 ]]; then
        usage >&2
        exit 1
    fi

    local devtype=$1
    local in_dir=$2
    local results_path=$3
    local nfiles=$(find $in_dir -name '*.cl' -type f | wc -l)

    echo -n "building job list for $results_path ... "
    jobslist=$(get_joblist $in_dir $results_path)
    num_jobs=$(echo "$jobslist" | wc -l)
    echo "$num_jobs jobs"

    # shuffle job list
    jobslist=$(echo "$jobslist" | perl -MList::Util -e 'print List::Util::shuffle <>')

    local i=0
    for job in ${jobslist[@]}; do
        local file=$(echo $job | cut -d',' -f1)
        local dsize=$(echo $job | cut -d',' -f2)

        i=$((i+1))
        local perc_done=$(echo "($i / $num_jobs) * 100" | bc -l | xargs printf '%.2f%%')

        echo "$(tput bold)$(tput setaf 1)$(date)$(tput sgr0) job [$i/$num_jobs] $perc_done ... $devtype $dsize $(basename $file)"
        ./driver $devtype $dsize $file >> $results_path 2>/dev/null
    done
}
main $@
