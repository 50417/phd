#!/usr/bin/env python
#
# Copyright 2016 Chris Cummins <chrisc.101@gmail.com>.
#
# This file is part of CLgen.
#
# CLgen is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CLgen is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CLgen.  If not, see <http://www.gnu.org/licenses/>.
#
from __future__ import print_function

import os

from sys import exit, stderr

import pyopencl as cl

import clgen
from clgen import cli
from clgen import cldrive

__description__ = """
Drive generated OpenCL kernels.
"""


def main():
    parser = cli.ArgumentParser(description=__description__)
    parser.add_argument('input', help='path to input')
    parser.add_argument('-f', action='store_true', help='treat input as file')
    parser.add_argument('-s', '--strict', action='store_true', default=False,
                        help='reject any kernels which do not validate')
    parser.add_argument('--cpu', action='store_true', default=False,
                        help='execute on CPU (default: no)')
    parser.add_argument('--gpu', action='store_true', default=False,
                        help='execute on GPU (default: yes)')
    parser.add_argument('--fatal-errors', action="store_true", default=False,
                        help="exit on failure")
    args = parser.parse_args()

    input_path = args.input
    file_mode = args.f
    use_cpu = args.cpu  # default is gpu
    strict = args.strict

    if 'DSIZE' in os.environ:
        dsize = int(os.environ['DSIZE'])
        size = dsize
    else:
        size = None

    devtype = cl.device_type.CPU if use_cpu else cl.device_type.GPU

    kwargs = {
        "size": size,
        "devtype": devtype,
        "must_validate": strict,
        "fatal_errors": args.fatal_errors
    }

    if file_mode:
        cli.main(cldrive.file, input_path, **kwargs)
    else:
        cli.main(cldrive.directory, input_path, **kwargs)


if __name__ == '__main__':
    main()
