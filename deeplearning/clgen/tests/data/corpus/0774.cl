__kernel __attribute__((reqd_work_group_size(1, 1, 1))) void fn_A(__constant uint* A, __global uint* B, uint C) {
  uint D = 0;

  uint E = 0;
  for (uint F = 0; F < C; ++F) {
    do {
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      E = A[E];
      D += E;
    } while (E);
  }
  *B = D;
}