constant const int gb_A[] = {
    10082, 6554,  10082, 6554,  6554,  4194,  6554,  4194,  10082, 6554,  10082, 6554,  6554,  4194,  6554,  4194,  10082, 6554,  10082, 6554,  6554,  4194,  6554,  4194,  10082, 6554,  10082, 6554,  6554,  4194,  6554,  4194,  10082, 6554,  10082, 6554,  6554,  4194,  6554,  4194,  10082, 6554,  10082, 6554,  6554,  4194,  6554,  4194,  10082, 6554,  10082, 6554,  6554,  4194,  6554,  4194,  10082, 6554,  10082, 6554,  6554,  4194,  6554,  4194,  9362,  5825,  9362,  5825,  5825,  3647,  5825,
    3647,  9362,  5825,  9362,  5825,  5825,  3647,  5825,  3647,  9362,  5825,  9362,  5825,  5825,  3647,  5825,  3647,  9362,  5825,  9362,  5825,  5825,  3647,  5825,  3647,  9362,  5825,  9362,  5825,  5825,  3647,  5825,  3647,  9362,  5825,  9362,  5825,  5825,  3647,  5825,  3647,  9362,  5825,  9362,  5825,  5825,  3647,  5825,  3647,  9362,  5825,  9362,  5825,  5825,  3647,  5825,  3647,  26214, 16132, 26214, 16132, 16132, 10486, 16132, 10486, 26214, 16132, 26214, 16132, 16132, 10486,
    16132, 10486, 26214, 16132, 26214, 16132, 16132, 10486, 16132, 10486, 26214, 16132, 26214, 16132, 16132, 10486, 16132, 10486, 26214, 16132, 26214, 16132, 16132, 10486, 16132, 10486, 26214, 16132, 26214, 16132, 16132, 10486, 16132, 10486, 26214, 16132, 26214, 16132, 16132, 10486, 16132, 10486, 26214, 16132, 26214, 16132, 16132, 10486, 16132, 10486, 23832, 14980, 23832, 14980, 14980, 9320,  14980, 9320,  23832, 14980, 23832, 14980, 14980, 9320,  14980, 9320,  23832, 14980, 23832, 14980, 14980,
    9320,  14980, 9320,  23832, 14980, 23832, 14980, 14980, 9320,  14980, 9320,  23832, 14980, 23832, 14980, 14980, 9320,  14980, 9320,  23832, 14980, 23832, 14980, 14980, 9320,  14980, 9320,  23832, 14980, 23832, 14980, 14980, 9320,  14980, 9320,  23832, 14980, 23832, 14980, 14980, 9320,  14980, 9320,  20164, 13108, 20164, 13108, 13108, 8388,  13108, 8388,  20164, 13108, 20164, 13108, 13108, 8388,  13108, 8388,  20164, 13108, 20164, 13108, 13108, 8388,  13108, 8388,  20164, 13108, 20164, 13108,
    13108, 8388,  13108, 8388,  20164, 13108, 20164, 13108, 13108, 8388,  13108, 8388,  20164, 13108, 20164, 13108, 13108, 8388,  13108, 8388,  20164, 13108, 20164, 13108, 13108, 8388,  13108, 8388,  20164, 13108, 20164, 13108, 13108, 8388,  13108, 8388,  18724, 11650, 18724, 11650, 11650, 7294,  11650, 7294,  18724, 11650, 18724, 11650, 11650, 7294,  11650, 7294,  18724, 11650, 18724, 11650, 11650, 7294,  11650, 7294,  18724, 11650, 18724, 11650, 11650, 7294,  11650, 7294,  18724, 11650, 18724,
    11650, 11650, 7294,  11650, 7294,  18724, 11650, 18724, 11650, 11650, 7294,  11650, 7294,  18724, 11650, 18724, 11650, 11650, 7294,  11650, 7294,  18724, 11650, 18724, 11650, 11650, 7294,  11650, 7294,  16384, 10486, 16384, 10486, 10486, 6710,  10486, 6710,  16384, 10486, 16384, 10486, 10486, 6710,  10486, 6710,  16384, 10486, 16384, 10486, 10486, 6710,  10486, 6710,  16384, 10486, 16384, 10486, 10486, 6710,  10486, 6710,  16384, 10486, 16384, 10486, 10486, 6710,  10486, 6710,  16384, 10486,
    16384, 10486, 10486, 6710,  10486, 6710,  16384, 10486, 16384, 10486, 10486, 6710,  10486, 6710,  16384, 10486, 16384, 10486, 10486, 6710,  10486, 6710,  14564, 9118,  14564, 9118,  9118,  5786,  9118,  5786,  14564, 9118,  14564, 9118,  9118,  5786,  9118,  5786,  14564, 9118,  14564, 9118,  9118,  5786,  9118,  5786,  14564, 9118,  14564, 9118,  9118,  5786,  9118,  5786,  14564, 9118,  14564, 9118,  9118,  5786,  9118,  5786,  14564, 9118,  14564, 9118,  9118,  5786,  9118,  5786,  14564,
    9118,  14564, 9118,  9118,  5786,  9118,  5786,  14564, 9118,  14564, 9118,  9118,  5786,  9118,  5786,  13107, 8066,  13107, 8066,  8066,  5243,  8066,  5243,  13107, 8066,  13107, 8066,  8066,  5243,  8066,  5243,  13107, 8066,  13107, 8066,  8066,  5243,  8066,  5243,  13107, 8066,  13107, 8066,  8066,  5243,  8066,  5243,  13107, 8066,  13107, 8066,  8066,  5243,  8066,  5243,  13107, 8066,  13107, 8066,  8066,  5243,  8066,  5243,  13107, 8066,  13107, 8066,  8066,  5243,  8066,  5243,
    13107, 8066,  13107, 8066,  8066,  5243,  8066,  5243,  11916, 7490,  11916, 7490,  7490,  4660,  7490,  4660,  11916, 7490,  11916, 7490,  7490,  4660,  7490,  4660,  11916, 7490,  11916, 7490,  7490,  4660,  7490,  4660,  11916, 7490,  11916, 7490,  7490,  4660,  7490,  4660,  11916, 7490,  11916, 7490,  7490,  4660,  7490,  4660,  11916, 7490,  11916, 7490,  7490,  4660,  7490,  4660,  11916, 7490,  11916, 7490,  7490,  4660,  7490,  4660,  11916, 7490,  11916, 7490,  7490,  4660,  7490,
    4660,  4681,  2913,  4681,  2913,  2913,  1824,  2913,  1824,  4681,  2913,  4681,  2913,  2913,  1824,  2913,  1824,  4681,  2913,  4681,  2913,  2913,  1824,  2913,  1824,  4681,  2913,  4681,  2913,  2913,  1824,  2913,  1824,  4681,  2913,  4681,  2913,  2913,  1824,  2913,  1824,  4681,  2913,  4681,  2913,  2913,  1824,  2913,  1824,  4681,  2913,  4681,  2913,  2913,  1824,  2913,  1824,  4681,  2913,  4681,  2913,  2913,  1824,  2913,  1824,  4096,  2622,  4096,  2622,  2622,  1678,
    2622,  1678,  4096,  2622,  4096,  2622,  2622,  1678,  2622,  1678,  4096,  2622,  4096,  2622,  2622,  1678,  2622,  1678,  4096,  2622,  4096,  2622,  2622,  1678,  2622,  1678,  4096,  2622,  4096,  2622,  2622,  1678,  2622,  1678,  4096,  2622,  4096,  2622,  2622,  1678,  2622,  1678,  4096,  2622,  4096,  2622,  2622,  1678,  2622,  1678,  4096,  2622,  4096,  2622,  2622,  1678,  2622,  1678,  8192,  5243,  8192,  5243,  5243,  3355,  5243,  3355,  8192,  5243,  8192,  5243,  5243,
    3355,  5243,  3355,  8192,  5243,  8192,  5243,  5243,  3355,  5243,  3355,  8192,  5243,  8192,  5243,  5243,  3355,  5243,  3355,  8192,  5243,  8192,  5243,  5243,  3355,  5243,  3355,  8192,  5243,  8192,  5243,  5243,  3355,  5243,  3355,  8192,  5243,  8192,  5243,  5243,  3355,  5243,  3355,  8192,  5243,  8192,  5243,  5243,  3355,  5243,  3355,  7282,  4559,  7282,  4559,  4559,  2893,  4559,  2893,  7282,  4559,  7282,  4559,  4559,  2893,  4559,  2893,  7282,  4559,  7282,  4559,
    4559,  2893,  4559,  2893,  7282,  4559,  7282,  4559,  4559,  2893,  4559,  2893,  7282,  4559,  7282,  4559,  4559,  2893,  4559,  2893,  7282,  4559,  7282,  4559,  4559,  2893,  4559,  2893,  7282,  4559,  7282,  4559,  4559,  2893,  4559,  2893,  7282,  4559,  7282,  4559,  4559,  2893,  4559,  2893,  6554,  4033,  6554,  4033,  4033,  2622,  4033,  2622,  6554,  4033,  6554,  4033,  4033,  2622,  4033,  2622,  6554,  4033,  6554,  4033,  4033,  2622,  4033,  2622,  6554,  4033,  6554,
    4033,  4033,  2622,  4033,  2622,  6554,  4033,  6554,  4033,  4033,  2622,  4033,  2622,  6554,  4033,  6554,  4033,  4033,  2622,  4033,  2622,  6554,  4033,  6554,  4033,  4033,  2622,  4033,  2622,  6554,  4033,  6554,  4033,  4033,  2622,  4033,  2622,  3277,  2017,  3277,  2017,  2017,  1311,  2017,  1311,  3277,  2017,  3277,  2017,  2017,  1311,  2017,  1311,  3277,  2017,  3277,  2017,  2017,  1311,  2017,  1311,  3277,  2017,  3277,  2017,  2017,  1311,  2017,  1311,  3277,  2017,
    3277,  2017,  2017,  1311,  2017,  1311,  3277,  2017,  3277,  2017,  2017,  1311,  2017,  1311,  3277,  2017,  3277,  2017,  2017,  1311,  2017,  1311,  3277,  2017,  3277,  2017,  2017,  1311,  2017,  1311,  2979,  1873,  2979,  1873,  1873,  1165,  1873,  1165,  2979,  1873,  2979,  1873,  1873,  1165,  1873,  1165,  2979,  1873,  2979,  1873,  1873,  1165,  1873,  1165,  2979,  1873,  2979,  1873,  1873,  1165,  1873,  1165,  2979,  1873,  2979,  1873,  1873,  1165,  1873,  1165,  2979,
    1873,  2979,  1873,  1873,  1165,  1873,  1165,  2979,  1873,  2979,  1873,  1873,  1165,  1873,  1165,  2979,  1873,  2979,  1873,  1873,  1165,  1873,  1165,  5958,  3745,  5958,  3745,  3745,  2330,  3745,  2330,  5958,  3745,  5958,  3745,  3745,  2330,  3745,  2330,  5958,  3745,  5958,  3745,  3745,  2330,  3745,  2330,  5958,  3745,  5958,  3745,  3745,  2330,  3745,  2330,  5958,  3745,  5958,  3745,  3745,  2330,  3745,  2330,  5958,  3745,  5958,  3745,  3745,  2330,  3745,  2330,
    5958,  3745,  5958,  3745,  3745,  2330,  3745,  2330,  5958,  3745,  5958,  3745,  3745,  2330,  3745,  2330,  5041,  3277,  5041,  3277,  3277,  2097,  3277,  2097,  5041,  3277,  5041,  3277,  3277,  2097,  3277,  2097,  5041,  3277,  5041,  3277,  3277,  2097,  3277,  2097,  5041,  3277,  5041,  3277,  3277,  2097,  3277,  2097,  5041,  3277,  5041,  3277,  3277,  2097,  3277,  2097,  5041,  3277,  5041,  3277,  3277,  2097,  3277,  2097,  5041,  3277,  5041,  3277,  3277,  2097,  3277,
    2097,  5041,  3277,  5041,  3277,  3277,  2097,  3277,  2097,  3641,  2280,  3641,  2280,  2280,  1447,  2280,  1447,  3641,  2280,  3641,  2280,  2280,  1447,  2280,  1447,  3641,  2280,  3641,  2280,  2280,  1447,  2280,  1447,  3641,  2280,  3641,  2280,  2280,  1447,  2280,  1447,  3641,  2280,  3641,  2280,  2280,  1447,  2280,  1447,  3641,  2280,  3641,  2280,  2280,  1447,  2280,  1447,  3641,  2280,  3641,  2280,  2280,  1447,  2280,  1447,  3641,  2280,  3641,  2280,  2280,  1447,
    2280,  1447,  1821,  1140,  1821,  1140,  1140,  723,   1140,  723,   1821,  1140,  1821,  1140,  1140,  723,   1140,  723,   1821,  1140,  1821,  1140,  1140,  723,   1140,  723,   1821,  1140,  1821,  1140,  1140,  723,   1140,  723,   1821,  1140,  1821,  1140,  1140,  723,   1140,  723,   1821,  1140,  1821,  1140,  1140,  723,   1140,  723,   1821,  1140,  1821,  1140,  1140,  723,   1140,  723,   1821,  1140,  1821,  1140,  1140,  723,   1140,  723,   1638,  1008,  1638,  1008,  1008,
    655,   1008,  655,   1638,  1008,  1638,  1008,  1008,  655,   1008,  655,   1638,  1008,  1638,  1008,  1008,  655,   1008,  655,   1638,  1008,  1638,  1008,  1008,  655,   1008,  655,   1638,  1008,  1638,  1008,  1008,  655,   1008,  655,   1638,  1008,  1638,  1008,  1008,  655,   1008,  655,   1638,  1008,  1638,  1008,  1008,  655,   1008,  655,   1638,  1008,  1638,  1008,  1008,  655,   1008,  655,   1490,  936,   1490,  936,   936,   583,   936,   583,   1490,  936,   1490,  936,
    936,   583,   936,   583,   1490,  936,   1490,  936,   936,   583,   936,   583,   1490,  936,   1490,  936,   936,   583,   936,   583,   1490,  936,   1490,  936,   936,   583,   936,   583,   1490,  936,   1490,  936,   936,   583,   936,   583,   1490,  936,   1490,  936,   936,   583,   936,   583,   1490,  936,   1490,  936,   936,   583,   936,   583,   2521,  1639,  2521,  1639,  1639,  1049,  1639,  1049,  2521,  1639,  2521,  1639,  1639,  1049,  1639,  1049,  2521,  1639,  2521,
    1639,  1639,  1049,  1639,  1049,  2521,  1639,  2521,  1639,  1639,  1049,  1639,  1049,  2521,  1639,  2521,  1639,  1639,  1049,  1639,  1049,  2521,  1639,  2521,  1639,  1639,  1049,  1639,  1049,  2521,  1639,  2521,  1639,  1639,  1049,  1639,  1049,  2521,  1639,  2521,  1639,  1639,  1049,  1639,  1049,  1170,  728,   1170,  728,   728,   456,   728,   456,   1170,  728,   1170,  728,   728,   456,   728,   456,   1170,  728,   1170,  728,   728,   456,   728,   456,   1170,  728,
    1170,  728,   728,   456,   728,   456,   1170,  728,   1170,  728,   728,   456,   728,   456,   1170,  728,   1170,  728,   728,   456,   728,   456,   1170,  728,   1170,  728,   728,   456,   728,   456,   1170,  728,   1170,  728,   728,   456,   728,   456,   1024,  655,   1024,  655,   655,   419,   655,   419,   1024,  655,   1024,  655,   655,   419,   655,   419,   1024,  655,   1024,  655,   655,   419,   655,   419,   1024,  655,   1024,  655,   655,   419,   655,   419,   1024,
    655,   1024,  655,   655,   419,   655,   419,   1024,  655,   1024,  655,   655,   419,   655,   419,   1024,  655,   1024,  655,   655,   419,   655,   419,   1024,  655,   1024,  655,   655,   419,   655,   419,   2341,  1456,  2341,  1456,  1456,  912,   1456,  912,   2341,  1456,  2341,  1456,  1456,  912,   1456,  912,   2341,  1456,  2341,  1456,  1456,  912,   1456,  912,   2341,  1456,  2341,  1456,  1456,  912,   1456,  912,   2341,  1456,  2341,  1456,  1456,  912,   1456,  912,
    2341,  1456,  2341,  1456,  1456,  912,   1456,  912,   2341,  1456,  2341,  1456,  1456,  912,   1456,  912,   2341,  1456,  2341,  1456,  1456,  912,   1456,  912,   2048,  1311,  2048,  1311,  1311,  839,   1311,  839,   2048,  1311,  2048,  1311,  1311,  839,   1311,  839,   2048,  1311,  2048,  1311,  1311,  839,   1311,  839,   2048,  1311,  2048,  1311,  1311,  839,   1311,  839,   2048,  1311,  2048,  1311,  1311,  839,   1311,  839,   2048,  1311,  2048,  1311,  1311,  839,   1311,
    839,   2048,  1311,  2048,  1311,  1311,  839,   1311,  839,   2048,  1311,  2048,  1311,  1311,  839,   1311,  839,   1260,  819,   1260,  819,   819,   524,   819,   524,   1260,  819,   1260,  819,   819,   524,   819,   524,   1260,  819,   1260,  819,   819,   524,   819,   524,   1260,  819,   1260,  819,   819,   524,   819,   524,   1260,  819,   1260,  819,   819,   524,   819,   524,   1260,  819,   1260,  819,   819,   524,   819,   524,   1260,  819,   1260,  819,   819,   524,
    819,   524,   1260,  819,   1260,  819,   819,   524,   819,   524,   0630,  410,   630,   410,   410,   262,   410,   262,   630,   410,   630,   410,   410,   262,   410,   262,   630,   410,   630,   410,   410,   262,   410,   262,   630,   410,   630,   410,   410,   262,   410,   262,   630,   410,   630,   410,   410,   262,   410,   262,   630,   410,   630,   410,   410,   262,   410,   262,   630,   410,   630,   410,   410,   262,   410,   262,   630,   410,   630,   410,   410,
    262,   410,   262,   585,   364,   585,   364,   364,   228,   364,   228,   585,   364,   585,   364,   364,   228,   364,   228,   585,   364,   585,   364,   364,   228,   364,   228,   585,   364,   585,   364,   364,   228,   364,   228,   585,   364,   585,   364,   364,   228,   364,   228,   585,   364,   585,   364,   364,   228,   364,   228,   585,   364,   585,   364,   364,   228,   364,   228,   585,   364,   585,   364,   364,   228,   364,   228,   512,   328,   512,   328,
    328,   210,   328,   210,   512,   328,   512,   328,   328,   210,   328,   210,   512,   328,   512,   328,   328,   210,   328,   210,   512,   328,   512,   328,   328,   210,   328,   210,   512,   328,   512,   328,   328,   210,   328,   210,   512,   328,   512,   328,   328,   210,   328,   210,   512,   328,   512,   328,   328,   210,   328,   210,   512,   328,   512,   328,   328,   210,   328,   210,   910,   570,   910,   570,   570,   362,   570,   362,   910,   570,   910,
    570,   570,   362,   570,   362,   910,   570,   910,   570,   570,   362,   570,   362,   910,   570,   910,   570,   570,   362,   570,   362,   910,   570,   910,   570,   570,   362,   570,   362,   910,   570,   910,   570,   570,   362,   570,   362,   910,   570,   910,   570,   570,   362,   570,   362,   910,   570,   910,   570,   570,   362,   570,   362,   819,   504,   819,   504,   504,   328,   504,   328,   819,   504,   819,   504,   504,   328,   504,   328,   819,   504,
    819,   504,   504,   328,   504,   328,   819,   504,   819,   504,   504,   328,   504,   328,   819,   504,   819,   504,   504,   328,   504,   328,   819,   504,   819,   504,   504,   328,   504,   328,   819,   504,   819,   504,   504,   328,   504,   328,   819,   504,   819,   504,   504,   328,   504,   328,   745,   468,   745,   468,   468,   291,   468,   291,   745,   468,   745,   468,   468,   291,   468,   291,   745,   468,   745,   468,   468,   291,   468,   291,   745,
    468,   745,   468,   468,   291,   468,   291,   745,   468,   745,   468,   468,   291,   468,   291,   745,   468,   745,   468,   468,   291,   468,   291,   745,   468,   745,   468,   468,   291,   468,   291,   745,   468,   745,   468,   468,   291,   468,   291,   455,   285,   455,   285,   285,   181,   285,   181,   455,   285,   455,   285,   285,   181,   285,   181,   455,   285,   455,   285,   285,   181,   285,   181,   455,   285,   455,   285,   285,   181,   285,   181,
    455,   285,   455,   285,   285,   181,   285,   181,   455,   285,   455,   285,   285,   181,   285,   181,   455,   285,   455,   285,   285,   181,   285,   181,   455,   285,   455,   285,   285,   181,   285,   181,   410,   252,   410,   252,   252,   164,   252,   164,   410,   252,   410,   252,   252,   164,   252,   164,   410,   252,   410,   252,   252,   164,   252,   164,   410,   252,   410,   252,   252,   164,   252,   164,   410,   252,   410,   252,   252,   164,   252,
    164,   410,   252,   410,   252,   252,   164,   252,   164,   410,   252,   410,   252,   252,   164,   252,   164,   410,   252,   410,   252,   252,   164,   252,   164,   228,   142,   228,   142,   142,   90,    142,   90,    228,   142,   228,   142,   142,   90,    142,   90,    228,   142,   228,   142,   142,   90,    142,   90,    228,   142,   228,   142,   142,   90,    142,   90,    228,   142,   228,   142,   142,   90,    142,   90,    228,   142,   228,   142,   142,   90,
    142,   90,    228,   142,   228,   142,   142,   90,    142,   90,    228,   142,   228,   142,   142,   90,    142,   90,    205,   126,   205,   126,   126,   82,    126,   82,    205,   126,   205,   126,   126,   82,    126,   82,    205,   126,   205,   126,   126,   82,    126,   82,    205,   126,   205,   126,   126,   82,    126,   82,    205,   126,   205,   126,   126,   82,    126,   82,    205,   126,   205,   126,   126,   82,    126,   82,    205,   126,   205,   126,   126,
    82,    126,   82,    205,   126,   205,   126,   126,   82,    126,   82,    372,   234,   372,   234,   234,   146,   234,   146,   372,   234,   372,   234,   234,   146,   234,   146,   372,   234,   372,   234,   234,   146,   234,   146,   372,   234,   372,   234,   234,   146,   234,   146,   372,   234,   372,   234,   234,   146,   234,   146,   372,   234,   372,   234,   234,   146,   234,   146,   372,   234,   372,   234,   234,   146,   234,   146,   372,   234,   372,   234,
    234,   146,   234,   146,   315,   205,   315,   205,   205,   131,   205,   131,   315,   205,   315,   205,   205,   131,   205,   131,   315,   205,   315,   205,   205,   131,   205,   131,   315,   205,   315,   205,   205,   131,   205,   131,   315,   205,   315,   205,   205,   131,   205,   131,   315,   205,   315,   205,   205,   131,   205,   131,   315,   205,   315,   205,   205,   131,   205,   131,   315,   205,   315,   205,   205,   131,   205,   131,   293,   182,   293,
    182,   182,   114,   182,   114,   293,   182,   293,   182,   182,   114,   182,   114,   293,   182,   293,   182,   182,   114,   182,   114,   293,   182,   293,   182,   182,   114,   182,   114,   293,   182,   293,   182,   182,   114,   182,   114,   293,   182,   293,   182,   182,   114,   182,   114,   293,   182,   293,   182,   182,   114,   182,   114,   293,   182,   293,   182,   182,   114,   182,   114,   256,   164,   256,   164,   164,   105,   164,   105,   256,   164,
    256,   164,   164,   105,   164,   105,   256,   164,   256,   164,   164,   105,   164,   105,   256,   164,   256,   164,   164,   105,   164,   105,   256,   164,   256,   164,   164,   105,   164,   105,   256,   164,   256,   164,   164,   105,   164,   105,   256,   164,   256,   164,   164,   105,   164,   105,   256,   164,   256,   164,   164,   105,   164,   105,   186,   117,   186,   117,   117,   73,    117,   73,    186,   117,   186,   117,   117,   73,    117,   73,    186,
    117,   186,   117,   117,   73,    117,   73,    186,   117,   186,   117,   117,   73,    117,   73,    186,   117,   186,   117,   117,   73,    117,   73,    186,   117,   186,   117,   117,   73,    117,   73,    186,   117,   186,   117,   117,   73,    117,   73,    186,   117,   186,   117,   117,   73,    117,   73,    158,   102,   158,   102,   102,   66,    102,   66,    158,   102,   158,   102,   102,   66,    102,   66,    158,   102,   158,   102,   102,   66,    102,   66,
    158,   102,   158,   102,   102,   66,    102,   66,    158,   102,   158,   102,   102,   66,    102,   66,    158,   102,   158,   102,   102,   66,    102,   66,    158,   102,   158,   102,   102,   66,    102,   66,    158,   102,   158,   102,   102,   66,    102,   66,    102,   63,    102,   63,    63,    41,    63,    41,    102,   63,    102,   63,    63,    41,    63,    41,    102,   63,    102,   63,    63,    41,    63,    41,    102,   63,    102,   63,    63,    41,    63,
    41,    102,   63,    102,   63,    63,    41,    63,    41,    102,   63,    102,   63,    63,    41,    63,    41,    102,   63,    102,   63,    63,    41,    63,    41,    102,   63,    102,   63,    63,    41,    63,    41,    93,    59,    93,    59,    59,    36,    59,    36,    93,    59,    93,    59,    59,    36,    59,    36,    93,    59,    93,    59,    59,    36,    59,    36,    93,    59,    93,    59,    59,    36,    59,    36,    93,    59,    93,    59,    59,    36,
    59,    36,    93,    59,    93,    59,    59,    36,    59,    36,    93,    59,    93,    59,    59,    36,    59,    36,    93,    59,    93,    59,    59,    36,    59,    36,    146,   91,    146,   91,    91,    57,    91,    57,    146,   91,    146,   91,    91,    57,    91,    57,    146,   91,    146,   91,    91,    57,    91,    57,    146,   91,    146,   91,    91,    57,    91,    57,    146,   91,    146,   91,    91,    57,    91,    57,    146,   91,    146,   91,    91,
    57,    91,    57,    146,   91,    146,   91,    91,    57,    91,    57,    146,   91,    146,   91,    91,    57,    91,    57,    73,    46,    73,    46,    46,    28,    46,    28,    73,    46,    73,    46,    46,    28,    46,    28,    73,    46,    73,    46,    46,    28,    46,    28,    73,    46,    73,    46,    46,    28,    46,    28,    73,    46,    73,    46,    46,    28,    46,    28,    73,    46,    73,    46,    46,    28,    46,    28,    73,    46,    73,    46,
    46,    28,    46,    28,    73,    46,    73,    46,    46,    28,    46,    28,    128,   82,    128,   82,    82,    52,    82,    52,    128,   82,    128,   82,    82,    52,    82,    52,    128,   82,    128,   82,    82,    52,    82,    52,    128,   82,    128,   82,    82,    52,    82,    52,    128,   82,    128,   82,    82,    52,    82,    52,    128,   82,    128,   82,    82,    52,    82,    52,    128,   82,    128,   82,    82,    52,    82,    52,    128,   82,    128,
    82,    82,    52,    82,    52,    79,    51,    79,    51,    51,    33,    51,    33,    79,    51,    79,    51,    51,    33,    51,    33,    79,    51,    79,    51,    51,    33,    51,    33,    79,    51,    79,    51,    51,    33,    51,    33,    79,    51,    79,    51,    51,    33,    51,    33,    79,    51,    79,    51,    51,    33,    51,    33,    79,    51,    79,    51,    51,    33,    51,    33,    79,    51,    79,    51,    51,    33,    51,    33,    114,   71,
    114,   71,    71,    45,    71,    45,    114,   71,    114,   71,    71,    45,    71,    45,    114,   71,    114,   71,    71,    45,    71,    45,    114,   71,    114,   71,    71,    45,    71,    45,    114,   71,    114,   71,    71,    45,    71,    45,    114,   71,    114,   71,    71,    45,    71,    45,    114,   71,    114,   71,    71,    45,    71,    45,    114,   71,    114,   71,    71,    45,    71,    45,
};

constant const int gb_B[] = {176, 224, 224, 288, 224, 288, 176, 224, 176, 224, 224, 288, 224, 288, 176, 224, 176, 224, 224, 288, 224, 288, 176, 224, 176, 224, 224, 288, 224, 288, 208, 256, 208, 256, 176, 224, 176, 224, 224, 288, 224, 288, 176, 224, 176, 224, 224, 288, 224, 288, 176, 224, 176, 224, 224, 288, 224, 288, 176, 224, 256, 320, 256, 320, 208, 256, 208, 256, 256, 320, 256, 320, 224, 288, 224, 288, 288,
                             368, 288, 368, 224, 288, 224, 288, 288, 368, 288, 368, 224, 288, 224, 288, 224, 288, 288, 368, 288, 368, 224, 288, 224, 288, 288, 368, 288, 368, 256, 320, 256, 320, 320, 400, 320, 400, 256, 320, 256, 320, 320, 400, 288, 368, 368, 464, 368, 464, 288, 368, 288, 368, 368, 464, 368, 464, 288, 368, 288, 368, 368, 464, 368, 464, 288, 368, 288, 368, 368, 464, 368, 464, 320, 400, 256, 320,
                             256, 320, 320, 400, 320, 400, 256, 320, 256, 320, 320, 400, 320, 400, 256, 320, 256, 320, 320, 400, 320, 400, 256, 320, 256, 320, 160, 208, 160, 208, 208, 256, 208, 256, 160, 208, 160, 208, 208, 256, 208, 256, 160, 208, 160, 208, 208, 256, 208, 256, 160, 208, 160, 208, 208, 256, 208, 256, 160, 208, 160, 208, 208, 256, 208, 256, 160, 208, 160, 208, 208, 256, 208, 256, 160, 208, 160,
                             208, 208, 256, 208, 256, 160, 208, 160, 208, 224, 288, 288, 368, 288, 368, 224, 288, 224, 288, 288, 368, 288, 368, 224, 288, 224, 288, 288, 368, 288, 368, 224, 288, 224, 288, 288, 368, 288, 368, 256, 320, 208, 256, 208, 256, 256, 320, 256, 320, 208, 256, 208, 256, 256, 320, 256, 320, 208, 256, 208, 256, 256, 320, 256, 320, 208, 256, 208, 256, 320, 400, 320, 400, 256, 320, 256, 320,
                             320, 400, 320, 400, 256, 320, 256, 320, 320, 400, 320, 400, 288, 368, 288, 368, 368, 464, 368, 464, 288, 368, 176, 224, 176, 224, 224, 288, 224, 288, 208, 256, 208, 256, 256, 320, 256, 320, 208, 256, 208, 256, 256, 320, 256, 320, 208, 256, 208, 256, 256, 320, 288, 368, 288, 368, 368, 464, 368, 464, 288, 368, 288, 368, 368, 464, 368, 464, 288, 368, 288, 368, 368, 464, 368, 464};

constant const int gb_C[] = {
    1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   0,   1,   0,   1,   1,   1,   1,   1,   0,   1,   0,   1,   1,   1,   1,   1,   1,   1,
    1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   0,   1,   0,   1,   1,   1,   1,   1,   0,   1,   0,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   0,   1,   0,   1,   1,   1,   1,   1,   0,   1,   0,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   0,   1,   0,   1,   1,   1,   1,   1,   0,   1,   0,   1,   1,   1,   1,   1,   1,   2,   1,   2,
    2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   1,   2,   1,   2,   2,   3,
    2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   2,   3,   2,   3,   3,   5,   3,   5,   2,   3,   2,   3,   3,   5,   3,   5,   1,   2,   1,   2,   2,   2,   2,   2,   1,   2,   1,   2,   2,   2,   2,   2,   2,   3,   2,   3,   3,   5,   3,   5,   2,   3,   2,   3,   3,   5,   3,   5,   1,   2,   1,   2,   2,   2,   2,   2,   1,   2,   1,   2,   2,   2,   2,   2,   2,   3,   2,   3,   3,   5,   3,   5,
    2,   3,   2,   3,   3,   5,   3,   5,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   2,   3,   2,   3,   3,   5,   3,   5,   2,   3,   2,   3,   3,   5,   3,   5,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   2,   4,   2,   4,   4,   6,   4,   6,   2,   4,   2,   4,   4,   6,   4,   6,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   2,   4,   2,   4,   4,   6,   4,   6,   2,   4,
    2,   4,   4,   6,   4,   6,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   4,   2,   4,   1,   2,   1,   2,   2,   4,   2,   4,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   1,   2,   1,   2,   2,   4,   2,   4,   1,   2,   1,   2,   2,   4,   2,   4,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   2,   3,   2,   3,   3,   4,   3,   4,   2,   3,   2,   3,
    3,   4,   3,   4,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   2,   3,   2,   3,   3,   4,   3,   4,   2,   3,   2,   3,   3,   4,   3,   4,   1,   1,   1,   1,   1,   2,   1,   2,   1,   1,   1,   1,   1,   2,   1,   2,   3,   4,   3,   4,   4,   6,   4,   6,   3,   4,   3,   4,   4,   6,   4,   6,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   3,   4,   3,   4,   4,   6,   4,   6,   3,   4,   3,   4,   4,   6,
    4,   6,   1,   2,   1,   2,   2,   3,   2,   3,   1,   2,   1,   2,   2,   3,   2,   3,   3,   5,   3,   5,   5,   7,   5,   7,   3,   5,   3,   5,   5,   7,   5,   7,   2,   2,   2,   2,   2,   4,   2,   4,   2,   2,   2,   2,   2,   4,   2,   4,   3,   5,   3,   5,   5,   7,   5,   7,   3,   5,   3,   5,   5,   7,   5,   7,   2,   2,   2,   2,   2,   4,   2,   4,   2,   2,   2,   2,   2,   4,   2,   4,   5,   7,   5,   7,   7,   12,  7,   12,  5,   7,   5,   7,   7,   12,  7,   12,
    2,   4,   2,   4,   4,   6,   4,   6,   2,   4,   2,   4,   4,   6,   4,   6,   5,   7,   5,   7,   7,   12,  7,   12,  5,   7,   5,   7,   7,   12,  7,   12,  2,   4,   2,   4,   4,   6,   4,   6,   2,   4,   2,   4,   4,   6,   4,   6,   5,   8,   5,   8,   8,   13,  8,   13,  5,   8,   5,   8,   8,   13,  8,   13,  3,   4,   3,   4,   4,   7,   4,   7,   3,   4,   3,   4,   4,   7,   4,   7,   5,   8,   5,   8,   8,   13,  8,   13,  5,   8,   5,   8,   8,   13,  8,   13,  3,   4,
    3,   4,   4,   7,   4,   7,   3,   4,   3,   4,   4,   7,   4,   7,   3,   5,   3,   5,   5,   8,   5,   8,   3,   5,   3,   5,   5,   8,   5,   8,   2,   3,   2,   3,   3,   4,   3,   4,   2,   3,   2,   3,   3,   4,   3,   4,   3,   5,   3,   5,   5,   8,   5,   8,   3,   5,   3,   5,   5,   8,   5,   8,   2,   3,   2,   3,   3,   4,   3,   4,   2,   3,   2,   3,   3,   4,   3,   4,   4,   6,   4,   6,   6,   9,   6,   9,   4,   6,   4,   6,   6,   9,   6,   9,   2,   3,   2,   3,
    3,   5,   3,   5,   2,   3,   2,   3,   3,   5,   3,   5,   4,   6,   4,   6,   6,   9,   6,   9,   4,   6,   4,   6,   6,   9,   6,   9,   2,   3,   2,   3,   3,   5,   3,   5,   2,   3,   2,   3,   3,   5,   3,   5,   4,   7,   4,   7,   7,   10,  7,   10,  4,   7,   4,   7,   7,   10,  7,   10,  2,   3,   2,   3,   3,   5,   3,   5,   2,   3,   2,   3,   3,   5,   3,   5,   4,   7,   4,   7,   7,   10,  7,   10,  4,   7,   4,   7,   7,   10,  7,   10,  2,   3,   2,   3,   3,   5,
    3,   5,   2,   3,   2,   3,   3,   5,   3,   5,   6,   9,   6,   9,   9,   15,  9,   15,  6,   9,   6,   9,   9,   15,  9,   15,  3,   5,   3,   5,   5,   8,   5,   8,   3,   5,   3,   5,   5,   8,   5,   8,   6,   9,   6,   9,   9,   15,  9,   15,  6,   9,   6,   9,   9,   15,  9,   15,  3,   5,   3,   5,   5,   8,   5,   8,   3,   5,   3,   5,   5,   8,   5,   8,   7,   11,  7,   11,  11,  16,  11,  16,  7,   11,  7,   11,  11,  16,  11,  16,  3,   6,   3,   6,   6,   9,   6,   9,
    3,   6,   3,   6,   6,   9,   6,   9,   7,   11,  7,   11,  11,  16,  11,  16,  7,   11,  7,   11,  11,  16,  11,  16,  3,   6,   3,   6,   6,   9,   6,   9,   3,   6,   3,   6,   6,   9,   6,   9,   11,  16,  11,  16,  16,  26,  16,  26,  11,  16,  11,  16,  16,  26,  16,  26,  6,   9,   6,   9,   9,   13,  9,   13,  6,   9,   6,   9,   9,   13,  9,   13,  11,  16,  11,  16,  16,  26,  16,  26,  11,  16,  11,  16,  16,  26,  16,  26,  6,   9,   6,   9,   9,   13,  9,   13,  6,   9,
    6,   9,   9,   13,  9,   13,  12,  19,  12,  19,  19,  30,  19,  30,  12,  19,  12,  19,  19,  30,  19,  30,  6,   10,  6,   10,  10,  16,  10,  16,  6,   10,  6,   10,  10,  16,  10,  16,  12,  19,  12,  19,  19,  30,  19,  30,  12,  19,  12,  19,  19,  30,  19,  30,  6,   10,  6,   10,  10,  16,  10,  16,  6,   10,  6,   10,  10,  16,  10,  16,  7,   11,  7,   11,  11,  18,  11,  18,  7,   11,  7,   11,  11,  18,  11,  18,  4,   6,   4,   6,   6,   10,  6,   10,  4,   6,   4,   6,
    6,   10,  6,   10,  7,   11,  7,   11,  11,  18,  11,  18,  7,   11,  7,   11,  11,  18,  11,  18,  4,   6,   4,   6,   6,   10,  6,   10,  4,   6,   4,   6,   6,   10,  6,   10,  9,   13,  9,   13,  13,  20,  13,  20,  9,   13,  9,   13,  13,  20,  13,  20,  4,   7,   4,   7,   7,   11,  7,   11,  4,   7,   4,   7,   7,   11,  7,   11,  9,   13,  9,   13,  13,  20,  13,  20,  9,   13,  9,   13,  13,  20,  13,  20,  4,   7,   4,   7,   7,   11,  7,   11,  4,   7,   4,   7,   7,   11,
    7,   11,  9,   15,  9,   15,  15,  24,  15,  24,  9,   15,  9,   15,  15,  24,  15,  24,  5,   8,   5,   8,   8,   12,  8,   12,  5,   8,   5,   8,   8,   12,  8,   12,  9,   15,  9,   15,  15,  24,  15,  24,  9,   15,  9,   15,  15,  24,  15,  24,  5,   8,   5,   8,   8,   12,  8,   12,  5,   8,   5,   8,   8,   12,  8,   12,  13,  21,  13,  21,  21,  33,  21,  33,  13,  21,  13,  21,  21,  33,  21,  33,  7,   11,  7,   11,  11,  17,  11,  17,  7,   11,  7,   11,  11,  17,  11,  17,
    13,  21,  13,  21,  21,  33,  21,  33,  13,  21,  13,  21,  21,  33,  21,  33,  7,   11,  7,   11,  11,  17,  11,  17,  7,   11,  7,   11,  11,  17,  11,  17,  14,  23,  14,  23,  23,  37,  23,  37,  14,  23,  14,  23,  23,  37,  23,  37,  8,   12,  8,   12,  12,  19,  12,  19,  8,   12,  8,   12,  12,  19,  12,  19,  14,  23,  14,  23,  23,  37,  23,  37,  14,  23,  14,  23,  23,  37,  23,  37,  8,   12,  8,   12,  12,  19,  12,  19,  8,   12,  8,   12,  12,  19,  12,  19,  21,  33,
    21,  33,  33,  51,  33,  51,  21,  33,  21,  33,  33,  51,  33,  51,  11,  17,  11,  17,  17,  27,  17,  27,  11,  17,  11,  17,  17,  27,  17,  27,  21,  33,  21,  33,  33,  51,  33,  51,  21,  33,  21,  33,  33,  51,  33,  51,  11,  17,  11,  17,  17,  27,  17,  27,  11,  17,  11,  17,  17,  27,  17,  27,  24,  38,  24,  38,  38,  59,  38,  59,  24,  38,  24,  38,  38,  59,  38,  59,  12,  20,  12,  20,  20,  31,  20,  31,  12,  20,  12,  20,  20,  31,  20,  31,  24,  38,  24,  38,
    38,  59,  38,  59,  24,  38,  24,  38,  38,  59,  38,  59,  12,  20,  12,  20,  20,  31,  20,  31,  12,  20,  12,  20,  20,  31,  20,  31,  17,  26,  17,  26,  26,  41,  26,  41,  17,  26,  17,  26,  26,  41,  26,  41,  9,   14,  9,   14,  14,  21,  14,  21,  9,   14,  9,   14,  14,  21,  14,  21,  17,  26,  17,  26,  26,  41,  26,  41,  17,  26,  17,  26,  26,  41,  26,  41,  9,   14,  9,   14,  14,  21,  14,  21,  9,   14,  9,   14,  14,  21,  14,  21,  18,  30,  18,  30,  30,  47,
    30,  47,  18,  30,  18,  30,  30,  47,  30,  47,  10,  15,  10,  15,  15,  25,  15,  25,  10,  15,  10,  15,  15,  25,  15,  25,  18,  30,  18,  30,  30,  47,  30,  47,  18,  30,  18,  30,  30,  47,  30,  47,  10,  15,  10,  15,  15,  25,  15,  25,  10,  15,  10,  15,  15,  25,  15,  25,  34,  52,  34,  52,  52,  82,  52,  82,  34,  52,  34,  52,  52,  82,  52,  82,  18,  27,  18,  27,  27,  43,  27,  43,  18,  27,  18,  27,  27,  43,  27,  43,  34,  52,  34,  52,  52,  82,  52,  82,
    34,  52,  34,  52,  52,  82,  52,  82,  18,  27,  18,  27,  27,  43,  27,  43,  18,  27,  18,  27,  27,  43,  27,  43,  37,  59,  37,  59,  59,  94,  59,  94,  37,  59,  37,  59,  59,  94,  59,  94,  19,  31,  19,  31,  31,  49,  31,  49,  19,  31,  19,  31,  31,  49,  31,  49,  37,  59,  37,  59,  59,  94,  59,  94,  37,  59,  37,  59,  59,  94,  59,  94,  19,  31,  19,  31,  31,  49,  31,  49,  19,  31,  19,  31,  31,  49,  31,  49,  42,  66,  42,  66,  66,  102, 66,  102, 42,  66,
    42,  66,  66,  102, 66,  102, 22,  34,  22,  34,  34,  54,  34,  54,  22,  34,  22,  34,  34,  54,  34,  54,  42,  66,  42,  66,  66,  102, 66,  102, 42,  66,  42,  66,  66,  102, 66,  102, 22,  34,  22,  34,  34,  54,  34,  54,  22,  34,  22,  34,  34,  54,  34,  54,  26,  43,  26,  43,  43,  66,  43,  66,  26,  43,  26,  43,  43,  66,  43,  66,  14,  22,  14,  22,  22,  34,  22,  34,  14,  22,  14,  22,  22,  34,  22,  34,  26,  43,  26,  43,  43,  66,  43,  66,  26,  43,  26,  43,
    43,  66,  43,  66,  14,  22,  14,  22,  22,  34,  22,  34,  14,  22,  14,  22,  22,  34,  22,  34,  29,  46,  29,  46,  46,  74,  46,  74,  29,  46,  29,  46,  46,  74,  46,  74,  15,  24,  15,  24,  24,  39,  24,  39,  15,  24,  15,  24,  24,  39,  24,  39,  29,  46,  29,  46,  46,  74,  46,  74,  29,  46,  29,  46,  46,  74,  46,  74,  15,  24,  15,  24,  24,  39,  24,  39,  15,  24,  15,  24,  24,  39,  24,  39,  47,  75,  47,  75,  75,  119, 75,  119, 47,  75,  47,  75,  75,  119,
    75,  119, 25,  40,  25,  40,  40,  62,  40,  62,  25,  40,  25,  40,  40,  62,  40,  62,  47,  75,  47,  75,  75,  119, 75,  119, 47,  75,  47,  75,  75,  119, 75,  119, 25,  40,  25,  40,  40,  62,  40,  62,  25,  40,  25,  40,  40,  62,  40,  62,  52,  85,  52,  85,  85,  131, 85,  131, 52,  85,  52,  85,  85,  131, 85,  131, 27,  45,  27,  45,  45,  69,  45,  69,  27,  45,  27,  45,  45,  69,  45,  69,  52,  85,  52,  85,  85,  131, 85,  131, 52,  85,  52,  85,  85,  131, 85,  131,
    27,  45,  27,  45,  45,  69,  45,  69,  27,  45,  27,  45,  45,  69,  45,  69,  58,  92,  58,  92,  92,  147, 92,  147, 58,  92,  58,  92,  92,  147, 92,  147, 30,  48,  30,  48,  48,  77,  48,  77,  30,  48,  30,  48,  48,  77,  48,  77,  58,  92,  58,  92,  92,  147, 92,  147, 58,  92,  58,  92,  92,  147, 92,  147, 30,  48,  30,  48,  48,  77,  48,  77,  30,  48,  30,  48,  48,  77,  48,  77,  68,  105, 68,  105, 105, 164, 105, 164, 68,  105, 68,  105, 105, 164, 105, 164, 36,  55,
    36,  55,  55,  86,  55,  86,  36,  55,  36,  55,  55,  86,  55,  86,  68,  105, 68,  105, 105, 164, 105, 164, 68,  105, 68,  105, 105, 164, 105, 164, 36,  55,  36,  55,  55,  86,  55,  86,  36,  55,  36,  55,  55,  86,  55,  86,  73,  118, 73,  118, 118, 189, 118, 189, 73,  118, 73,  118, 118, 189, 118, 189, 38,  62,  38,  62,  62,  99,  62,  99,  38,  62,  38,  62,  62,  99,  62,  99,  73,  118, 73,  118, 118, 189, 118, 189, 73,  118, 73,  118, 118, 189, 118, 189, 38,  62,  38,  62,
    62,  99,  62,  99,  38,  62,  38,  62,  62,  99,  62,  99,  136, 211, 136, 211, 211, 326, 211, 326, 136, 211, 136, 211, 211, 326, 211, 326, 71,  110, 71,  110, 110, 171, 110, 171, 71,  110, 71,  110, 110, 171, 110, 171, 136, 211, 136, 211, 211, 326, 211, 326, 136, 211, 136, 211, 211, 326, 211, 326, 71,  110, 71,  110, 110, 171, 110, 171, 71,  110, 71,  110, 110, 171, 110, 171, 147, 236, 147, 236, 236, 377, 236, 377, 147, 236, 147, 236, 236, 377, 236, 377, 77,  124, 77,  124, 124, 198,
    124, 198, 77,  124, 77,  124, 124, 198, 124, 198, 147, 236, 147, 236, 236, 377, 236, 377, 147, 236, 147, 236, 236, 377, 236, 377, 77,  124, 77,  124, 124, 198, 124, 198, 77,  124, 77,  124, 124, 198, 124, 198, 84,  131, 84,  131, 131, 205, 131, 205, 84,  131, 84,  131, 131, 205, 131, 205, 44,  69,  44,  69,  69,  107, 69,  107, 44,  69,  44,  69,  69,  107, 69,  107, 84,  131, 84,  131, 131, 205, 131, 205, 84,  131, 84,  131, 131, 205, 131, 205, 44,  69,  44,  69,  69,  107, 69,  107,
    44,  69,  44,  69,  69,  107, 69,  107, 94,  151, 94,  151, 151, 239, 151, 239, 94,  151, 94,  151, 151, 239, 151, 239, 49,  79,  49,  79,  79,  125, 79,  125, 49,  79,  49,  79,  79,  125, 79,  125, 94,  151, 94,  151, 151, 239, 151, 239, 94,  151, 94,  151, 151, 239, 151, 239, 49,  79,  49,  79,  79,  125, 79,  125, 49,  79,  49,  79,  79,  125, 79,  125, 105, 171, 105, 171, 171, 262, 171, 262, 105, 171, 105, 171, 171, 262, 171, 262, 55,  89,  55,  89,  89,  137, 89,  137, 55,  89,
    55,  89,  89,  137, 89,  137, 105, 171, 105, 171, 171, 262, 171, 262, 105, 171, 105, 171, 171, 262, 171, 262, 55,  89,  55,  89,  89,  137, 89,  137, 55,  89,  55,  89,  89,  137, 89,  137, 116, 184, 116, 184, 184, 295, 184, 295, 116, 184, 116, 184, 184, 295, 184, 295, 61,  96,  61,  96,  96,  154, 96,  154, 61,  96,  61,  96,  96,  154, 96,  154, 116, 184, 116, 184, 184, 295, 184, 295, 116, 184, 116, 184, 184, 295, 184, 295, 61,  96,  61,  96,  96,  154, 96,  154, 61,  96,  61,  96,
    96,  154, 96,  154, 231, 364, 231, 364, 364, 597, 364, 597, 231, 364, 231, 364, 364, 597, 364, 597, 121, 191, 121, 191, 191, 313, 191, 313, 121, 191, 121, 191, 191, 313, 191, 313, 231, 364, 231, 364, 364, 597, 364, 597, 231, 364, 231, 364, 364, 597, 364, 597, 121, 191, 121, 191, 191, 313, 191, 313, 121, 191, 121, 191, 191, 313, 191, 313, 272, 422, 272, 422, 422, 652, 422, 652, 272, 422, 272, 422, 422, 652, 422, 652, 143, 221, 143, 221, 221, 341, 221, 341, 143, 221, 143, 221, 221, 341,
    221, 341, 272, 422, 272, 422, 422, 652, 422, 652, 272, 422, 272, 422, 422, 652, 422, 652, 143, 221, 143, 221, 221, 341, 221, 341, 143, 221, 143, 221, 221, 341, 221, 341, 168, 262, 168, 262, 262, 414, 262, 414, 168, 262, 168, 262, 262, 414, 262, 414, 88,  137, 88,  137, 137, 217, 137, 217, 88,  137, 88,  137, 137, 217, 137, 217, 168, 262, 168, 262, 262, 414, 262, 414, 168, 262, 168, 262, 262, 414, 262, 414, 88,  137, 88,  137, 137, 217, 137, 217, 88,  137, 88,  137, 137, 217, 137, 217,
    189, 303, 189, 303, 303, 478, 303, 478, 189, 303, 189, 303, 303, 478, 303, 478, 99,  159, 99,  159, 159, 250, 159, 250, 99,  159, 99,  159, 159, 250, 159, 250, 189, 303, 189, 303, 303, 478, 303, 478, 189, 303, 189, 303, 303, 478, 303, 478, 99,  159, 99,  159, 159, 250, 159, 250, 99,  159, 99,  159, 159, 250, 159, 250, 211, 341, 211, 341, 341, 524, 341, 524, 211, 341, 211, 341, 341, 524, 341, 524, 110, 179, 110, 179, 179, 275, 179, 275, 110, 179, 110, 179, 179, 275, 179, 275, 211, 341,
    211, 341, 341, 524, 341, 524, 211, 341, 211, 341, 341, 524, 341, 524, 110, 179, 110, 179, 179, 275, 179, 275, 110, 179, 110, 179, 179, 275, 179, 275, 295, 467, 295, 467, 467, 768, 467, 768, 295, 467, 295, 467, 467, 768, 467, 768, 154, 245, 154, 245, 245, 402, 245, 402, 154, 245, 154, 245, 245, 402, 245, 402, 295, 467, 295, 467, 467, 768, 467, 768, 295, 467, 295, 467, 467, 768, 467, 768, 154, 245, 154, 245, 245, 402, 245, 402, 154, 245, 154, 245, 245, 402, 245, 402};
int fn_A(int A, int B, int C, int D) {
  int E;

  int F = gb_C[(B - 0) * 16 * 4 + D * 16 + C];
  int G = gb_A[(B - 0) * 16 * 4 + D * 16 + C];
  int H = ((F + (A)) * (G)) >> 16;
  int I = -(((F - (A)) * (G)) >> 16);

  E = A > 0 ? H : I;

  return E;
}

int fn_B(int A, int B, int C, int D) {
  int E;
  const int F = B % 6;
  int G = gb_B[F * 16 * 4 + D * 16 + C];

  const int H = B / 6 - 4;
  const int I = 1 << (-H - 1);

  A = A * G;

  int J = A << H;
  int K = (A + I) >> (-H);

  E = H >= 0 ? J : K;

  return E;
}

kernel void fn_C(global int* A, global int* B, int C) {
  int D = 25;
  int E[64];
  int F[64];

  for (int G = 0; G < 64; G++) {
    F[G] = A[get_global_id(0) + G * 512];
  }

  for (int G = 0; G < 16; G++) {
    int* H;

    H = &F[0];
    E[0] = F[0];
    E[1] = F[1];
    E[2] = F[2];
    E[3] = F[3];
    E[4] = F[4];
    E[5] = F[5];
    E[6] = F[6];
    E[7] = F[7];
    E[8] = F[8];
    E[9] = F[9];
    E[10] = F[10];
    E[11] = F[11];
    E[12] = F[12];
    E[13] = F[13];
    E[14] = F[14];
    E[15] = F[15];
    E[16] = ((E[1])) + ((E[2]));
    E[17] = ((E[0])) + ((E[3]));
    E[18] = ((E[4])) + ((E[7]));
    E[19] = ((E[5])) + ((E[6]));
    E[20] = ((E[8])) + ((E[11]));
    E[21] = ((E[9])) + ((E[10]));
    E[22] = (-(E[13])) + (-(E[14]));
    E[23] = ((E[12])) + ((E[15]));
    E[24] = ((E[1])) + (-(E[2]));
    E[25] = ((E[0])) + (-(E[3]));
    E[26] = (-(E[4])) + ((E[7]));
    E[27] = (-(E[5])) + ((E[6]));
    E[28] = ((E[9])) + (-(E[10]));
    E[29] = ((E[8])) + (-(E[11]));
    E[30] = ((E[12])) + (-(E[15]));
    E[31] = ((E[13])) + (-(E[14]));
    E[32] = ((E[16])) + ((E[17]));
    E[33] = ((E[18])) + ((E[19]));
    E[34] = (-(E[16])) + ((E[17]));
    E[35] = (-(E[18])) + ((E[19]));
    E[36] = (-(E[20])) + ((E[21]));
    E[37] = (-(E[22])) + ((E[23]));
    E[38] = (-(E[20])) + (-(E[21]));
    E[39] = ((E[22])) + ((E[23]));
    E[40] = (-(E[26])) + ((E[27] << 1));
    E[41] = (-(E[26] << 1)) + (-(E[27]));
    E[42] = (-(E[24] << 1)) + ((E[25]));
    E[43] = ((E[24])) + ((E[25] << 1));
    E[44] = ((E[28])) + ((E[29] << 1));
    E[45] = ((E[30])) + (-(E[31] << 1));
    E[46] = ((E[28] << 1)) + (-(E[29]));
    E[47] = ((E[30] << 1)) + ((E[31]));
    E[48] = (-(E[33])) + (-(E[38]));
    E[49] = ((E[33])) + (-(E[38]));
    E[50] = (-(E[35])) + (-(E[36]));
    E[51] = ((E[40])) + (-(E[46]));
    E[52] = (-(E[41])) + (-(E[44]));
    E[53] = ((E[43])) + ((E[47]));
    E[54] = ((E[34])) + ((E[39]));
    E[55] = ((E[32])) + ((E[37]));
    E[56] = ((E[35])) + (-(E[36]));
    E[57] = ((E[34])) + (-(E[39]));
    E[58] = ((E[42])) + ((E[45]));
    E[59] = ((E[32])) + (-(E[37]));
    F[0] = ((E[49])) + ((E[55]));
    F[1] = fn_A((-(E[52])) + ((E[53])), D, 1, 1);
    F[2] = fn_A(((E[50])) + ((E[54])), D, 2, 1);
    F[3] = fn_A(((E[51])) + ((E[58])), D, 3, 1);
    F[4] = fn_A((-(E[48])) + ((E[59] << 1)), D, 4, 1);
    F[5] = fn_A(((E[0] << 2)) + (-(E[3] << 2)) + (-(E[12] << 2)) + ((E[15] << 2)) + ((E[24] << 1)) + (-(E[31] << 1)) + ((E[41])) + (-(E[44])), D, 5, 1);
    F[6] = fn_A((-(E[56])) + ((E[57] << 1)), D, 6, 1);
    F[7] = fn_A((-(E[1] << 2)) + ((E[2] << 2)) + ((E[13] << 2)) + (-(E[14] << 2)) + ((E[25] << 1)) + (-(E[30] << 1)) + ((E[40])) + ((E[46])), D, 7, 1);
    F[8] = fn_A((-(E[49])) + ((E[55])), D, 8, 1);
    F[9] = fn_A(((E[52])) + ((E[53])), D, 9, 1);
    F[10] = fn_A((-(E[50])) + ((E[54])), D, 10, 1);
    F[11] = fn_A((-(E[51])) + ((E[58])), D, 11, 1);
    F[12] = fn_A(((E[48] << 1)) + ((E[59])), D, 12, 1);
    F[13] = fn_A((-(E[4] << 2)) + ((E[7] << 2)) + ((E[8] << 2)) + (-(E[11] << 2)) + ((E[27] << 1)) + ((E[28] << 1)) + ((E[43])) + (-(E[47])), D, 13, 1);
    F[14] = fn_A(((E[56] << 1)) + ((E[57])), D, 14, 1);
    F[15] = fn_A(((E[5] << 2)) + (-(E[6] << 2)) + (-(E[9] << 2)) + ((E[10] << 2)) + ((E[26] << 1)) + ((E[29] << 1)) + ((E[42])) + (-(E[45])), D, 15, 1);
    ;
    ;
    H += 16;
    E[0] = F[0];
    E[1] = F[1];
    E[2] = F[2];
    E[3] = F[3];
    E[4] = F[4];
    E[5] = F[5];
    E[6] = F[6];
    E[7] = F[7];
    E[8] = F[8];
    E[9] = F[9];
    E[10] = F[10];
    E[11] = F[11];
    E[12] = F[12];
    E[13] = F[13];
    E[14] = F[14];
    E[15] = F[15];
    E[16] = ((E[1])) + ((E[2]));
    E[17] = ((E[0])) + ((E[3]));
    E[18] = ((E[4])) + ((E[7]));
    E[19] = ((E[5])) + ((E[6]));
    E[20] = ((E[8])) + ((E[11]));
    E[21] = ((E[9])) + ((E[10]));
    E[22] = (-(E[13])) + (-(E[14]));
    E[23] = ((E[12])) + ((E[15]));
    E[24] = ((E[1])) + (-(E[2]));
    E[25] = ((E[0])) + (-(E[3]));
    E[26] = (-(E[4])) + ((E[7]));
    E[27] = (-(E[5])) + ((E[6]));
    E[28] = ((E[9])) + (-(E[10]));
    E[29] = ((E[8])) + (-(E[11]));
    E[30] = ((E[12])) + (-(E[15]));
    E[31] = ((E[13])) + (-(E[14]));
    E[32] = ((E[16])) + ((E[17]));
    E[33] = ((E[18])) + ((E[19]));
    E[34] = (-(E[16])) + ((E[17]));
    E[35] = (-(E[18])) + ((E[19]));
    E[36] = (-(E[20])) + ((E[21]));
    E[37] = (-(E[22])) + ((E[23]));
    E[38] = (-(E[20])) + (-(E[21]));
    E[39] = ((E[22])) + ((E[23]));
    E[40] = (-(E[26])) + ((E[27] << 1));
    E[41] = (-(E[26] << 1)) + (-(E[27]));
    E[42] = (-(E[24] << 1)) + ((E[25]));
    E[43] = ((E[24])) + ((E[25] << 1));
    E[44] = ((E[28])) + ((E[29] << 1));
    E[45] = ((E[30])) + (-(E[31] << 1));
    E[46] = ((E[28] << 1)) + (-(E[29]));
    E[47] = ((E[30] << 1)) + ((E[31]));
    E[48] = (-(E[33])) + (-(E[38]));
    E[49] = ((E[33])) + (-(E[38]));
    E[50] = (-(E[35])) + (-(E[36]));
    E[51] = ((E[40])) + (-(E[46]));
    E[52] = (-(E[41])) + (-(E[44]));
    E[53] = ((E[43])) + ((E[47]));
    E[54] = ((E[34])) + ((E[39]));
    E[55] = ((E[32])) + ((E[37]));
    E[56] = ((E[35])) + (-(E[36]));
    E[57] = ((E[34])) + (-(E[39]));
    E[58] = ((E[42])) + ((E[45]));
    E[59] = ((E[32])) + (-(E[37]));
    F[0] = ((E[49])) + ((E[55]));
    F[1] = fn_A((-(E[52])) + ((E[53])), D, 1, 1);
    F[2] = fn_A(((E[50])) + ((E[54])), D, 2, 1);
    F[3] = fn_A(((E[51])) + ((E[58])), D, 3, 1);
    F[4] = fn_A((-(E[48])) + ((E[59] << 1)), D, 4, 1);
    F[5] = fn_A(((E[0] << 2)) + (-(E[3] << 2)) + (-(E[12] << 2)) + ((E[15] << 2)) + ((E[24] << 1)) + (-(E[31] << 1)) + ((E[41])) + (-(E[44])), D, 5, 1);
    F[6] = fn_A((-(E[56])) + ((E[57] << 1)), D, 6, 1);
    F[7] = fn_A((-(E[1] << 2)) + ((E[2] << 2)) + ((E[13] << 2)) + (-(E[14] << 2)) + ((E[25] << 1)) + (-(E[30] << 1)) + ((E[40])) + ((E[46])), D, 7, 1);
    F[8] = fn_A((-(E[49])) + ((E[55])), D, 8, 1);
    F[9] = fn_A(((E[52])) + ((E[53])), D, 9, 1);
    F[10] = fn_A((-(E[50])) + ((E[54])), D, 10, 1);
    F[11] = fn_A((-(E[51])) + ((E[58])), D, 11, 1);
    F[12] = fn_A(((E[48] << 1)) + ((E[59])), D, 12, 1);
    F[13] = fn_A((-(E[4] << 2)) + ((E[7] << 2)) + ((E[8] << 2)) + (-(E[11] << 2)) + ((E[27] << 1)) + ((E[28] << 1)) + ((E[43])) + (-(E[47])), D, 13, 1);
    F[14] = fn_A(((E[56] << 1)) + ((E[57])), D, 14, 1);
    F[15] = fn_A(((E[5] << 2)) + (-(E[6] << 2)) + (-(E[9] << 2)) + ((E[10] << 2)) + ((E[26] << 1)) + ((E[29] << 1)) + ((E[42])) + (-(E[45])), D, 15, 1);
    ;
    ;
    H += 16;
    E[0] = F[0];
    E[1] = F[1];
    E[2] = F[2];
    E[3] = F[3];
    E[4] = F[4];
    E[5] = F[5];
    E[6] = F[6];
    E[7] = F[7];
    E[8] = F[8];
    E[9] = F[9];
    E[10] = F[10];
    E[11] = F[11];
    E[12] = F[12];
    E[13] = F[13];
    E[14] = F[14];
    E[15] = F[15];
    E[16] = ((E[1])) + ((E[2]));
    E[17] = ((E[0])) + ((E[3]));
    E[18] = ((E[4])) + ((E[7]));
    E[19] = ((E[5])) + ((E[6]));
    E[20] = ((E[8])) + ((E[11]));
    E[21] = ((E[9])) + ((E[10]));
    E[22] = (-(E[13])) + (-(E[14]));
    E[23] = ((E[12])) + ((E[15]));
    E[24] = ((E[1])) + (-(E[2]));
    E[25] = ((E[0])) + (-(E[3]));
    E[26] = (-(E[4])) + ((E[7]));
    E[27] = (-(E[5])) + ((E[6]));
    E[28] = ((E[9])) + (-(E[10]));
    E[29] = ((E[8])) + (-(E[11]));
    E[30] = ((E[12])) + (-(E[15]));
    E[31] = ((E[13])) + (-(E[14]));
    E[32] = ((E[16])) + ((E[17]));
    E[33] = ((E[18])) + ((E[19]));
    E[34] = (-(E[16])) + ((E[17]));
    E[35] = (-(E[18])) + ((E[19]));
    E[36] = (-(E[20])) + ((E[21]));
    E[37] = (-(E[22])) + ((E[23]));
    E[38] = (-(E[20])) + (-(E[21]));
    E[39] = ((E[22])) + ((E[23]));
    E[40] = (-(E[26])) + ((E[27] << 1));
    E[41] = (-(E[26] << 1)) + (-(E[27]));
    E[42] = (-(E[24] << 1)) + ((E[25]));
    E[43] = ((E[24])) + ((E[25] << 1));
    E[44] = ((E[28])) + ((E[29] << 1));
    E[45] = ((E[30])) + (-(E[31] << 1));
    E[46] = ((E[28] << 1)) + (-(E[29]));
    E[47] = ((E[30] << 1)) + ((E[31]));
    E[48] = (-(E[33])) + (-(E[38]));
    E[49] = ((E[33])) + (-(E[38]));
    E[50] = (-(E[35])) + (-(E[36]));
    E[51] = ((E[40])) + (-(E[46]));
    E[52] = (-(E[41])) + (-(E[44]));
    E[53] = ((E[43])) + ((E[47]));
    E[54] = ((E[34])) + ((E[39]));
    E[55] = ((E[32])) + ((E[37]));
    E[56] = ((E[35])) + (-(E[36]));
    E[57] = ((E[34])) + (-(E[39]));
    E[58] = ((E[42])) + ((E[45]));
    E[59] = ((E[32])) + (-(E[37]));
    F[0] = ((E[49])) + ((E[55]));
    F[1] = fn_A((-(E[52])) + ((E[53])), D, 1, 1);
    F[2] = fn_A(((E[50])) + ((E[54])), D, 2, 1);
    F[3] = fn_A(((E[51])) + ((E[58])), D, 3, 1);
    F[4] = fn_A((-(E[48])) + ((E[59] << 1)), D, 4, 1);
    F[5] = fn_A(((E[0] << 2)) + (-(E[3] << 2)) + (-(E[12] << 2)) + ((E[15] << 2)) + ((E[24] << 1)) + (-(E[31] << 1)) + ((E[41])) + (-(E[44])), D, 5, 1);
    F[6] = fn_A((-(E[56])) + ((E[57] << 1)), D, 6, 1);
    F[7] = fn_A((-(E[1] << 2)) + ((E[2] << 2)) + ((E[13] << 2)) + (-(E[14] << 2)) + ((E[25] << 1)) + (-(E[30] << 1)) + ((E[40])) + ((E[46])), D, 7, 1);
    F[8] = fn_A((-(E[49])) + ((E[55])), D, 8, 1);
    F[9] = fn_A(((E[52])) + ((E[53])), D, 9, 1);
    F[10] = fn_A((-(E[50])) + ((E[54])), D, 10, 1);
    F[11] = fn_A((-(E[51])) + ((E[58])), D, 11, 1);
    F[12] = fn_A(((E[48] << 1)) + ((E[59])), D, 12, 1);
    F[13] = fn_A((-(E[4] << 2)) + ((E[7] << 2)) + ((E[8] << 2)) + (-(E[11] << 2)) + ((E[27] << 1)) + ((E[28] << 1)) + ((E[43])) + (-(E[47])), D, 13, 1);
    F[14] = fn_A(((E[56] << 1)) + ((E[57])), D, 14, 1);
    F[15] = fn_A(((E[5] << 2)) + (-(E[6] << 2)) + (-(E[9] << 2)) + ((E[10] << 2)) + ((E[26] << 1)) + ((E[29] << 1)) + ((E[42])) + (-(E[45])), D, 15, 1);
    ;
    ;
    H += 16;
    E[0] = F[0];
    E[1] = F[1];
    E[2] = F[2];
    E[3] = F[3];
    E[4] = F[4];
    E[5] = F[5];
    E[6] = F[6];
    E[7] = F[7];
    E[8] = F[8];
    E[9] = F[9];
    E[10] = F[10];
    E[11] = F[11];
    E[12] = F[12];
    E[13] = F[13];
    E[14] = F[14];
    E[15] = F[15];
    E[16] = ((E[1])) + ((E[2]));
    E[17] = ((E[0])) + ((E[3]));
    E[18] = ((E[4])) + ((E[7]));
    E[19] = ((E[5])) + ((E[6]));
    E[20] = ((E[8])) + ((E[11]));
    E[21] = ((E[9])) + ((E[10]));
    E[22] = (-(E[13])) + (-(E[14]));
    E[23] = ((E[12])) + ((E[15]));
    E[24] = ((E[1])) + (-(E[2]));
    E[25] = ((E[0])) + (-(E[3]));
    E[26] = (-(E[4])) + ((E[7]));
    E[27] = (-(E[5])) + ((E[6]));
    E[28] = ((E[9])) + (-(E[10]));
    E[29] = ((E[8])) + (-(E[11]));
    E[30] = ((E[12])) + (-(E[15]));
    E[31] = ((E[13])) + (-(E[14]));
    E[32] = ((E[16])) + ((E[17]));
    E[33] = ((E[18])) + ((E[19]));
    E[34] = (-(E[16])) + ((E[17]));
    E[35] = (-(E[18])) + ((E[19]));
    E[36] = (-(E[20])) + ((E[21]));
    E[37] = (-(E[22])) + ((E[23]));
    E[38] = (-(E[20])) + (-(E[21]));
    E[39] = ((E[22])) + ((E[23]));
    E[40] = (-(E[26])) + ((E[27] << 1));
    E[41] = (-(E[26] << 1)) + (-(E[27]));
    E[42] = (-(E[24] << 1)) + ((E[25]));
    E[43] = ((E[24])) + ((E[25] << 1));
    E[44] = ((E[28])) + ((E[29] << 1));
    E[45] = ((E[30])) + (-(E[31] << 1));
    E[46] = ((E[28] << 1)) + (-(E[29]));
    E[47] = ((E[30] << 1)) + ((E[31]));
    E[48] = (-(E[33])) + (-(E[38]));
    E[49] = ((E[33])) + (-(E[38]));
    E[50] = (-(E[35])) + (-(E[36]));
    E[51] = ((E[40])) + (-(E[46]));
    E[52] = (-(E[41])) + (-(E[44]));
    E[53] = ((E[43])) + ((E[47]));
    E[54] = ((E[34])) + ((E[39]));
    E[55] = ((E[32])) + ((E[37]));
    E[56] = ((E[35])) + (-(E[36]));
    E[57] = ((E[34])) + (-(E[39]));
    E[58] = ((E[42])) + ((E[45]));
    E[59] = ((E[32])) + (-(E[37]));
    F[0] = ((E[49])) + ((E[55]));
    F[1] = fn_A((-(E[52])) + ((E[53])), D, 1, 1);
    F[2] = fn_A(((E[50])) + ((E[54])), D, 2, 1);
    F[3] = fn_A(((E[51])) + ((E[58])), D, 3, 1);
    F[4] = fn_A((-(E[48])) + ((E[59] << 1)), D, 4, 1);
    F[5] = fn_A(((E[0] << 2)) + (-(E[3] << 2)) + (-(E[12] << 2)) + ((E[15] << 2)) + ((E[24] << 1)) + (-(E[31] << 1)) + ((E[41])) + (-(E[44])), D, 5, 1);
    F[6] = fn_A((-(E[56])) + ((E[57] << 1)), D, 6, 1);
    F[7] = fn_A((-(E[1] << 2)) + ((E[2] << 2)) + ((E[13] << 2)) + (-(E[14] << 2)) + ((E[25] << 1)) + (-(E[30] << 1)) + ((E[40])) + ((E[46])), D, 7, 1);
    F[8] = fn_A((-(E[49])) + ((E[55])), D, 8, 1);
    F[9] = fn_A(((E[52])) + ((E[53])), D, 9, 1);
    F[10] = fn_A((-(E[50])) + ((E[54])), D, 10, 1);
    F[11] = fn_A((-(E[51])) + ((E[58])), D, 11, 1);
    F[12] = fn_A(((E[48] << 1)) + ((E[59])), D, 12, 1);
    F[13] = fn_A((-(E[4] << 2)) + ((E[7] << 2)) + ((E[8] << 2)) + (-(E[11] << 2)) + ((E[27] << 1)) + ((E[28] << 1)) + ((E[43])) + (-(E[47])), D, 13, 1);
    F[14] = fn_A(((E[56] << 1)) + ((E[57])), D, 14, 1);
    F[15] = fn_A(((E[5] << 2)) + (-(E[6] << 2)) + (-(E[9] << 2)) + ((E[10] << 2)) + ((E[26] << 1)) + ((E[29] << 1)) + ((E[42])) + (-(E[45])), D, 15, 1);
    ;
    ;
    H += 16;
    int I = (F[0] + F[16] + F[32] + F[48]) / 4;

    F[0] = I;
    F[16] -= I;
    F[32] -= I;
    F[48] -= I;

    F[0] = fn_A(F[0], D, 0, 1);
    F[16] = fn_A(F[16], D, 0, 1);
    F[32] = fn_A(F[32], D, 0, 1);
    F[48] = fn_A(F[48], D, 0, 1);

    F[0] = fn_B(F[0], D, 0, 1);
    F[16] = fn_B(F[16], D, 0, 1);
    F[32] = fn_B(F[32], D, 0, 1);
    F[48] = fn_B(F[48], D, 0, 1);

    I = F[0];
    F[16] += I;
    F[32] += I;
    F[48] += I;
    F[0] = I * 4 - F[16] - F[32] - F[48];

    H = &F[0];
    E[0] = ((fn_B(F[1], D, 1, 1) << 2)) + ((fn_B(F[3], D, 3, 1) << 1));
    E[1] = ((F[0] << 2)) + ((fn_B(F[2], D, 2, 1) << 2));
    E[2] = ((fn_B(F[1], D, 1, 1) << 1)) + (-(fn_B(F[3], D, 3, 1) << 2));
    E[3] = ((F[0] << 2)) + (-(fn_B(F[2], D, 2, 1) << 2));
    E[4] = (-(fn_B(F[4], D, 4, 1) << 1)) + (-(fn_B(F[6], D, 6, 1) << 1));
    E[5] = ((fn_B(F[4], D, 4, 1) << 1)) + (-(fn_B(F[6], D, 6, 1) << 1));
    E[6] = ((fn_B(F[5], D, 5, 1) << 1)) + ((fn_B(F[7], D, 7, 1)));
    E[7] = ((fn_B(F[5], D, 5, 1))) + (-(fn_B(F[7], D, 7, 1) << 1));
    E[8] = ((fn_B(F[9], D, 9, 1) << 2)) + ((fn_B(F[11], D, 11, 1) << 1));
    E[9] = (-(fn_B(F[8], D, 8, 1) << 2)) + ((fn_B(F[10], D, 10, 1) << 2));
    E[10] = ((fn_B(F[8], D, 8, 1) << 2)) + ((fn_B(F[10], D, 10, 1) << 2));
    E[11] = ((fn_B(F[9], D, 9, 1) << 1)) + (-(fn_B(F[11], D, 11, 1) << 2));
    E[12] = (-(fn_B(F[12], D, 12, 1) << 1)) + (-(fn_B(F[14], D, 14, 1) << 1));
    E[13] = ((fn_B(F[12], D, 12, 1) << 1)) + (-(fn_B(F[14], D, 14, 1) << 1));
    E[14] = ((fn_B(F[13], D, 13, 1))) + (-(fn_B(F[15], D, 15, 1) << 1));
    E[15] = (-(fn_B(F[13], D, 13, 1) << 1)) + (-(fn_B(F[15], D, 15, 1)));
    E[16] = (-(E[4])) + (-(E[6]));
    E[17] = ((E[4])) + (-(E[6]));
    E[18] = ((E[2])) + ((E[3]));
    E[19] = (-(E[2])) + ((E[3]));
    E[20] = (-(E[0])) + ((E[1]));
    E[21] = ((E[0])) + ((E[1]));
    E[22] = ((E[5])) + (-(E[7]));
    E[23] = (-(E[5])) + (-(E[7]));
    E[24] = (-(E[13])) + (-(E[14]));
    E[25] = ((E[8])) + ((E[10]));
    E[26] = (-(E[8])) + ((E[10]));
    E[27] = ((E[12])) + ((E[15]));
    E[28] = (-(E[12])) + ((E[15]));
    E[29] = ((E[9])) + (-(E[11]));
    E[30] = (-(E[13])) + ((E[14]));
    E[31] = (-(E[9])) + (-(E[11]));
    E[32] = ((E[19])) + (-(E[31]));
    E[33] = ((E[17] << 1)) + ((E[27]));
    E[34] = ((E[20])) + (-(E[26]));
    E[35] = ((E[21])) + (-(E[25]));
    E[36] = ((E[17])) + (-(E[27] << 1));
    E[37] = (-(E[16] << 1)) + (-(E[28]));
    E[38] = ((E[23] << 1)) + ((E[24]));
    E[39] = ((E[23])) + (-(E[24] << 1));
    E[40] = ((E[20])) + ((E[26]));
    E[41] = (-(E[22] << 1)) + ((E[30]));
    E[42] = ((E[19])) + ((E[31]));
    E[43] = ((E[18])) + (-(E[29]));
    E[44] = ((E[16])) + (-(E[28] << 1));
    E[45] = (-(E[22])) + (-(E[30] << 1));
    E[46] = ((E[18])) + ((E[29]));
    E[47] = ((E[21])) + ((E[25]));
    F[0] = ((-(E[33])) + ((E[47])) + 128) >> 8;
    F[1] = ((-(E[38])) + ((E[43])) + 128) >> 8;
    F[2] = ((-(E[41])) + ((E[42])) + 128) >> 8;
    F[3] = ((-(E[37])) + ((E[40])) + 128) >> 8;
    F[4] = (((E[35])) + (-(E[36])) + 128) >> 8;
    F[5] = ((-(E[39])) + ((E[46])) + 128) >> 8;
    F[6] = (((E[32])) + (-(E[45])) + 128) >> 8;
    F[7] = (((E[34])) + ((E[44])) + 128) >> 8;
    F[8] = (((E[35])) + ((E[36])) + 128) >> 8;
    F[9] = (((E[39])) + ((E[46])) + 128) >> 8;
    F[10] = (((E[32])) + ((E[45])) + 128) >> 8;
    F[11] = (((E[34])) + (-(E[44])) + 128) >> 8;
    F[12] = (((E[33])) + ((E[47])) + 128) >> 8;
    F[13] = (((E[38])) + ((E[43])) + 128) >> 8;
    F[14] = (((E[41])) + ((E[42])) + 128) >> 8;
    F[15] = (((E[37])) + ((E[40])) + 128) >> 8;
    ;
    ;
    H += 16;
    E[0] = ((fn_B(F[1], D, 1, 1) << 2)) + ((fn_B(F[3], D, 3, 1) << 1));
    E[1] = ((F[0] << 2)) + ((fn_B(F[2], D, 2, 1) << 2));
    E[2] = ((fn_B(F[1], D, 1, 1) << 1)) + (-(fn_B(F[3], D, 3, 1) << 2));
    E[3] = ((F[0] << 2)) + (-(fn_B(F[2], D, 2, 1) << 2));
    E[4] = (-(fn_B(F[4], D, 4, 1) << 1)) + (-(fn_B(F[6], D, 6, 1) << 1));
    E[5] = ((fn_B(F[4], D, 4, 1) << 1)) + (-(fn_B(F[6], D, 6, 1) << 1));
    E[6] = ((fn_B(F[5], D, 5, 1) << 1)) + ((fn_B(F[7], D, 7, 1)));
    E[7] = ((fn_B(F[5], D, 5, 1))) + (-(fn_B(F[7], D, 7, 1) << 1));
    E[8] = ((fn_B(F[9], D, 9, 1) << 2)) + ((fn_B(F[11], D, 11, 1) << 1));
    E[9] = (-(fn_B(F[8], D, 8, 1) << 2)) + ((fn_B(F[10], D, 10, 1) << 2));
    E[10] = ((fn_B(F[8], D, 8, 1) << 2)) + ((fn_B(F[10], D, 10, 1) << 2));
    E[11] = ((fn_B(F[9], D, 9, 1) << 1)) + (-(fn_B(F[11], D, 11, 1) << 2));
    E[12] = (-(fn_B(F[12], D, 12, 1) << 1)) + (-(fn_B(F[14], D, 14, 1) << 1));
    E[13] = ((fn_B(F[12], D, 12, 1) << 1)) + (-(fn_B(F[14], D, 14, 1) << 1));
    E[14] = ((fn_B(F[13], D, 13, 1))) + (-(fn_B(F[15], D, 15, 1) << 1));
    E[15] = (-(fn_B(F[13], D, 13, 1) << 1)) + (-(fn_B(F[15], D, 15, 1)));
    E[16] = (-(E[4])) + (-(E[6]));
    E[17] = ((E[4])) + (-(E[6]));
    E[18] = ((E[2])) + ((E[3]));
    E[19] = (-(E[2])) + ((E[3]));
    E[20] = (-(E[0])) + ((E[1]));
    E[21] = ((E[0])) + ((E[1]));
    E[22] = ((E[5])) + (-(E[7]));
    E[23] = (-(E[5])) + (-(E[7]));
    E[24] = (-(E[13])) + (-(E[14]));
    E[25] = ((E[8])) + ((E[10]));
    E[26] = (-(E[8])) + ((E[10]));
    E[27] = ((E[12])) + ((E[15]));
    E[28] = (-(E[12])) + ((E[15]));
    E[29] = ((E[9])) + (-(E[11]));
    E[30] = (-(E[13])) + ((E[14]));
    E[31] = (-(E[9])) + (-(E[11]));
    E[32] = ((E[19])) + (-(E[31]));
    E[33] = ((E[17] << 1)) + ((E[27]));
    E[34] = ((E[20])) + (-(E[26]));
    E[35] = ((E[21])) + (-(E[25]));
    E[36] = ((E[17])) + (-(E[27] << 1));
    E[37] = (-(E[16] << 1)) + (-(E[28]));
    E[38] = ((E[23] << 1)) + ((E[24]));
    E[39] = ((E[23])) + (-(E[24] << 1));
    E[40] = ((E[20])) + ((E[26]));
    E[41] = (-(E[22] << 1)) + ((E[30]));
    E[42] = ((E[19])) + ((E[31]));
    E[43] = ((E[18])) + (-(E[29]));
    E[44] = ((E[16])) + (-(E[28] << 1));
    E[45] = (-(E[22])) + (-(E[30] << 1));
    E[46] = ((E[18])) + ((E[29]));
    E[47] = ((E[21])) + ((E[25]));
    F[0] = ((-(E[33])) + ((E[47])) + 128) >> 8;
    F[1] = ((-(E[38])) + ((E[43])) + 128) >> 8;
    F[2] = ((-(E[41])) + ((E[42])) + 128) >> 8;
    F[3] = ((-(E[37])) + ((E[40])) + 128) >> 8;
    F[4] = (((E[35])) + (-(E[36])) + 128) >> 8;
    F[5] = ((-(E[39])) + ((E[46])) + 128) >> 8;
    F[6] = (((E[32])) + (-(E[45])) + 128) >> 8;
    F[7] = (((E[34])) + ((E[44])) + 128) >> 8;
    F[8] = (((E[35])) + ((E[36])) + 128) >> 8;
    F[9] = (((E[39])) + ((E[46])) + 128) >> 8;
    F[10] = (((E[32])) + ((E[45])) + 128) >> 8;
    F[11] = (((E[34])) + (-(E[44])) + 128) >> 8;
    F[12] = (((E[33])) + ((E[47])) + 128) >> 8;
    F[13] = (((E[38])) + ((E[43])) + 128) >> 8;
    F[14] = (((E[41])) + ((E[42])) + 128) >> 8;
    F[15] = (((E[37])) + ((E[40])) + 128) >> 8;
    ;
    ;
    H += 16;
    E[0] = ((fn_B(F[1], D, 1, 1) << 2)) + ((fn_B(F[3], D, 3, 1) << 1));
    E[1] = ((F[0] << 2)) + ((fn_B(F[2], D, 2, 1) << 2));
    E[2] = ((fn_B(F[1], D, 1, 1) << 1)) + (-(fn_B(F[3], D, 3, 1) << 2));
    E[3] = ((F[0] << 2)) + (-(fn_B(F[2], D, 2, 1) << 2));
    E[4] = (-(fn_B(F[4], D, 4, 1) << 1)) + (-(fn_B(F[6], D, 6, 1) << 1));
    E[5] = ((fn_B(F[4], D, 4, 1) << 1)) + (-(fn_B(F[6], D, 6, 1) << 1));
    E[6] = ((fn_B(F[5], D, 5, 1) << 1)) + ((fn_B(F[7], D, 7, 1)));
    E[7] = ((fn_B(F[5], D, 5, 1))) + (-(fn_B(F[7], D, 7, 1) << 1));
    E[8] = ((fn_B(F[9], D, 9, 1) << 2)) + ((fn_B(F[11], D, 11, 1) << 1));
    E[9] = (-(fn_B(F[8], D, 8, 1) << 2)) + ((fn_B(F[10], D, 10, 1) << 2));
    E[10] = ((fn_B(F[8], D, 8, 1) << 2)) + ((fn_B(F[10], D, 10, 1) << 2));
    E[11] = ((fn_B(F[9], D, 9, 1) << 1)) + (-(fn_B(F[11], D, 11, 1) << 2));
    E[12] = (-(fn_B(F[12], D, 12, 1) << 1)) + (-(fn_B(F[14], D, 14, 1) << 1));
    E[13] = ((fn_B(F[12], D, 12, 1) << 1)) + (-(fn_B(F[14], D, 14, 1) << 1));
    E[14] = ((fn_B(F[13], D, 13, 1))) + (-(fn_B(F[15], D, 15, 1) << 1));
    E[15] = (-(fn_B(F[13], D, 13, 1) << 1)) + (-(fn_B(F[15], D, 15, 1)));
    E[16] = (-(E[4])) + (-(E[6]));
    E[17] = ((E[4])) + (-(E[6]));
    E[18] = ((E[2])) + ((E[3]));
    E[19] = (-(E[2])) + ((E[3]));
    E[20] = (-(E[0])) + ((E[1]));
    E[21] = ((E[0])) + ((E[1]));
    E[22] = ((E[5])) + (-(E[7]));
    E[23] = (-(E[5])) + (-(E[7]));
    E[24] = (-(E[13])) + (-(E[14]));
    E[25] = ((E[8])) + ((E[10]));
    E[26] = (-(E[8])) + ((E[10]));
    E[27] = ((E[12])) + ((E[15]));
    E[28] = (-(E[12])) + ((E[15]));
    E[29] = ((E[9])) + (-(E[11]));
    E[30] = (-(E[13])) + ((E[14]));
    E[31] = (-(E[9])) + (-(E[11]));
    E[32] = ((E[19])) + (-(E[31]));
    E[33] = ((E[17] << 1)) + ((E[27]));
    E[34] = ((E[20])) + (-(E[26]));
    E[35] = ((E[21])) + (-(E[25]));
    E[36] = ((E[17])) + (-(E[27] << 1));
    E[37] = (-(E[16] << 1)) + (-(E[28]));
    E[38] = ((E[23] << 1)) + ((E[24]));
    E[39] = ((E[23])) + (-(E[24] << 1));
    E[40] = ((E[20])) + ((E[26]));
    E[41] = (-(E[22] << 1)) + ((E[30]));
    E[42] = ((E[19])) + ((E[31]));
    E[43] = ((E[18])) + (-(E[29]));
    E[44] = ((E[16])) + (-(E[28] << 1));
    E[45] = (-(E[22])) + (-(E[30] << 1));
    E[46] = ((E[18])) + ((E[29]));
    E[47] = ((E[21])) + ((E[25]));
    F[0] = ((-(E[33])) + ((E[47])) + 128) >> 8;
    F[1] = ((-(E[38])) + ((E[43])) + 128) >> 8;
    F[2] = ((-(E[41])) + ((E[42])) + 128) >> 8;
    F[3] = ((-(E[37])) + ((E[40])) + 128) >> 8;
    F[4] = (((E[35])) + (-(E[36])) + 128) >> 8;
    F[5] = ((-(E[39])) + ((E[46])) + 128) >> 8;
    F[6] = (((E[32])) + (-(E[45])) + 128) >> 8;
    F[7] = (((E[34])) + ((E[44])) + 128) >> 8;
    F[8] = (((E[35])) + ((E[36])) + 128) >> 8;
    F[9] = (((E[39])) + ((E[46])) + 128) >> 8;
    F[10] = (((E[32])) + ((E[45])) + 128) >> 8;
    F[11] = (((E[34])) + (-(E[44])) + 128) >> 8;
    F[12] = (((E[33])) + ((E[47])) + 128) >> 8;
    F[13] = (((E[38])) + ((E[43])) + 128) >> 8;
    F[14] = (((E[41])) + ((E[42])) + 128) >> 8;
    F[15] = (((E[37])) + ((E[40])) + 128) >> 8;
    ;
    ;
    H += 16;
    E[0] = ((fn_B(F[1], D, 1, 1) << 2)) + ((fn_B(F[3], D, 3, 1) << 1));
    E[1] = ((F[0] << 2)) + ((fn_B(F[2], D, 2, 1) << 2));
    E[2] = ((fn_B(F[1], D, 1, 1) << 1)) + (-(fn_B(F[3], D, 3, 1) << 2));
    E[3] = ((F[0] << 2)) + (-(fn_B(F[2], D, 2, 1) << 2));
    E[4] = (-(fn_B(F[4], D, 4, 1) << 1)) + (-(fn_B(F[6], D, 6, 1) << 1));
    E[5] = ((fn_B(F[4], D, 4, 1) << 1)) + (-(fn_B(F[6], D, 6, 1) << 1));
    E[6] = ((fn_B(F[5], D, 5, 1) << 1)) + ((fn_B(F[7], D, 7, 1)));
    E[7] = ((fn_B(F[5], D, 5, 1))) + (-(fn_B(F[7], D, 7, 1) << 1));
    E[8] = ((fn_B(F[9], D, 9, 1) << 2)) + ((fn_B(F[11], D, 11, 1) << 1));
    E[9] = (-(fn_B(F[8], D, 8, 1) << 2)) + ((fn_B(F[10], D, 10, 1) << 2));
    E[10] = ((fn_B(F[8], D, 8, 1) << 2)) + ((fn_B(F[10], D, 10, 1) << 2));
    E[11] = ((fn_B(F[9], D, 9, 1) << 1)) + (-(fn_B(F[11], D, 11, 1) << 2));
    E[12] = (-(fn_B(F[12], D, 12, 1) << 1)) + (-(fn_B(F[14], D, 14, 1) << 1));
    E[13] = ((fn_B(F[12], D, 12, 1) << 1)) + (-(fn_B(F[14], D, 14, 1) << 1));
    E[14] = ((fn_B(F[13], D, 13, 1))) + (-(fn_B(F[15], D, 15, 1) << 1));
    E[15] = (-(fn_B(F[13], D, 13, 1) << 1)) + (-(fn_B(F[15], D, 15, 1)));
    E[16] = (-(E[4])) + (-(E[6]));
    E[17] = ((E[4])) + (-(E[6]));
    E[18] = ((E[2])) + ((E[3]));
    E[19] = (-(E[2])) + ((E[3]));
    E[20] = (-(E[0])) + ((E[1]));
    E[21] = ((E[0])) + ((E[1]));
    E[22] = ((E[5])) + (-(E[7]));
    E[23] = (-(E[5])) + (-(E[7]));
    E[24] = (-(E[13])) + (-(E[14]));
    E[25] = ((E[8])) + ((E[10]));
    E[26] = (-(E[8])) + ((E[10]));
    E[27] = ((E[12])) + ((E[15]));
    E[28] = (-(E[12])) + ((E[15]));
    E[29] = ((E[9])) + (-(E[11]));
    E[30] = (-(E[13])) + ((E[14]));
    E[31] = (-(E[9])) + (-(E[11]));
    E[32] = ((E[19])) + (-(E[31]));
    E[33] = ((E[17] << 1)) + ((E[27]));
    E[34] = ((E[20])) + (-(E[26]));
    E[35] = ((E[21])) + (-(E[25]));
    E[36] = ((E[17])) + (-(E[27] << 1));
    E[37] = (-(E[16] << 1)) + (-(E[28]));
    E[38] = ((E[23] << 1)) + ((E[24]));
    E[39] = ((E[23])) + (-(E[24] << 1));
    E[40] = ((E[20])) + ((E[26]));
    E[41] = (-(E[22] << 1)) + ((E[30]));
    E[42] = ((E[19])) + ((E[31]));
    E[43] = ((E[18])) + (-(E[29]));
    E[44] = ((E[16])) + (-(E[28] << 1));
    E[45] = (-(E[22])) + (-(E[30] << 1));
    E[46] = ((E[18])) + ((E[29]));
    E[47] = ((E[21])) + ((E[25]));
    F[0] = ((-(E[33])) + ((E[47])) + 128) >> 8;
    F[1] = ((-(E[38])) + ((E[43])) + 128) >> 8;
    F[2] = ((-(E[41])) + ((E[42])) + 128) >> 8;
    F[3] = ((-(E[37])) + ((E[40])) + 128) >> 8;
    F[4] = (((E[35])) + (-(E[36])) + 128) >> 8;
    F[5] = ((-(E[39])) + ((E[46])) + 128) >> 8;
    F[6] = (((E[32])) + (-(E[45])) + 128) >> 8;
    F[7] = (((E[34])) + ((E[44])) + 128) >> 8;
    F[8] = (((E[35])) + ((E[36])) + 128) >> 8;
    F[9] = (((E[39])) + ((E[46])) + 128) >> 8;
    F[10] = (((E[32])) + ((E[45])) + 128) >> 8;
    F[11] = (((E[34])) + (-(E[44])) + 128) >> 8;
    F[12] = (((E[33])) + ((E[47])) + 128) >> 8;
    F[13] = (((E[38])) + ((E[43])) + 128) >> 8;
    F[14] = (((E[41])) + ((E[42])) + 128) >> 8;
    F[15] = (((E[37])) + ((E[40])) + 128) >> 8;
    ;
    ;
  }

  for (int G = 0; G < 64; G++) {
    B[get_global_id(0) + G * 512] = F[G];
  }
}