__kernel void fn_A(__global int* A, long B, int C) {
  __global int* D = A + get_global_id(0) * C;
  int E, F, G, H, I, J, K, L, M, N;
  int O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_B(__global int* A, long B, int C) {
  __global int* D = A + get_global_id(0) * C;
  int E, F, G, H, I, J, K, L, M, N;
  int O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_C(__global int2* A, long B, int C) {
  __global int2* D = A + get_global_id(0) * C;
  int2 E, F, G, H, I, J, K, L, M, N;
  int2 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_D(__global int2* A, long B, int C) {
  __global int2* D = A + get_global_id(0) * C;
  int2 E, F, G, H, I, J, K, L, M, N;
  int2 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_E(__global int4* A, long B, int C) {
  __global int4* D = A + get_global_id(0) * C;
  int4 E, F, G, H, I, J, K, L, M, N;
  int4 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_F(__global int4* A, long B, int C) {
  __global int4* D = A + get_global_id(0) * C;
  int4 E, F, G, H, I, J, K, L, M, N;
  int4 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = E - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_G(__global int8* A, long B, int C) {
  __global int8* D = A + get_global_id(0) * C;
  int8 E, F, G, H, I, J, K, L, M, N;
  int8 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = E - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_H(__global int8* A, long B, int C) {
  __global int8* D = A + get_global_id(0) * C;
  int8 E, F, G, H, I, J, K, L, M, N;
  int8 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
    F = F - O;
    G = G - F;
    H = H - G;
    I = I - H;
    J = J - I;
    K = K - J;
    L = L - K;
    M = M - L;
    N = N - M;
    E = E - N;
    O = E - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_I(__global float* A, long B, int C) {
  __global float* D = A + get_global_id(0) * C;
  float E, F, G, H, I, J, K, L, M, N;
  float O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_J(__global float* A, long B, int C) {
  __global float* D = A + get_global_id(0) * C;
  float E, F, G, H, I, J, K, L, M, N;
  float O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_K(__global float2* A, long B, int C) {
  __global float2* D = A + get_global_id(0) * C;
  float2 E, F, G, H, I, J, K, L, M, N;
  float2 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_L(__global float2* A, long B, int C) {
  __global float2* D = A + get_global_id(0) * C;
  float2 E, F, G, H, I, J, K, L, M, N;
  float2 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_M(__global float4* A, long B, int C) {
  __global float4* D = A + get_global_id(0) * C;
  float4 E, F, G, H, I, J, K, L, M, N;
  float4 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_N(__global float4* A, long B, int C) {
  __global float4* D = A + get_global_id(0) * C;
  float4 E, F, G, H, I, J, K, L, M, N;
  float4 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_O(__global float8* A, long B, int C) {
  __global float8* D = A + get_global_id(0) * C;
  float8 E, F, G, H, I, J, K, L, M, N;
  float8 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0F - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_P(__global float8* A, long B, int C) {
  __global float8* D = A + get_global_id(0) * C;
  float8 E, F, G, H, I, J, K, L, M, N;
  float8 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0F - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_Q(__global double* A, long B, int C) {
  __global double* D = A + get_global_id(0) * C;
  double E, F, G, H, I, J, K, L, M, N;
  double O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_R(__global double* A, long B, int C) {
  __global double* D = A + get_global_id(0) * C;
  double E, F, G, H, I, J, K, L, M, N;
  double O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_S(__global double2* A, long B, int C) {
  __global double2* D = A + get_global_id(0) * C;
  double2 E, F, G, H, I, J, K, L, M, N;
  double2 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_T(__global double2* A, long B, int C) {
  __global double2* D = A + get_global_id(0) * C;
  double2 E, F, G, H, I, J, K, L, M, N;
  double2 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_U(__global double4* A, long B, int C) {
  __global double4* D = A + get_global_id(0) * C;
  double4 E, F, G, H, I, J, K, L, M, N;
  double4 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_V(__global double4* A, long B, int C) {
  __global double4* D = A + get_global_id(0) * C;
  double4 E, F, G, H, I, J, K, L, M, N;
  double4 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_W(__global double8* A, long B, int C) {
  __global double8* D = A + get_global_id(0) * C;
  double8 E, F, G, H, I, J, K, L, M, N;
  double8 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
    E = E - O;
    F = F - O;
    G = G - O;
    H = H - O;
    I = I - O;
    J = J - O;
    K = K - O;
    L = L - O;
    M = M - O;
    N = N - O;
    O = 0.0 - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}

__kernel void fn_X(__global double8* A, long B, int C) {
  __global double8* D = A + get_global_id(0) * C;
  double8 E, F, G, H, I, J, K, L, M, N;
  double8 O;
  E = D[0];
  F = D[1];
  G = D[2];
  H = D[3];
  I = D[4];
  J = D[5];
  K = D[6];
  L = D[7];
  M = D[8];
  N = D[9];
  O = J;
  while (B-- > 0) {
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
    F = E - O;
    G = F - O;
    H = G - O;
    I = H - O;
    J = I - O;
    K = J - O;
    L = K - O;
    M = L - O;
    N = M - O;
    E = N - O;
    O = 0.0 - O;
  }
  D[0] = E;
  D[1] = F;
  D[2] = G;
  D[3] = H;
  D[4] = I;
  D[5] = J;
  D[6] = K;
  D[7] = L;
  D[8] = M;
  D[9] = N;
}