       # Test the frozen module defined in frozen.c.
       
    1: from test.test_support import captured_stdout, run_unittest
    1: import unittest
    1: import sys
       
    2: class FrozenTests(unittest.TestCase):
    1:     def test_frozen(self):
       
    1:         with captured_stdout() as stdout:
    1:             try:
    1:                 import __hello__
>>>>>>             except ImportError, x:
>>>>>>                 self.fail("import __hello__ failed:" + str(x))
       
    1:             try:
    1:                 import __phello__
>>>>>>             except ImportError, x:
>>>>>>                 self.fail("import __phello__ failed:" + str(x))
       
    1:             try:
    1:                 import __phello__.spam
>>>>>>             except ImportError, x:
>>>>>>                 self.fail("import __phello__.spam failed:" + str(x))
       
    1:             try:
    1:                 import __phello__.foo
    1:             except ImportError:
    1:                 pass
                   else:
>>>>>>                 self.fail("import __phello__.foo should have failed")
       
    1:         self.assertEqual(stdout.getvalue(),
    1:                          'Hello world...\nHello world...\nHello world...\n')
       
    1:         del sys.modules['__hello__']
    1:         del sys.modules['__phello__']
    1:         del sys.modules['__phello__.spam']
       
       
    1: def test_main():
    1:     run_unittest(FrozenTests)
       
       
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
