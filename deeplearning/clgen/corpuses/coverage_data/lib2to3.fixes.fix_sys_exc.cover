       """Fixer for sys.exc_{type, value, traceback}
       
       sys.exc_type -> sys.exc_info()[0]
       sys.exc_value -> sys.exc_info()[1]
       sys.exc_traceback -> sys.exc_info()[2]
    1: """
       
       # By Jeff Balogh and Benjamin Peterson
       
       # Local imports
    1: from .. import fixer_base
    1: from ..fixer_util import Attr, Call, Name, Number, Subscript, Node, syms
       
    2: class FixSysExc(fixer_base.BaseFix):
           # This order matches the ordering of sys.exc_info().
    1:     exc_info = [u"exc_type", u"exc_value", u"exc_traceback"]
    1:     BM_compatible = True
           PATTERN = """
                     power< 'sys' trailer< dot='.' attribute=(%s) > >
    5:               """ % '|'.join("'%s'" % e for e in exc_info)
       
    1:     def transform(self, node, results):
    6:         sys_attr = results["attribute"][0]
    6:         index = Number(self.exc_info.index(sys_attr.value))
       
    6:         call = Call(Name(u"exc_info"), prefix=sys_attr.prefix)
    6:         attr = Attr(Name(u"sys"), call)
    6:         attr[1].children[0].prefix = results["dot"].prefix
    6:         attr.append(Subscript(index))
    6:         return Node(syms.power, attr, prefix=node.prefix)
