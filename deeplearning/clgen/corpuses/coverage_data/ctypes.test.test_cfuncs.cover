       # A lot of failures in these tests on Mac OS X.
       # Byte order related?
       
    1: import unittest
    1: from ctypes import *
    1: from ctypes.test import need_symbol
       
    1: import _ctypes_test
       
    2: class CFunctions(unittest.TestCase):
    1:     _dll = CDLL(_ctypes_test.__file__)
       
    1:     def S(self):
   20:         return c_longlong.in_dll(self._dll, "last_tf_arg_s").value
    1:     def U(self):
   10:         return c_ulonglong.in_dll(self._dll, "last_tf_arg_u").value
       
    1:     def test_byte(self):
    1:         self._dll.tf_b.restype = c_byte
    1:         self._dll.tf_b.argtypes = (c_byte,)
    1:         self.assertEqual(self._dll.tf_b(-126), -42)
    1:         self.assertEqual(self.S(), -126)
       
    1:     def test_byte_plus(self):
    1:         self._dll.tf_bb.restype = c_byte
    1:         self._dll.tf_bb.argtypes = (c_byte, c_byte)
    1:         self.assertEqual(self._dll.tf_bb(0, -126), -42)
    1:         self.assertEqual(self.S(), -126)
       
    1:     def test_ubyte(self):
    1:         self._dll.tf_B.restype = c_ubyte
    1:         self._dll.tf_B.argtypes = (c_ubyte,)
    1:         self.assertEqual(self._dll.tf_B(255), 85)
    1:         self.assertEqual(self.U(), 255)
       
    1:     def test_ubyte_plus(self):
    1:         self._dll.tf_bB.restype = c_ubyte
    1:         self._dll.tf_bB.argtypes = (c_byte, c_ubyte)
    1:         self.assertEqual(self._dll.tf_bB(0, 255), 85)
    1:         self.assertEqual(self.U(), 255)
       
    1:     def test_short(self):
    1:         self._dll.tf_h.restype = c_short
    1:         self._dll.tf_h.argtypes = (c_short,)
    1:         self.assertEqual(self._dll.tf_h(-32766), -10922)
    1:         self.assertEqual(self.S(), -32766)
       
    1:     def test_short_plus(self):
    1:         self._dll.tf_bh.restype = c_short
    1:         self._dll.tf_bh.argtypes = (c_byte, c_short)
    1:         self.assertEqual(self._dll.tf_bh(0, -32766), -10922)
    1:         self.assertEqual(self.S(), -32766)
       
    1:     def test_ushort(self):
    1:         self._dll.tf_H.restype = c_ushort
    1:         self._dll.tf_H.argtypes = (c_ushort,)
    1:         self.assertEqual(self._dll.tf_H(65535), 21845)
    1:         self.assertEqual(self.U(), 65535)
       
    1:     def test_ushort_plus(self):
    1:         self._dll.tf_bH.restype = c_ushort
    1:         self._dll.tf_bH.argtypes = (c_byte, c_ushort)
    1:         self.assertEqual(self._dll.tf_bH(0, 65535), 21845)
    1:         self.assertEqual(self.U(), 65535)
       
    1:     def test_int(self):
    1:         self._dll.tf_i.restype = c_int
    1:         self._dll.tf_i.argtypes = (c_int,)
    1:         self.assertEqual(self._dll.tf_i(-2147483646), -715827882)
    1:         self.assertEqual(self.S(), -2147483646)
       
    1:     def test_int_plus(self):
    1:         self._dll.tf_bi.restype = c_int
    1:         self._dll.tf_bi.argtypes = (c_byte, c_int)
    1:         self.assertEqual(self._dll.tf_bi(0, -2147483646), -715827882)
    1:         self.assertEqual(self.S(), -2147483646)
       
    1:     def test_uint(self):
    1:         self._dll.tf_I.restype = c_uint
    1:         self._dll.tf_I.argtypes = (c_uint,)
    1:         self.assertEqual(self._dll.tf_I(4294967295), 1431655765)
    1:         self.assertEqual(self.U(), 4294967295)
       
    1:     def test_uint_plus(self):
    1:         self._dll.tf_bI.restype = c_uint
    1:         self._dll.tf_bI.argtypes = (c_byte, c_uint)
    1:         self.assertEqual(self._dll.tf_bI(0, 4294967295), 1431655765)
    1:         self.assertEqual(self.U(), 4294967295)
       
    1:     def test_long(self):
    1:         self._dll.tf_l.restype = c_long
    1:         self._dll.tf_l.argtypes = (c_long,)
    1:         self.assertEqual(self._dll.tf_l(-2147483646), -715827882)
    1:         self.assertEqual(self.S(), -2147483646)
       
    1:     def test_long_plus(self):
    1:         self._dll.tf_bl.restype = c_long
    1:         self._dll.tf_bl.argtypes = (c_byte, c_long)
    1:         self.assertEqual(self._dll.tf_bl(0, -2147483646), -715827882)
    1:         self.assertEqual(self.S(), -2147483646)
       
    1:     def test_ulong(self):
    1:         self._dll.tf_L.restype = c_ulong
    1:         self._dll.tf_L.argtypes = (c_ulong,)
    1:         self.assertEqual(self._dll.tf_L(4294967295), 1431655765)
    1:         self.assertEqual(self.U(), 4294967295)
       
    1:     def test_ulong_plus(self):
    1:         self._dll.tf_bL.restype = c_ulong
    1:         self._dll.tf_bL.argtypes = (c_char, c_ulong)
    1:         self.assertEqual(self._dll.tf_bL(' ', 4294967295), 1431655765)
    1:         self.assertEqual(self.U(), 4294967295)
       
    1:     def test_longlong(self):
    1:         self._dll.tf_q.restype = c_longlong
    1:         self._dll.tf_q.argtypes = (c_longlong, )
    1:         self.assertEqual(self._dll.tf_q(-9223372036854775806), -3074457345618258602)
    1:         self.assertEqual(self.S(), -9223372036854775806)
       
    1:     def test_longlong_plus(self):
    1:         self._dll.tf_bq.restype = c_longlong
    1:         self._dll.tf_bq.argtypes = (c_byte, c_longlong)
    1:         self.assertEqual(self._dll.tf_bq(0, -9223372036854775806), -3074457345618258602)
    1:         self.assertEqual(self.S(), -9223372036854775806)
       
    1:     def test_ulonglong(self):
    1:         self._dll.tf_Q.restype = c_ulonglong
    1:         self._dll.tf_Q.argtypes = (c_ulonglong, )
    1:         self.assertEqual(self._dll.tf_Q(18446744073709551615), 6148914691236517205)
    1:         self.assertEqual(self.U(), 18446744073709551615)
       
    1:     def test_ulonglong_plus(self):
    1:         self._dll.tf_bQ.restype = c_ulonglong
    1:         self._dll.tf_bQ.argtypes = (c_byte, c_ulonglong)
    1:         self.assertEqual(self._dll.tf_bQ(0, 18446744073709551615), 6148914691236517205)
    1:         self.assertEqual(self.U(), 18446744073709551615)
       
    1:     def test_float(self):
    1:         self._dll.tf_f.restype = c_float
    1:         self._dll.tf_f.argtypes = (c_float,)
    1:         self.assertEqual(self._dll.tf_f(-42.), -14.)
    1:         self.assertEqual(self.S(), -42)
       
    1:     def test_float_plus(self):
    1:         self._dll.tf_bf.restype = c_float
    1:         self._dll.tf_bf.argtypes = (c_byte, c_float)
    1:         self.assertEqual(self._dll.tf_bf(0, -42.), -14.)
    1:         self.assertEqual(self.S(), -42)
       
    1:     def test_double(self):
    1:         self._dll.tf_d.restype = c_double
    1:         self._dll.tf_d.argtypes = (c_double,)
    1:         self.assertEqual(self._dll.tf_d(42.), 14.)
    1:         self.assertEqual(self.S(), 42)
       
    1:     def test_double_plus(self):
    1:         self._dll.tf_bd.restype = c_double
    1:         self._dll.tf_bd.argtypes = (c_byte, c_double)
    1:         self.assertEqual(self._dll.tf_bd(0, 42.), 14.)
    1:         self.assertEqual(self.S(), 42)
       
    1:     def test_longdouble(self):
    1:         self._dll.tf_D.restype = c_longdouble
    1:         self._dll.tf_D.argtypes = (c_longdouble,)
    1:         self.assertEqual(self._dll.tf_D(42.), 14.)
    1:         self.assertEqual(self.S(), 42)
       
    1:     def test_longdouble_plus(self):
    1:         self._dll.tf_bD.restype = c_longdouble
    1:         self._dll.tf_bD.argtypes = (c_byte, c_longdouble)
    1:         self.assertEqual(self._dll.tf_bD(0, 42.), 14.)
    1:         self.assertEqual(self.S(), 42)
       
    1:     def test_callwithresult(self):
    1:         def process_result(result):
    2:             return result * 2
    1:         self._dll.tf_i.restype = process_result
    1:         self._dll.tf_i.argtypes = (c_int,)
    1:         self.assertEqual(self._dll.tf_i(42), 28)
    1:         self.assertEqual(self.S(), 42)
    1:         self.assertEqual(self._dll.tf_i(-42), -28)
    1:         self.assertEqual(self.S(), -42)
       
    1:     def test_void(self):
    1:         self._dll.tv_i.restype = None
    1:         self._dll.tv_i.argtypes = (c_int,)
    1:         self.assertEqual(self._dll.tv_i(42), None)
    1:         self.assertEqual(self.S(), 42)
    1:         self.assertEqual(self._dll.tv_i(-42), None)
    1:         self.assertEqual(self.S(), -42)
       
       # The following repeats the above tests with stdcall functions (where
       # they are available)
    1: try:
    1:     WinDLL
    1: except NameError:
    2:     def stdcall_dll(*_): pass
       else:
>>>>>>     class stdcall_dll(WinDLL):
>>>>>>         def __getattr__(self, name):
>>>>>>             if name[:2] == '__' and name[-2:] == '__':
>>>>>>                 raise AttributeError(name)
>>>>>>             func = self._FuncPtr(("s_" + name, self))
>>>>>>             setattr(self, name, func)
>>>>>>             return func
       
    2: @need_symbol('WinDLL')
    1: class stdcallCFunctions(CFunctions):
    1:     _dll = stdcall_dll(_ctypes_test.__file__)
       
    1: if __name__ == '__main__':
>>>>>>     unittest.main()
