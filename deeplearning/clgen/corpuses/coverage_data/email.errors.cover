       # Copyright (C) 2001-2006 Python Software Foundation
       # Author: Barry Warsaw
       # Contact: email-sig@python.org
       
    1: """email package exception classes."""
       
       
       
    2: class MessageError(Exception):
    1:     """Base class for errors in the email package."""
       
       
    2: class MessageParseError(MessageError):
    1:     """Base class for message parsing errors."""
       
       
    2: class HeaderParseError(MessageParseError):
    1:     """Error while parsing headers."""
       
       
    2: class BoundaryError(MessageParseError):
    1:     """Couldn't find terminating boundary."""
       
       
    2: class MultipartConversionError(MessageError, TypeError):
    1:     """Conversion to a multipart is prohibited."""
       
       
    2: class CharsetError(MessageError):
    1:     """An illegal charset was given."""
       
       
       
       # These are parsing defects which the parser was able to work around.
    2: class MessageDefect:
    1:     """Base class for a message defect."""
       
    1:     def __init__(self, line=None):
   61:         self.line = line
       
    2: class NoBoundaryInMultipartDefect(MessageDefect):
    1:     """A message claimed to be a multipart but had no boundary parameter."""
       
    2: class StartBoundaryNotFoundDefect(MessageDefect):
    1:     """The claimed start boundary was never found."""
       
    2: class FirstHeaderLineIsContinuationDefect(MessageDefect):
    1:     """A message had a continuation line as its first header line."""
       
    2: class MisplacedEnvelopeHeaderDefect(MessageDefect):
    1:     """A 'Unix-from' header was found in the middle of a header block."""
       
    2: class MalformedHeaderDefect(MessageDefect):
    1:     """Found a header that was missing a colon, or was otherwise malformed."""
       
    2: class MultipartInvariantViolationDefect(MessageDefect):
    1:     """A message claimed to be a multipart but no subparts were found."""
