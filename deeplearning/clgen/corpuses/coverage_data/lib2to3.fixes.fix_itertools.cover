       """ Fixer for itertools.(imap|ifilter|izip) --> (map|filter|zip) and
           itertools.ifilterfalse --> itertools.filterfalse (bugs 2360-2363)
       
           imports from itertools are fixed in fix_itertools_import.py
       
           If itertools is imported as something else (ie: import itertools as it;
           it.izip(spam, eggs)) method calls will not get fixed.
    1:     """
       
       # Local imports
    1: from .. import fixer_base
    1: from ..fixer_util import Name
       
    2: class FixItertools(fixer_base.BaseFix):
    1:     BM_compatible = True
    1:     it_funcs = "('imap'|'ifilter'|'izip'|'izip_longest'|'ifilterfalse')"
           PATTERN = """
                     power< it='itertools'
                         trailer<
                            dot='.' func=%(it_funcs)s > trailer< '(' [any] ')' > >
                     |
                     power< func=%(it_funcs)s trailer< '(' [any] ')' > >
    1:               """ %(locals())
       
           # Needs to be run after fix_(map|zip|filter)
    1:     run_order = 6
       
    1:     def transform(self, node, results):
   19:         prefix = None
   19:         func = results['func'][0]
   19:         if ('it' in results and
   11:             func.value not in (u'ifilterfalse', u'izip_longest')):
    7:             dot, it = (results['dot'], results['it'])
                   # Remove the 'itertools'
    7:             prefix = it.prefix
    7:             it.remove()
                   # Replace the node which contains ('.', 'function') with the
                   # function (to be consistent with the second part of the pattern)
    7:             dot.remove()
    7:             func.parent.replace(func)
       
   19:         prefix = prefix or func.prefix
   19:         func.replace(Name(func.value[1:], prefix=prefix))
