       # Copyright (C) 2003 Python Software Foundation
       
    1: import unittest
    1: import os
    1: from test import test_support
    1: import struct
       
    1: MacOS = test_support.import_module('MacOS')
       # The following should exist if MacOS does.
    1: import applesingle
       
    1: AS_MAGIC=0x00051600
    1: AS_VERSION=0x00020000
    1: dataforkdata = 'hello\r\0world\n'
    1: resourceforkdata = 'goodbye\ncruel\0world\r'
       
       applesingledata = struct.pack(">ll16sh", AS_MAGIC, AS_VERSION, "foo", 2) + \
           struct.pack(">llllll", 1, 50, len(dataforkdata),
               2, 50+len(dataforkdata), len(resourceforkdata)) + \
    1:     dataforkdata + \
    1:     resourceforkdata
    1: TESTFN2 = test_support.TESTFN + '2'
       
    2: class TestApplesingle(unittest.TestCase):
       
    1:     def setUp(self):
    2:         fp = open(test_support.TESTFN, 'w')
    2:         fp.write(applesingledata)
    2:         fp.close()
       
    1:     def tearDown(self):
    2:         try:
    2:             os.unlink(test_support.TESTFN)
>>>>>>         except:
>>>>>>             pass
    2:         try:
    2:             os.unlink(TESTFN2)
>>>>>>         except:
>>>>>>             pass
       
    1:     def compareData(self, isrf, data):
    3:         if isrf:
    1:             fp = MacOS.openrf(TESTFN2, '*rb')
               else:
    2:             fp = open(TESTFN2, 'rb')
    3:         filedata = fp.read(1000)
    3:         self.assertEqual(data, filedata)
       
    1:     def test_applesingle(self):
    1:         try:
    1:             os.unlink(TESTFN2)
    1:         except:
    1:             pass
    1:         applesingle.decode(test_support.TESTFN, TESTFN2)
    1:         self.compareData(False, dataforkdata)
    1:         self.compareData(True, resourceforkdata)
       
    1:     def test_applesingle_resonly(self):
    1:         try:
    1:             os.unlink(TESTFN2)
    1:         except:
    1:             pass
    1:         applesingle.decode(test_support.TESTFN, TESTFN2, resonly=True)
    1:         self.compareData(False, resourceforkdata)
       
    1: def test_main():
    1:     test_support.run_unittest(TestApplesingle)
       
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
