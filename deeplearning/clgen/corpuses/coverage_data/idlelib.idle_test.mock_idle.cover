       '''Mock classes that imitate idlelib modules or classes.
       
       Attributes and methods will be added as needed for tests.
    1: '''
       
    1: from idlelib.idle_test.mock_tk import Text
       
    2: class Func(object):
           '''Mock function captures args and returns result set by test.
       
           Attributes:
           self.called - records call even if no args, kwds passed.
           self.result - set by init, returned by call.
           self.args - captures positional arguments.
           self.kwds - captures keyword arguments.
       
           Most common use will probably be to mock methods.
           Mock_tk.Var and Mbox_func are special variants of this.
    1:     '''
    1:     def __init__(self, result=None):
    4:         self.called = False
    4:         self.result = result
    4:         self.args = None
    4:         self.kwds = None
    1:     def __call__(self, *args, **kwds):
    3:         self.called = True
    3:         self.args = args
    3:         self.kwds = kwds
    3:         if isinstance(self.result, BaseException):
>>>>>>             raise self.result
               else:
    3:             return self.result
       
       
    2: class Editor(object):
           '''Minimally imitate EditorWindow.EditorWindow class.
    1:     '''
    1:     def __init__(self, flist=None, filename=None, key=None, root=None):
    2:         self.text = Text()
    2:         self.undo = UndoDelegator()
       
    1:     def get_selection_indices(self):
>>>>>>         first = self.text.index('1.0')
>>>>>>         last = self.text.index('end')
>>>>>>         return first, last
       
       
    2: class UndoDelegator(object):
           '''Minimally imitate UndoDelegator,UndoDelegator class.
    1:     '''
           # A real undo block is only needed for user interaction.
    1:     def undo_block_start(*args):
    4:         pass
    1:     def undo_block_stop(*args):
    4:         pass
