       """Suite Standard Suite: Common terms for most applications
       Level 1, version 1
       
       Generated from /Applications/Internet Explorer.app
       AETE/AEUT resource version 1/0, language 0, script 0
    1: """
       
    1: import aetools
    1: import MacOS
       
    1: _code = '****'
       
    2: class Standard_Suite_Events:
       
    1:     _argmap_get = {
    1:         'as' : 'rtyp',
           }
       
    1:     def get(self, _object, _attributes={}, **_arguments):
               """get:
               Required argument: an AE object reference
               Keyword argument as: undocumented, typecode 'type'
               Keyword argument _attributes: AppleEvent attribute dictionary
               Returns: anything
               """
>>>>>>         _code = 'core'
>>>>>>         _subcode = 'getd'
       
>>>>>>         aetools.keysubst(_arguments, self._argmap_get)
>>>>>>         _arguments['----'] = _object
       
       
>>>>>>         _reply, _arguments, _attributes = self.send(_code, _subcode,
>>>>>>                 _arguments, _attributes)
>>>>>>         if _arguments.get('errn', 0):
>>>>>>             raise aetools.Error, aetools.decodeerror(_arguments)
               # XXXX Optionally decode result
>>>>>>         if _arguments.has_key('----'):
>>>>>>             return _arguments['----']
       
       
    2: class application(aetools.ComponentItem):
    1:     """application - An application program """
    1:     want = 'capp'
    2: class _Prop_selected_text(aetools.NProperty):
    1:     """selected text - the selected text """
    1:     which = 'stxt'
    1:     want = 'TEXT'
    1: selected_text = _Prop_selected_text()
    1: application._superclassnames = []
    1: application._privpropdict = {
    1:     'selected_text' : _Prop_selected_text,
       }
    1: application._privelemdict = {
       }
       
       #
       # Indices of types declared in this module
       #
    1: _classdeclarations = {
    1:     'capp' : application,
       }
       
    1: _propdeclarations = {
    1:     'stxt' : _Prop_selected_text,
       }
       
    1: _compdeclarations = {
       }
       
    1: _enumdeclarations = {
       }
