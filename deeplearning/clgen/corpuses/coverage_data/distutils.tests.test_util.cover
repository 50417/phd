    1: """Tests for distutils.util."""
    1: import sys
    1: import unittest
    1: from test.test_support import run_unittest
       
    1: from distutils.errors import DistutilsByteCompileError
    1: from distutils.tests import support
    1: from distutils.util import byte_compile, grok_environment_error
       
       
    2: class UtilTestCase(support.EnvironGuard, unittest.TestCase):
       
    1:     def test_dont_write_bytecode(self):
               # makes sure byte_compile raise a DistutilsError
               # if sys.dont_write_bytecode is True
    1:         old_dont_write_bytecode = sys.dont_write_bytecode
    1:         sys.dont_write_bytecode = True
    1:         try:
    1:             self.assertRaises(DistutilsByteCompileError, byte_compile, [])
               finally:
    1:             sys.dont_write_bytecode = old_dont_write_bytecode
       
    1:     def test_grok_environment_error(self):
               # test obsolete function to ensure backward compat (#4931)
    1:         exc = IOError("Unable to find batch file")
    1:         msg = grok_environment_error(exc)
    1:         self.assertEqual(msg, "error: Unable to find batch file")
       
       
    1: def test_suite():
    1:     return unittest.makeSuite(UtilTestCase)
       
    1: if __name__ == "__main__":
>>>>>>     run_unittest(test_suite())
