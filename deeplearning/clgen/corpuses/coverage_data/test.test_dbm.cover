    1: from test import test_support
    1: import unittest
    1: dbm = test_support.import_module('dbm')
       
    2: class DbmTestCase(unittest.TestCase):
       
    1:     def setUp(self):
    2:         self.filename = test_support.TESTFN
    2:         self.d = dbm.open(self.filename, 'c')
    2:         self.d.close()
       
    1:     def tearDown(self):
   10:         for suffix in ['', '.pag', '.dir', '.db']:
    8:             test_support.unlink(self.filename + suffix)
       
    1:     def test_keys(self):
    1:         self.d = dbm.open(self.filename, 'c')
    1:         self.assertEqual(self.d.keys(), [])
    1:         a = [('a', 'b'), ('12345678910', '019237410982340912840198242')]
    3:         for k, v in a:
    2:             self.d[k] = v
    4:         self.assertEqual(sorted(self.d.keys()), sorted(k for (k, v) in a))
    3:         for k, v in a:
    2:             self.assertIn(k, self.d)
    2:             self.assertEqual(self.d[k], v)
    1:         self.assertNotIn('xxx', self.d)
    2:         self.assertRaises(KeyError, lambda: self.d['xxx'])
    1:         self.d.close()
       
    1:     def test_modes(self):
    5:         for mode in ['r', 'rw', 'w', 'n']:
    4:             try:
    4:                 self.d = dbm.open(self.filename, mode)
    4:                 self.d.close()
>>>>>>             except dbm.error:
>>>>>>                 self.fail()
       
    1: def test_main():
    1:     test_support.run_unittest(DbmTestCase)
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
