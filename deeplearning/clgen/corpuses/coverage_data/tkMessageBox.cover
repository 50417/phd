       # tk common message boxes
       #
       # this module provides an interface to the native message boxes
       # available in Tk 4.2 and newer.
       #
       # written by Fredrik Lundh, May 1997
       #
       
       #
       # options (all have default values):
       #
       # - default: which button to make default (one of the reply codes)
       #
       # - icon: which icon to display (see below)
       #
       # - message: the message to display
       #
       # - parent: which window to place the dialog on top of
       #
       # - title: dialog title
       #
       # - type: dialog type; that is, which buttons to display (see below)
       #
       
    1: from tkCommonDialog import Dialog
       
       #
       # constants
       
       # icons
    1: ERROR = "error"
    1: INFO = "info"
    1: QUESTION = "question"
    1: WARNING = "warning"
       
       # types
    1: ABORTRETRYIGNORE = "abortretryignore"
    1: OK = "ok"
    1: OKCANCEL = "okcancel"
    1: RETRYCANCEL = "retrycancel"
    1: YESNO = "yesno"
    1: YESNOCANCEL = "yesnocancel"
       
       # replies
    1: ABORT = "abort"
    1: RETRY = "retry"
    1: IGNORE = "ignore"
    1: OK = "ok"
    1: CANCEL = "cancel"
    1: YES = "yes"
    1: NO = "no"
       
       
       #
       # message dialog class
       
    2: class Message(Dialog):
    1:     "A message box"
       
    1:     command  = "tk_messageBox"
       
       
       #
       # convenience stuff
       
       # Rename _icon and _type options to allow overriding them in options
    1: def _show(title=None, message=None, _icon=None, _type=None, **options):
>>>>>>     if _icon and "icon" not in options:    options["icon"] = _icon
>>>>>>     if _type and "type" not in options:    options["type"] = _type
>>>>>>     if title:   options["title"] = title
>>>>>>     if message: options["message"] = message
>>>>>>     res = Message(**options).show()
           # In some Tcl installations, yes/no is converted into a boolean.
>>>>>>     if isinstance(res, bool):
>>>>>>         if res:
>>>>>>             return YES
>>>>>>         return NO
           # In others we get a Tcl_Obj.
>>>>>>     return str(res)
       
    1: def showinfo(title=None, message=None, **options):
           "Show an info message"
>>>>>>     return _show(title, message, INFO, OK, **options)
       
    1: def showwarning(title=None, message=None, **options):
           "Show a warning message"
>>>>>>     return _show(title, message, WARNING, OK, **options)
       
    1: def showerror(title=None, message=None, **options):
           "Show an error message"
>>>>>>     return _show(title, message, ERROR, OK, **options)
       
    1: def askquestion(title=None, message=None, **options):
           "Ask a question"
>>>>>>     return _show(title, message, QUESTION, YESNO, **options)
       
    1: def askokcancel(title=None, message=None, **options):
           "Ask if operation should proceed; return true if the answer is ok"
>>>>>>     s = _show(title, message, QUESTION, OKCANCEL, **options)
>>>>>>     return s == OK
       
    1: def askyesno(title=None, message=None, **options):
           "Ask a question; return true if the answer is yes"
>>>>>>     s = _show(title, message, QUESTION, YESNO, **options)
>>>>>>     return s == YES
       
    1: def askyesnocancel(title=None, message=None, **options):
           "Ask a question; return true if the answer is yes, None if cancelled."
>>>>>>     s = _show(title, message, QUESTION, YESNOCANCEL, **options)
           # s might be a Tcl index object, so convert it to a string
>>>>>>     s = str(s)
>>>>>>     if s == CANCEL:
>>>>>>         return None
>>>>>>     return s == YES
       
    1: def askretrycancel(title=None, message=None, **options):
           "Ask if operation should be retried; return true if the answer is yes"
>>>>>>     s = _show(title, message, WARNING, RETRYCANCEL, **options)
>>>>>>     return s == RETRY
       
       
       # --------------------------------------------------------------------
       # test stuff
       
    1: if __name__ == "__main__":
       
>>>>>>     print "info", showinfo("Spam", "Egg Information")
>>>>>>     print "warning", showwarning("Spam", "Egg Warning")
>>>>>>     print "error", showerror("Spam", "Egg Alert")
>>>>>>     print "question", askquestion("Spam", "Question?")
>>>>>>     print "proceed", askokcancel("Spam", "Proceed?")
>>>>>>     print "yes/no", askyesno("Spam", "Got it?")
>>>>>>     print "yes/no/cancel", askyesnocancel("Spam", "Want it?")
>>>>>>     print "try again", askretrycancel("Spam", "Try again?")
