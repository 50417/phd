       # Copyright 2006 Google, Inc. All Rights Reserved.
       # Licensed to PSF under a Contributor Agreement.
       
    1: """Export the Python grammar and symbols."""
       
       # Python imports
    1: import os
       
       # Local imports
    1: from .pgen2 import token
    1: from .pgen2 import driver
    1: from . import pytree
       
       # The grammar file
    1: _GRAMMAR_FILE = os.path.join(os.path.dirname(__file__), "Grammar.txt")
    1: _PATTERN_GRAMMAR_FILE = os.path.join(os.path.dirname(__file__),
    1:                                      "PatternGrammar.txt")
       
       
    2: class Symbols(object):
       
    1:     def __init__(self, grammar):
               """Initializer.
       
               Creates an attribute for each grammar symbol (nonterminal),
               whose value is the symbol's type (an int >= 256).
               """
 7172:         for name, symbol in grammar.symbol2number.iteritems():
 6286:             setattr(self, name, symbol)
       
       
    1: python_grammar = driver.load_grammar(_GRAMMAR_FILE)
       
    1: python_symbols = Symbols(python_grammar)
       
    1: python_grammar_no_print_statement = python_grammar.copy()
    1: del python_grammar_no_print_statement.keywords["print"]
       
    1: pattern_grammar = driver.load_grammar(_PATTERN_GRAMMAR_FILE)
    1: pattern_symbols = Symbols(pattern_grammar)
