       # -*- coding: utf-8 -*-
       u"""A module to test whether doctest recognizes some 2.2 features,
       like static and class methods.
       
       >>> print 'yup'  # 1
       yup
       
       We include some (random) encoded (utf-8) text in the text surrounding
       the example.  It should be ignored:
       
       ЉЊЈЁЂ
       
    1: """
       
    1: import sys
    1: import unittest
    1: from test import test_support
    1: if sys.flags.optimize >= 2:
>>>>>>     raise unittest.SkipTest("Cannot test docstrings with -O2")
       
    2: class C(object):
           u"""Class C.
       
           >>> print C()  # 2
           42
       
       
           We include some (random) encoded (utf-8) text in the text surrounding
           the example.  It should be ignored:
       
               ЉЊЈЁЂ
       
    1:     """
       
    9:     def __init__(self):
               """C.__init__.
       
               >>> print C() # 3
               42
               """
       
    1:     def __str__(self):
               """
               >>> print C() # 4
               42
               """
    3:         return "42"
       
    2:     class D(object):
               """A nested D class.
       
               >>> print "In D!"   # 5
               In D!
    1:         """
       
    1:         def nested(self):
                   """
                   >>> print 3 # 6
                   3
                   """
       
    1:     def getx(self):
               """
               >>> c = C()    # 7
               >>> c.x = 12   # 8
               >>> print c.x  # 9
               -12
               """
    3:         return -self._x
       
    1:     def setx(self, value):
               """
               >>> c = C()     # 10
               >>> c.x = 12    # 11
               >>> print c.x   # 12
               -12
               """
    3:         self._x = value
       
    1:     x = property(getx, setx, doc="""\
               >>> c = C()    # 13
               >>> c.x = 12   # 14
               >>> print c.x  # 15
               -12
    1:         """)
       
    1:     @staticmethod
           def statm():
               """
               A static method.
       
               >>> print C.statm()    # 16
               666
               >>> print C().statm()  # 17
               666
               """
    2:         return 666
       
    1:     @classmethod
           def clsm(cls, val):
               """
               A class method.
       
               >>> print C.clsm(22)    # 18
               22
               >>> print C().clsm(23)  # 19
               23
               """
    2:         return val
       
    1: def test_main():
    1:     from test import test_doctest2
    1:     EXPECTED = 19
    1:     f, t = test_support.run_doctest(test_doctest2)
    1:     if t != EXPECTED:
>>>>>>         raise test_support.TestFailed("expected %d tests to run, not %d" %
>>>>>>                                       (EXPECTED, t))
       
       # Pollute the namespace with a bunch of imported functions and classes,
       # to make sure they don't get tested.
    1: from doctest import *
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
