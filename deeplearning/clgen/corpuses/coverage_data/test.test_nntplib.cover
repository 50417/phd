    1: import socket
    1: import nntplib
    1: import time
    1: import unittest
       
    1: try:
    1:     import threading
>>>>>> except ImportError:
>>>>>>     threading = None
       
       
    1: from unittest import TestCase
    1: from test import test_support
       
    1: HOST = test_support.HOST
       
       
    1: def server(evt, serv, evil=False):
    2:     serv.listen(5)
    2:     try:
    2:         conn, addr = serv.accept()
>>>>>>     except socket.timeout:
>>>>>>         pass
           else:
    2:         if evil:
    1:             conn.send("1 I'm too long response" * 3000 + "\n")
               else:
    1:             conn.send("1 I'm OK response\n")
    2:         conn.close()
           finally:
    2:         serv.close()
    2:         evt.set()
       
       
    2: class BaseServerTest(TestCase):
    1:     def setUp(self):
    2:         self.evt = threading.Event()
    2:         self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    2:         self.sock.settimeout(3)
    2:         self.port = test_support.bind_port(self.sock)
    2:         threading.Thread(
    2:             target=server,
    2:             args=(self.evt, self.sock, self.evil)).start()
    2:         time.sleep(.1)
       
    1:     def tearDown(self):
    2:         self.evt.wait()
       
       
    2: @unittest.skipUnless(threading, 'threading required')
    1: class ServerTests(BaseServerTest):
    1:     evil = False
       
    1:     def test_basic_connect(self):
    1:         nntp = nntplib.NNTP('localhost', self.port)
    1:         nntp.sock.close()
       
       
    2: @unittest.skipUnless(threading, 'threading required')
    1: class EvilServerTests(BaseServerTest):
    1:     evil = True
       
    1:     def test_too_long_line(self):
    1:         self.assertRaises(nntplib.NNTPDataError,
    1:                           nntplib.NNTP, 'localhost', self.port)
       
       
    1: def test_main(verbose=None):
    1:     test_support.run_unittest(EvilServerTests)
    1:     test_support.run_unittest(ServerTests)
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
