    1: import unittest
    1: from test import test_support
       
       # Silence Py3k warning
    1: test_support.import_module('compiler', deprecated=True)
    1: from compiler import transformer, ast
    1: from compiler import compile
       
    2: class Tests(unittest.TestCase):
       
    1:     def testMultipleLHS(self):
               """ Test multiple targets on the left hand side. """
       
    1:         snippets = ['a, b = 1, 2',
    1:                     '(a, b) = 1, 2',
    1:                     '((a, b), c) = (1, 2), 3']
       
    4:         for s in snippets:
    3:             a = transformer.parse(s)
    3:             self.assertIsInstance(a, ast.Module)
    3:             child1 = a.getChildNodes()[0]
    3:             self.assertIsInstance(child1, ast.Stmt)
    3:             child2 = child1.getChildNodes()[0]
    3:             self.assertIsInstance(child2, ast.Assign)
       
                   # This actually tests the compiler, but it's a way to assure the ast
                   # is correct
    3:             c = compile(s, '<string>', 'single')
    3:             vals = {}
    3:             exec c in vals
    3:             assert vals['a'] == 1
    3:             assert vals['b'] == 2
       
    1: def test_main():
    1:     test_support.run_unittest(Tests)
       
    1: if __name__ == "__main__":
>>>>>>     test_main()
