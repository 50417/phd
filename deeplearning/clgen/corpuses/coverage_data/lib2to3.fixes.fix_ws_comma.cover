       """Fixer that changes 'a ,b' into 'a, b'.
       
       This also changes '{a :b}' into '{a: b}', but does not touch other
       uses of colons.  It does not touch other uses of whitespace.
       
    1: """
       
    1: from .. import pytree
    1: from ..pgen2 import token
    1: from .. import fixer_base
       
    2: class FixWsComma(fixer_base.BaseFix):
       
    1:     explicit = True # The user must ask for this fixers
       
           PATTERN = """
           any<(not(',') any)+ ',' ((not(',') any)+ ',')* [not(',') any]>
    1:     """
       
    1:     COMMA = pytree.Leaf(token.COMMA, u",")
    1:     COLON = pytree.Leaf(token.COLON, u":")
    1:     SEPS = (COMMA, COLON)
       
    1:     def transform(self, node, results):
>>>>>>         new = node.clone()
>>>>>>         comma = False
>>>>>>         for child in new.children:
>>>>>>             if child in self.SEPS:
>>>>>>                 prefix = child.prefix
>>>>>>                 if prefix.isspace() and u"\n" not in prefix:
>>>>>>                     child.prefix = u""
>>>>>>                 comma = True
                   else:
>>>>>>                 if comma:
>>>>>>                     prefix = child.prefix
>>>>>>                     if not prefix:
>>>>>>                         child.prefix = u" "
>>>>>>                 comma = False
>>>>>>         return new
