    2: """A simple log mechanism styled after PEP 282."""
       
       # The class here is styled after PEP 282 so that it could later be
       # replaced with a standard Python logging implementation.
       
    2: DEBUG = 1
    2: INFO = 2
    2: WARN = 3
    2: ERROR = 4
    2: FATAL = 5
       
    2: import sys
       
    4: class Log:
       
    2:     def __init__(self, threshold=WARN):
    2:         self.threshold = threshold
       
    2:     def _log(self, level, msg, args):
   32:         if level not in (DEBUG, INFO, WARN, ERROR, FATAL):
>>>>>>             raise ValueError('%s wrong log level' % str(level))
       
   32:         if level >= self.threshold:
    2:             if args:
>>>>>>                 msg = msg % args
    2:             if level in (WARN, ERROR, FATAL):
>>>>>>                 stream = sys.stderr
                   else:
    2:                 stream = sys.stdout
    2:             stream.write('%s\n' % msg)
    2:             stream.flush()
       
    2:     def log(self, level, msg, *args):
   37:         self._log(level, msg, args)
       
    2:     def debug(self, msg, *args):
   18:         self._log(DEBUG, msg, args)
       
    2:     def info(self, msg, *args):
  449:         self._log(INFO, msg, args)
       
    2:     def warn(self, msg, *args):
   49:         self._log(WARN, msg, args)
       
    2:     def error(self, msg, *args):
>>>>>>         self._log(ERROR, msg, args)
       
    2:     def fatal(self, msg, *args):
>>>>>>         self._log(FATAL, msg, args)
       
    2: _global_log = Log()
    2: log = _global_log.log
    2: debug = _global_log.debug
    2: info = _global_log.info
    2: warn = _global_log.warn
    2: error = _global_log.error
    2: fatal = _global_log.fatal
       
    2: def set_threshold(level):
           # return the old threshold for use from tests
  319:     old = _global_log.threshold
  319:     _global_log.threshold = level
  319:     return old
       
    2: def set_verbosity(v):
   12:     if v <= 0:
>>>>>>         set_threshold(WARN)
   12:     elif v == 1:
   12:         set_threshold(INFO)
>>>>>>     elif v >= 2:
>>>>>>         set_threshold(DEBUG)
