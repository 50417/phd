    1: """Test cases for test_pyclbr.py"""
       
    1: def f(): pass
       
    2: class Other(object):
    1:     @classmethod
>>>>>>     def foo(c): pass
       
    1:     def om(self): pass
       
    2: class B (object):
    1:     def bm(self): pass
       
    2: class C (B):
    1:     foo = Other().foo
    1:     om = Other.om
       
    1:     d = 10
       
           # XXX: This causes test_pyclbr.py to fail, but only because the
           #      introspection-based is_method() code in the test can't
           #      distinguish between this and a genuine method function like m().
           #      The pyclbr.py module gets this right as it parses the text.
           #
           #f = f
       
    1:     def m(self): pass
       
    1:     @staticmethod
>>>>>>     def sm(self): pass
       
    1:     @classmethod
>>>>>>     def cm(self): pass
