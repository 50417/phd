       # Copyright 2006 Google, Inc. All Rights Reserved.
       # Licensed to PSF under a Contributor Agreement.
       
    1: """Fixer that transforms `xyzzy` into repr(xyzzy)."""
       
       # Local imports
    1: from .. import fixer_base
    1: from ..fixer_util import Call, Name, parenthesize
       
       
    2: class FixRepr(fixer_base.BaseFix):
       
    1:     BM_compatible = True
           PATTERN = """
                     atom < '`' expr=any '`' >
    1:               """
       
    1:     def transform(self, node, results):
   12:         expr = results["expr"].clone()
       
   12:         if expr.type == self.syms.testlist1:
    4:             expr = parenthesize(expr)
   12:         return Call(Name(u"repr"), [expr], prefix=node.prefix)
