       # Testing md5 module
    1: import warnings
    1: warnings.filterwarnings("ignore", "the md5 module is deprecated.*",
    1:                         DeprecationWarning)
       
    1: import unittest
    1: from md5 import md5
    1: from test import test_support
       
    1: def hexstr(s):
    8:     import string
    8:     h = string.hexdigits
    8:     r = ''
  136:     for c in s:
  128:         i = ord(c)
  128:         r = r + h[(i >> 4) & 0xF] + h[i & 0xF]
    8:     return r
       
    2: class MD5_Test(unittest.TestCase):
       
    1:     def md5test(self, s, expected):
    7:         self.assertEqual(hexstr(md5(s).digest()), expected)
    7:         self.assertEqual(md5(s).hexdigest(), expected)
       
    1:     def test_basics(self):
    1:         eq = self.md5test
    1:         eq('', 'd41d8cd98f00b204e9800998ecf8427e')
    1:         eq('a', '0cc175b9c0f1b6a831c399e269772661')
    1:         eq('abc', '900150983cd24fb0d6963f7d28e17f72')
    1:         eq('message digest', 'f96b697d7cb7938d525a2f31aaf161d0')
    1:         eq('abcdefghijklmnopqrstuvwxyz', 'c3fcd3d76192e4007dfb496cca67e13b')
    1:         eq('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
    1:            'd174ab98d277d9f5a5611c2c9f419d9f')
    1:         eq('12345678901234567890123456789012345678901234567890123456789012345678901234567890',
    1:            '57edf4a22be3c955ac49da2e2107b67a')
       
    1:     def test_hexdigest(self):
               # hexdigest is new with Python 2.0
    1:         m = md5('testing the hexdigest method')
    1:         h = m.hexdigest()
    1:         self.assertEqual(hexstr(m.digest()), h)
       
    1:     def test_large_update(self):
    1:         aas = 'a' * 64
    1:         bees = 'b' * 64
    1:         cees = 'c' * 64
       
    1:         m1 = md5()
    1:         m1.update(aas)
    1:         m1.update(bees)
    1:         m1.update(cees)
       
    1:         m2 = md5()
    1:         m2.update(aas + bees + cees)
    1:         self.assertEqual(m1.digest(), m2.digest())
       
    1: def test_main():
    1:     test_support.run_unittest(MD5_Test)
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
