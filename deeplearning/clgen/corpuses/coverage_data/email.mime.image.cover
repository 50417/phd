       # Copyright (C) 2001-2006 Python Software Foundation
       # Author: Barry Warsaw
       # Contact: email-sig@python.org
       
    1: """Class representing image/* type MIME documents."""
       
    1: __all__ = ['MIMEImage']
       
    1: import imghdr
       
    1: from email import encoders
    1: from email.mime.nonmultipart import MIMENonMultipart
       
       
       
    2: class MIMEImage(MIMENonMultipart):
    1:     """Class for generating image/* type MIME documents."""
       
    1:     def __init__(self, _imagedata, _subtype=None,
    1:                  _encoder=encoders.encode_base64, **_params):
               """Create an image/* type MIME document.
       
               _imagedata is a string containing the raw image data.  If this data
               can be decoded by the standard Python `imghdr' module, then the
               subtype will be automatically included in the Content-Type header.
               Otherwise, you can specify the specific image subtype via the _subtype
               parameter.
       
               _encoder is a function which will perform the actual encoding for
               transport of the image data.  It takes one argument, which is this
               Image instance.  It should use get_payload() and set_payload() to
               change the payload to the encoded form.  It should also add any
               Content-Transfer-Encoding or other headers to the message as
               necessary.  The default encoding is Base64.
       
               Any additional keyword arguments are passed to the base class
               constructor, which turns them into parameters on the Content-Type
               header.
               """
   66:         if _subtype is None:
   63:             _subtype = imghdr.what(None, _imagedata)
   66:         if _subtype is None:
>>>>>>             raise TypeError('Could not guess image MIME subtype')
   66:         MIMENonMultipart.__init__(self, 'image', _subtype, **_params)
   66:         self.set_payload(_imagedata)
   66:         _encoder(self)
