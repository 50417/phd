       
    1: from test.test_support import run_unittest
    1: import unittest
       
    2: class ExceptionTestCase(unittest.TestCase):
    1:     def test_try_except_else_finally(self):
    1:         hit_except = False
    1:         hit_else = False
    1:         hit_finally = False
       
    1:         try:
    1:             raise Exception, 'nyaa!'
    1:         except:
    1:             hit_except = True
               else:
>>>>>>             hit_else = True
               finally:
    1:             hit_finally = True
       
    1:         self.assertTrue(hit_except)
    1:         self.assertTrue(hit_finally)
    1:         self.assertFalse(hit_else)
       
    1:     def test_try_except_else_finally_no_exception(self):
    1:         hit_except = False
    1:         hit_else = False
    1:         hit_finally = False
       
    1:         try:
    1:             pass
>>>>>>         except:
>>>>>>             hit_except = True
               else:
    1:             hit_else = True
               finally:
    1:             hit_finally = True
       
    1:         self.assertFalse(hit_except)
    1:         self.assertTrue(hit_finally)
    1:         self.assertTrue(hit_else)
       
    1:     def test_try_except_finally(self):
    1:         hit_except = False
    1:         hit_finally = False
       
    1:         try:
    1:             raise Exception, 'yarr!'
    1:         except:
    1:             hit_except = True
               finally:
    1:             hit_finally = True
       
    1:         self.assertTrue(hit_except)
    1:         self.assertTrue(hit_finally)
       
    1:     def test_try_except_finally_no_exception(self):
    1:         hit_except = False
    1:         hit_finally = False
       
    1:         try:
    1:             pass
>>>>>>         except:
>>>>>>             hit_except = True
               finally:
    1:             hit_finally = True
       
    1:         self.assertFalse(hit_except)
    1:         self.assertTrue(hit_finally)
       
    1:     def test_try_except(self):
    1:         hit_except = False
       
    1:         try:
    1:             raise Exception, 'ahoy!'
    1:         except:
    1:             hit_except = True
       
    1:         self.assertTrue(hit_except)
       
    1:     def test_try_except_no_exception(self):
    1:         hit_except = False
       
    1:         try:
    1:             pass
>>>>>>         except:
>>>>>>             hit_except = True
       
    1:         self.assertFalse(hit_except)
       
    1:     def test_try_except_else(self):
    1:         hit_except = False
    1:         hit_else = False
       
    1:         try:
    1:             raise Exception, 'foo!'
    1:         except:
    1:             hit_except = True
               else:
>>>>>>             hit_else = True
       
    1:         self.assertFalse(hit_else)
    1:         self.assertTrue(hit_except)
       
    1:     def test_try_except_else_no_exception(self):
    1:         hit_except = False
    1:         hit_else = False
       
    1:         try:
    1:             pass
>>>>>>         except:
>>>>>>             hit_except = True
               else:
    1:             hit_else = True
       
    1:         self.assertFalse(hit_except)
    1:         self.assertTrue(hit_else)
       
    1:     def test_try_finally_no_exception(self):
    1:         hit_finally = False
       
    1:         try:
    1:             pass
               finally:
    1:             hit_finally = True
       
    1:         self.assertTrue(hit_finally)
       
    1:     def test_nested(self):
    1:         hit_finally = False
    1:         hit_inner_except = False
    1:         hit_inner_finally = False
       
    1:         try:
    1:             try:
    1:                 raise Exception, 'inner exception'
    1:             except:
    1:                 hit_inner_except = True
                   finally:
    1:                 hit_inner_finally = True
               finally:
    1:             hit_finally = True
       
    1:         self.assertTrue(hit_inner_except)
    1:         self.assertTrue(hit_inner_finally)
    1:         self.assertTrue(hit_finally)
       
    1:     def test_nested_else(self):
    1:         hit_else = False
    1:         hit_finally = False
    1:         hit_except = False
    1:         hit_inner_except = False
    1:         hit_inner_else = False
       
    1:         try:
    1:             try:
    1:                 pass
>>>>>>             except:
>>>>>>                 hit_inner_except = True
                   else:
    1:                 hit_inner_else = True
       
    1:             raise Exception, 'outer exception'
    1:         except:
    1:             hit_except = True
               else:
>>>>>>             hit_else = True
               finally:
    1:             hit_finally = True
       
    1:         self.assertFalse(hit_inner_except)
    1:         self.assertTrue(hit_inner_else)
    1:         self.assertFalse(hit_else)
    1:         self.assertTrue(hit_finally)
    1:         self.assertTrue(hit_except)
       
    1: def test_main():
    1:     run_unittest(ExceptionTestCase)
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
