    1: from test import test_support
    1: import unittest
       
    1: nis = test_support.import_module('nis')
       
    2: class NisTests(unittest.TestCase):
    1:     def test_maps(self):
    1:         try:
    1:             maps = nis.maps()
    1:         except nis.error, msg:
                   # NIS is probably not active, so this test isn't useful
    1:             self.skipTest(str(msg))
>>>>>>         try:
                   # On some systems, this map is only accessible to the
                   # super user
>>>>>>             maps.remove("passwd.adjunct.byname")
>>>>>>         except ValueError:
>>>>>>             pass
       
>>>>>>         done = 0
>>>>>>         for nismap in maps:
>>>>>>             mapping = nis.cat(nismap)
>>>>>>             for k, v in mapping.items():
>>>>>>                 if not k:
>>>>>>                     continue
>>>>>>                 if nis.match(k, nismap) != v:
>>>>>>                     self.fail("NIS match failed for key `%s' in map `%s'" % (k, nismap))
                       else:
                           # just test the one key, otherwise this test could take a
                           # very long time
>>>>>>                     done = 1
>>>>>>                     break
>>>>>>             if done:
>>>>>>                 break
       
    1: def test_main():
    1:     test_support.run_unittest(NisTests)
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
