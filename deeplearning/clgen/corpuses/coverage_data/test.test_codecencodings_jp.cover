       #
       # test_codecencodings_jp.py
       #   Codec encoding tests for Japanese encodings.
       #
       
    1: from test import test_support
    1: from test import multibytecodec_support
    1: import unittest
       
    2: class Test_CP932(multibytecodec_support.TestBase, unittest.TestCase):
    1:     encoding = 'cp932'
    1:     tstring = multibytecodec_support.load_teststring('shift_jis')
           codectests = (
               # invalid bytes
    1:         ("abc\x81\x00\x81\x00\x82\x84", "strict",  None),
    1:         ("abc\xf8", "strict",  None),
    1:         ("abc\x81\x00\x82\x84", "replace", u"abc\ufffd\uff44"),
    1:         ("abc\x81\x00\x82\x84\x88", "replace", u"abc\ufffd\uff44\ufffd"),
    1:         ("abc\x81\x00\x82\x84", "ignore",  u"abc\uff44"),
               # sjis vs cp932
    1:         ("\\\x7e", "replace", u"\\\x7e"),
    1:         ("\x81\x5f\x81\x61\x81\x7c", "replace", u"\uff3c\u2225\uff0d"),
           )
       
    2: class Test_EUC_JISX0213(multibytecodec_support.TestBase,
    1:                         unittest.TestCase):
    1:     encoding = 'euc_jisx0213'
    1:     tstring = multibytecodec_support.load_teststring('euc_jisx0213')
           codectests = (
               # invalid bytes
    1:         ("abc\x80\x80\xc1\xc4", "strict",  None),
    1:         ("abc\xc8", "strict",  None),
    1:         ("abc\x80\x80\xc1\xc4", "replace", u"abc\ufffd\u7956"),
    1:         ("abc\x80\x80\xc1\xc4\xc8", "replace", u"abc\ufffd\u7956\ufffd"),
    1:         ("abc\x80\x80\xc1\xc4", "ignore",  u"abc\u7956"),
    1:         ("abc\x8f\x83\x83", "replace", u"abc\ufffd"),
    1:         ("\xc1\x64", "strict", None),
    1:         ("\xa1\xc0", "strict", u"\uff3c"),
           )
           xmlcharnametest = (
               u"\xab\u211c\xbb = \u2329\u1234\u232a",
    1:         "\xa9\xa8&real;\xa9\xb2 = &lang;&#4660;&rang;"
           )
       
       eucjp_commontests = (
    1:     ("abc\x80\x80\xc1\xc4", "strict",  None),
    1:     ("abc\xc8", "strict",  None),
    1:     ("abc\x80\x80\xc1\xc4", "replace", u"abc\ufffd\u7956"),
    1:     ("abc\x80\x80\xc1\xc4\xc8", "replace", u"abc\ufffd\u7956\ufffd"),
    1:     ("abc\x80\x80\xc1\xc4", "ignore",  u"abc\u7956"),
    1:     ("abc\x8f\x83\x83", "replace", u"abc\ufffd"),
    1:     ("\xc1\x64", "strict", None),
       )
       
    2: class Test_EUC_JP_COMPAT(multibytecodec_support.TestBase,
    1:                          unittest.TestCase):
    1:     encoding = 'euc_jp'
    1:     tstring = multibytecodec_support.load_teststring('euc_jp')
    1:     codectests = eucjp_commontests + (
    1:         ("\xa1\xc0\\", "strict", u"\uff3c\\"),
    1:         (u"\xa5", "strict", "\x5c"),
    1:         (u"\u203e", "strict", "\x7e"),
           )
       
       shiftjis_commonenctests = (
    1:     ("abc\x80\x80\x82\x84", "strict",  None),
    1:     ("abc\xf8", "strict",  None),
    1:     ("abc\x80\x80\x82\x84", "replace", u"abc\ufffd\uff44"),
    1:     ("abc\x80\x80\x82\x84\x88", "replace", u"abc\ufffd\uff44\ufffd"),
    1:     ("abc\x80\x80\x82\x84def", "ignore",  u"abc\uff44def"),
       )
       
    2: class Test_SJIS_COMPAT(multibytecodec_support.TestBase, unittest.TestCase):
    1:     encoding = 'shift_jis'
    1:     tstring = multibytecodec_support.load_teststring('shift_jis')
    1:     codectests = shiftjis_commonenctests + (
    1:         ("\\\x7e", "strict", u"\\\x7e"),
    1:         ("\x81\x5f\x81\x61\x81\x7c", "strict", u"\uff3c\u2016\u2212"),
           )
       
    2: class Test_SJISX0213(multibytecodec_support.TestBase, unittest.TestCase):
    1:     encoding = 'shift_jisx0213'
    1:     tstring = multibytecodec_support.load_teststring('shift_jisx0213')
           codectests = (
               # invalid bytes
    1:         ("abc\x80\x80\x82\x84", "strict",  None),
    1:         ("abc\xf8", "strict",  None),
    1:         ("abc\x80\x80\x82\x84", "replace", u"abc\ufffd\uff44"),
    1:         ("abc\x80\x80\x82\x84\x88", "replace", u"abc\ufffd\uff44\ufffd"),
    1:         ("abc\x80\x80\x82\x84def", "ignore",  u"abc\uff44def"),
               # sjis vs cp932
    1:         ("\\\x7e", "replace", u"\xa5\u203e"),
    1:         ("\x81\x5f\x81\x61\x81\x7c", "replace", u"\x5c\u2016\u2212"),
           )
           xmlcharnametest = (
               u"\xab\u211c\xbb = \u2329\u1234\u232a",
    1:         "\x85G&real;\x85Q = &lang;&#4660;&rang;"
           )
       
    1: def test_main():
    1:     test_support.run_unittest(__name__)
       
    1: if __name__ == "__main__":
>>>>>>     test_main()
