    1: import textwrap
    1: from StringIO import StringIO
    1: from json.tests import PyTest, CTest
       
       
    2: class TestIndent(object):
    1:     def test_indent(self):
    2:         h = [['blorpie'], ['whoops'], [], 'd-shtaeou', 'd-nthiouh', 'i-vhbjkhnth',
    2:              {'nifty': 87}, {'field': 'yes', 'morefield': False} ]
       
    2:         expect = textwrap.dedent("""\
               [
                 [
                   "blorpie"
                 ],
                 [
                   "whoops"
                 ],
                 [],
                 "d-shtaeou",
                 "d-nthiouh",
                 "i-vhbjkhnth",
                 {
                   "nifty": 87
                 },
                 {
                   "field": "yes",
                   "morefield": false
                 }
    2:         ]""")
       
       
    2:         d1 = self.dumps(h)
    2:         d2 = self.dumps(h, indent=2, sort_keys=True, separators=(',', ': '))
       
    2:         h1 = self.loads(d1)
    2:         h2 = self.loads(d2)
       
    2:         self.assertEqual(h1, h)
    2:         self.assertEqual(h2, h)
    2:         self.assertEqual(d2, expect)
       
    1:     def test_indent0(self):
    2:         h = {3: 1}
    2:         def check(indent, expected):
    4:             d1 = self.dumps(h, indent=indent)
    4:             self.assertEqual(d1, expected)
       
    4:             sio = StringIO()
    4:             self.json.dump(h, sio, indent=indent)
    4:             self.assertEqual(sio.getvalue(), expected)
       
               # indent=0 should emit newlines
    2:         check(0, '{\n"3": 1\n}')
               # indent=None is more compact
    2:         check(None, '{"3": 1}')
       
       
    2: class TestPyIndent(TestIndent, PyTest): pass
    2: class TestCIndent(TestIndent, CTest): pass
