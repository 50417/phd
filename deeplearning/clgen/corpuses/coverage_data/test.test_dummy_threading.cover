    1: from test import test_support
    1: import unittest
    1: import dummy_threading as _threading
    1: import time
       
    2: class DummyThreadingTestCase(unittest.TestCase):
       
    2:     class TestThread(_threading.Thread):
       
    1:         def run(self):
                   global running
                   global sema
                   global mutex
                   # Uncomment if testing another module, such as the real 'threading'
                   # module.
                   #delay = random.random() * 2
   10:             delay = 0
   10:             if test_support.verbose:
>>>>>>                 print 'task', self.name, 'will run for', delay, 'sec'
   10:             sema.acquire()
   10:             mutex.acquire()
   10:             running += 1
   10:             if test_support.verbose:
>>>>>>                 print running, 'tasks are running'
   10:             mutex.release()
   10:             time.sleep(delay)
   10:             if test_support.verbose:
>>>>>>                 print 'task', self.name, 'done'
   10:             mutex.acquire()
   10:             running -= 1
   10:             if test_support.verbose:
>>>>>>                 print self.name, 'is finished.', running, 'tasks are running'
   10:             mutex.release()
   10:             sema.release()
       
    1:     def setUp(self):
    1:         self.numtasks = 10
               global sema
    1:         sema = _threading.BoundedSemaphore(value=3)
               global mutex
    1:         mutex = _threading.RLock()
               global running
    1:         running = 0
    1:         self.threads = []
       
    1:     def test_tasks(self):
   11:         for i in range(self.numtasks):
   10:             t = self.TestThread(name="<thread %d>"%i)
   10:             self.threads.append(t)
   10:             t.start()
       
    1:         if test_support.verbose:
>>>>>>             print 'waiting for all tasks to complete'
   11:         for t in self.threads:
   10:             t.join()
    1:         if test_support.verbose:
>>>>>>             print 'all tasks done'
       
    1: def test_main():
    1:     test_support.run_unittest(DummyThreadingTestCase)
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
