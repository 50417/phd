    1: from ctypes import *
    1: import unittest
       
    1: subclasses = []
    1: for base in [c_byte, c_short, c_int, c_long, c_longlong,
    1:         c_ubyte, c_ushort, c_uint, c_ulong, c_ulonglong,
   15:         c_float, c_double, c_longdouble, c_bool]:
   28:     class X(base):
   14:         pass
   14:     subclasses.append(X)
       
    2: class X(c_char):
    1:     pass
       
       # This test checks if the __repr__ is correct for subclasses of simple types
       
    2: class ReprTest(unittest.TestCase):
    1:     def test_numbers(self):
   15:         for typ in subclasses:
   14:             base = typ.__bases__[0]
   14:             self.assertTrue(repr(base(42)).startswith(base.__name__))
   14:             self.assertEqual("<X object at", repr(typ(42))[:12])
       
    1:     def test_char(self):
    1:         self.assertEqual("c_char('x')", repr(c_char('x')))
    1:         self.assertEqual("<X object at", repr(X('x'))[:12])
       
    1: if __name__ == "__main__":
>>>>>>     unittest.main()
