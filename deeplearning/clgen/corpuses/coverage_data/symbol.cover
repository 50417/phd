       #! /usr/bin/env python
       
    1: """Non-terminal symbols of Python grammar (from "graminit.h")."""
       
       #  This file is automatically generated; please don't muck it up!
       #
       #  To update the symbols in this file, 'cd' to the top directory of
       #  the python source tree after building the interpreter and run:
       #
       #    ./python Lib/symbol.py
       
       #--start constants--
    1: single_input = 256
    1: file_input = 257
    1: eval_input = 258
    1: decorator = 259
    1: decorators = 260
    1: decorated = 261
    1: funcdef = 262
    1: parameters = 263
    1: varargslist = 264
    1: fpdef = 265
    1: fplist = 266
    1: stmt = 267
    1: simple_stmt = 268
    1: small_stmt = 269
    1: expr_stmt = 270
    1: augassign = 271
    1: print_stmt = 272
    1: del_stmt = 273
    1: pass_stmt = 274
    1: flow_stmt = 275
    1: break_stmt = 276
    1: continue_stmt = 277
    1: return_stmt = 278
    1: yield_stmt = 279
    1: raise_stmt = 280
    1: import_stmt = 281
    1: import_name = 282
    1: import_from = 283
    1: import_as_name = 284
    1: dotted_as_name = 285
    1: import_as_names = 286
    1: dotted_as_names = 287
    1: dotted_name = 288
    1: global_stmt = 289
    1: exec_stmt = 290
    1: assert_stmt = 291
    1: compound_stmt = 292
    1: if_stmt = 293
    1: while_stmt = 294
    1: for_stmt = 295
    1: try_stmt = 296
    1: with_stmt = 297
    1: with_item = 298
    1: except_clause = 299
    1: suite = 300
    1: testlist_safe = 301
    1: old_test = 302
    1: old_lambdef = 303
    1: test = 304
    1: or_test = 305
    1: and_test = 306
    1: not_test = 307
    1: comparison = 308
    1: comp_op = 309
    1: expr = 310
    1: xor_expr = 311
    1: and_expr = 312
    1: shift_expr = 313
    1: arith_expr = 314
    1: term = 315
    1: factor = 316
    1: power = 317
    1: atom = 318
    1: listmaker = 319
    1: testlist_comp = 320
    1: lambdef = 321
    1: trailer = 322
    1: subscriptlist = 323
    1: subscript = 324
    1: sliceop = 325
    1: exprlist = 326
    1: testlist = 327
    1: dictorsetmaker = 328
    1: classdef = 329
    1: arglist = 330
    1: argument = 331
    1: list_iter = 332
    1: list_for = 333
    1: list_if = 334
    1: comp_iter = 335
    1: comp_for = 336
    1: comp_if = 337
    1: testlist1 = 338
    1: encoding_decl = 339
    1: yield_expr = 340
       #--end constants--
       
    1: sym_name = {}
   92: for _name, _value in globals().items():
   91:     if type(_value) is type(0):
   85:         sym_name[_value] = _name
       
       
    1: def main():
>>>>>>     import sys
>>>>>>     import token
>>>>>>     if len(sys.argv) == 1:
>>>>>>         sys.argv = sys.argv + ["Include/graminit.h", "Lib/symbol.py"]
>>>>>>     token.main()
       
    1: if __name__ == "__main__":
>>>>>>     main()
