    1: import formatter
    1: import unittest
       
    1: from test import test_support
    1: htmllib = test_support.import_module('htmllib', deprecated=True)
       
       
    2: class AnchorCollector(htmllib.HTMLParser):
    1:     def __init__(self, *args, **kw):
    1:         self.__anchors = []
    1:         htmllib.HTMLParser.__init__(self, *args, **kw)
       
    1:     def get_anchor_info(self):
    1:         return self.__anchors
       
    1:     def anchor_bgn(self, *args):
    3:         self.__anchors.append(args)
       
    2: class DeclCollector(htmllib.HTMLParser):
    1:     def __init__(self, *args, **kw):
    1:         self.__decls = []
    1:         htmllib.HTMLParser.__init__(self, *args, **kw)
       
    1:     def get_decl_info(self):
    1:         return self.__decls
       
    1:     def unknown_decl(self, data):
    2:         self.__decls.append(data)
       
       
    2: class HTMLParserTestCase(unittest.TestCase):
    1:     def test_anchor_collection(self):
               # See SF bug #467059.
    1:         parser = AnchorCollector(formatter.NullFormatter(), verbose=1)
    1:         parser.feed(
                   """<a href='http://foo.org/' name='splat'> </a>
                   <a href='http://www.python.org/'> </a>
                   <a name='frob'> </a>
    1:             """)
    1:         parser.close()
    1:         self.assertEqual(parser.get_anchor_info(),
    1:                          [('http://foo.org/', 'splat', ''),
    1:                           ('http://www.python.org/', '', ''),
    1:                           ('', 'frob', ''),
                                 ])
       
    1:     def test_decl_collection(self):
               # See SF patch #545300
    1:         parser = DeclCollector(formatter.NullFormatter(), verbose=1)
    1:         parser.feed(
                   """<html>
                   <body>
                   hallo
                   <![if !supportEmptyParas]>&nbsp;<![endif]>
                   </body>
                   </html>
    1:             """)
    1:         parser.close()
    1:         self.assertEqual(parser.get_decl_info(),
    1:                          ["if !supportEmptyParas",
    1:                           "endif"
                                 ])
       
    1: def test_main():
    1:     test_support.run_unittest(HTMLParserTestCase)
       
       
    1: if __name__ == "__main__":
>>>>>>     test_main()
