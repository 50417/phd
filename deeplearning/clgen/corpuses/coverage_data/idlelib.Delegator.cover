    2: class Delegator:
       
           # The cache is only used to be able to change delegates!
       
    1:     def __init__(self, delegate=None):
    1:         self.delegate = delegate
    1:         self.__cache = set()
       
    1:     def __getattr__(self, name):
    3:         attr = getattr(self.delegate, name) # May raise AttributeError
    2:         setattr(self, name, attr)
    2:         self.__cache.add(name)
    2:         return attr
       
    1:     def resetcache(self):
    3:         for key in self.__cache:
    2:             try:
    2:                 delattr(self, key)
    1:             except AttributeError:
    1:                 pass
    1:         self.__cache.clear()
       
    1:     def setdelegate(self, delegate):
    1:         self.resetcache()
    1:         self.delegate = delegate
