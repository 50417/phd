    1: """Tests for distutils.command.clean."""
    1: import sys
    1: import os
    1: import unittest
    1: import getpass
       
    1: from distutils.command.clean import clean
    1: from distutils.tests import support
    1: from test.test_support import run_unittest
       
    2: class cleanTestCase(support.TempdirManager,
    1:                     support.LoggingSilencer,
    1:                     unittest.TestCase):
       
    1:     def test_simple_run(self):
    1:         pkg_dir, dist = self.create_dist()
    1:         cmd = clean(dist)
       
               # let's add some elements clean should remove
    1:         dirs = [(d, os.path.join(pkg_dir, d))
                       for d in ('build_temp', 'build_lib', 'bdist_base',
    6:                 'build_scripts', 'build_base')]
       
    6:         for name, path in dirs:
    5:             os.mkdir(path)
    5:             setattr(cmd, name, path)
    5:             if name == 'build_base':
    1:                 continue
   16:             for f in ('one', 'two', 'three'):
   12:                 self.write_file(os.path.join(path, f))
       
               # let's run the command
    1:         cmd.all = 1
    1:         cmd.ensure_finalized()
    1:         cmd.run()
       
               # make sure the files where removed
    6:         for name, path in dirs:
    5:             self.assertFalse(os.path.exists(path),
    5:                          '%s was not removed' % path)
       
               # let's run the command again (should spit warnings but succeed)
    1:         cmd.all = 1
    1:         cmd.ensure_finalized()
    1:         cmd.run()
       
    1: def test_suite():
    1:     return unittest.makeSuite(cleanTestCase)
       
    1: if __name__ == "__main__":
>>>>>>     run_unittest(test_suite())
