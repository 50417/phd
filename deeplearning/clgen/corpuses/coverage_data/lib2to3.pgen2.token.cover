       #! /usr/bin/env python
       
    1: """Token constants (from "token.h")."""
       
       #  Taken from Python (r53757) and modified to include some tokens
       #   originally monkeypatched in by pgen2.tokenize
       
       #--start constants--
    1: ENDMARKER = 0
    1: NAME = 1
    1: NUMBER = 2
    1: STRING = 3
    1: NEWLINE = 4
    1: INDENT = 5
    1: DEDENT = 6
    1: LPAR = 7
    1: RPAR = 8
    1: LSQB = 9
    1: RSQB = 10
    1: COLON = 11
    1: COMMA = 12
    1: SEMI = 13
    1: PLUS = 14
    1: MINUS = 15
    1: STAR = 16
    1: SLASH = 17
    1: VBAR = 18
    1: AMPER = 19
    1: LESS = 20
    1: GREATER = 21
    1: EQUAL = 22
    1: DOT = 23
    1: PERCENT = 24
    1: BACKQUOTE = 25
    1: LBRACE = 26
    1: RBRACE = 27
    1: EQEQUAL = 28
    1: NOTEQUAL = 29
    1: LESSEQUAL = 30
    1: GREATEREQUAL = 31
    1: TILDE = 32
    1: CIRCUMFLEX = 33
    1: LEFTSHIFT = 34
    1: RIGHTSHIFT = 35
    1: DOUBLESTAR = 36
    1: PLUSEQUAL = 37
    1: MINEQUAL = 38
    1: STAREQUAL = 39
    1: SLASHEQUAL = 40
    1: PERCENTEQUAL = 41
    1: AMPEREQUAL = 42
    1: VBAREQUAL = 43
    1: CIRCUMFLEXEQUAL = 44
    1: LEFTSHIFTEQUAL = 45
    1: RIGHTSHIFTEQUAL = 46
    1: DOUBLESTAREQUAL = 47
    1: DOUBLESLASH = 48
    1: DOUBLESLASHEQUAL = 49
    1: AT = 50
    1: ATEQUAL = 51
    1: OP = 52
    1: COMMENT = 53
    1: NL = 54
    1: RARROW = 55
    1: ERRORTOKEN = 56
    1: N_TOKENS = 57
    1: NT_OFFSET = 256
       #--end constants--
       
    1: tok_name = {}
   66: for _name, _value in globals().items():
   65:     if type(_value) is type(0):
   59:         tok_name[_value] = _name
       
       
    1: def ISTERMINAL(x):
>>>>>>     return x < NT_OFFSET
       
    1: def ISNONTERMINAL(x):
>>>>>>     return x >= NT_OFFSET
       
    1: def ISEOF(x):
>>>>>>     return x == ENDMARKER
