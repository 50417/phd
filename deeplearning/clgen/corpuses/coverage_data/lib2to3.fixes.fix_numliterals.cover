       """Fixer that turns 1L into 1, 0755 into 0o755.
    1: """
       # Copyright 2007 Georg Brandl.
       # Licensed to PSF under a Contributor Agreement.
       
       # Local imports
    1: from ..pgen2 import token
    1: from .. import fixer_base
    1: from ..fixer_util import Number
       
       
    2: class FixNumliterals(fixer_base.BaseFix):
           # This is so simple that we don't need the pattern compiler.
       
    1:     _accept_type = token.NUMBER
       
    1:     def match(self, node):
               # Override
  842:         return (node.value.startswith(u"0") or node.value[-1] in u"Ll")
       
    1:     def transform(self, node, results):
   86:         val = node.value
   86:         if val[-1] in u'Ll':
   13:             val = val[:-1]
   73:         elif val.startswith(u'0') and val.isdigit() and len(set(val)) > 1:
    8:             val = u"0o" + val[1:]
       
   86:         return Number(val, prefix=node.prefix)
