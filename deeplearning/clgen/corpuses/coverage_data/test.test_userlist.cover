       # Check every path through every method of UserList
       
    1: from UserList import UserList
    1: from test import test_support, list_tests
       
    2: class UserListTest(list_tests.CommonTest):
    1:     type2test = UserList
       
    1:     def test_getslice(self):
    1:         super(UserListTest, self).test_getslice()
    1:         l = [0, 1, 2, 3, 4]
    1:         u = self.type2test(l)
   10:         for i in range(-3, 6):
    9:             self.assertEqual(u[:i], l[:i])
    9:             self.assertEqual(u[i:], l[i:])
   90:             for j in xrange(-3, 6):
   81:                 self.assertEqual(u[i:j], l[i:j])
       
    1:     def test_add_specials(self):
    1:         u = UserList("spam")
    1:         u2 = u + "eggs"
    1:         self.assertEqual(u2, list("spameggs"))
       
    1:     def test_radd_specials(self):
    1:         u = UserList("eggs")
    1:         u2 = "spam" + u
    1:         self.assertEqual(u2, list("spameggs"))
    1:         u2 = u.__radd__(UserList("spam"))
    1:         self.assertEqual(u2, list("spameggs"))
       
    1:     def test_iadd(self):
    1:         super(UserListTest, self).test_iadd()
    1:         u = [0, 1]
    1:         u += UserList([0, 1])
    1:         self.assertEqual(u, [0, 1, 0, 1])
       
    1:     def test_mixedcmp(self):
    1:         u = self.type2test([0, 1])
    1:         self.assertEqual(u, [0, 1])
    1:         self.assertNotEqual(u, [0])
    1:         self.assertNotEqual(u, [0, 2])
       
    1:     def test_mixedadd(self):
    1:         u = self.type2test([0, 1])
    1:         self.assertEqual(u + [], u)
    1:         self.assertEqual(u + [2], [0, 1, 2])
       
    1:     def test_getitemoverwriteiter(self):
               # Verify that __getitem__ overrides *are* recognized by __iter__
    2:         class T(self.type2test):
    1:             def __getitem__(self, key):
    1:                 return str(key) + '!!!'
    1:         self.assertEqual(iter(T((1,2))).next(), "0!!!")
       
    1: def test_main():
    1:     with test_support.check_py3k_warnings(
    1:             (".+__(get|set|del)slice__ has been removed", DeprecationWarning)):
    1:         test_support.run_unittest(UserListTest)
       
    1: if __name__ == "__main__":
>>>>>>     test_main()
