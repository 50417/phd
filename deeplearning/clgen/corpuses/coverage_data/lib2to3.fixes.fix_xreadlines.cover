       """Fix "for x in f.xreadlines()" -> "for x in f".
       
    1: This fixer will also convert g(f.xreadlines) into g(f.__iter__)."""
       # Author: Collin Winter
       
       # Local imports
    1: from .. import fixer_base
    1: from ..fixer_util import Name
       
       
    2: class FixXreadlines(fixer_base.BaseFix):
    1:     BM_compatible = True
           PATTERN = """
           power< call=any+ trailer< '.' 'xreadlines' > trailer< '(' ')' > >
           |
           power< any+ trailer< '.' no_call='xreadlines' > >
    1:     """
       
    1:     def transform(self, node, results):
    6:         no_call = results.get("no_call")
       
    6:         if no_call:
    3:             no_call.replace(Name(u"__iter__", prefix=no_call.prefix))
               else:
    7:             node.replace([x.clone() for x in results["call"]])
