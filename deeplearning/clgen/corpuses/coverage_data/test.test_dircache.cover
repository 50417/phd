       """
         Test cases for the dircache module
         Nick Mathewson
    1: """
       
    1: import unittest
    1: from test.test_support import run_unittest, import_module
    1: dircache = import_module('dircache', deprecated=True)
    1: import os, time, sys, tempfile
       
       
    2: class DircacheTests(unittest.TestCase):
    1:     def setUp(self):
    2:         self.tempdir = tempfile.mkdtemp()
       
    1:     def tearDown(self):
    5:         for fname in os.listdir(self.tempdir):
    3:             self.delTemp(fname)
    2:         os.rmdir(self.tempdir)
       
    1:     def writeTemp(self, fname):
    2:         f = open(os.path.join(self.tempdir, fname), 'w')
    2:         f.close()
       
    1:     def mkdirTemp(self, fname):
    1:         os.mkdir(os.path.join(self.tempdir, fname))
       
    1:     def delTemp(self, fname):
    3:         fname = os.path.join(self.tempdir, fname)
    3:         if os.path.isdir(fname):
    1:             os.rmdir(fname)
               else:
    2:             os.unlink(fname)
       
    1:     def test_listdir(self):
               ## SUCCESSFUL CASES
    1:         entries = dircache.listdir(self.tempdir)
    1:         self.assertEqual(entries, [])
       
               # Check that cache is actually caching, not just passing through.
    1:         self.assertTrue(dircache.listdir(self.tempdir) is entries)
       
               # Directories aren't "files" on Windows, and directory mtime has
               # nothing to do with when files under a directory get created.
               # That is, this test can't possibly work under Windows -- dircache
               # is only good for capturing a one-shot snapshot there.
       
    1:         if sys.platform[:3] not in ('win', 'os2'):
                   # Sadly, dircache has the same granularity as stat.mtime, and so
                   # can't notice any changes that occurred within 1 sec of the last
                   # time it examined a directory.
    1:             time.sleep(1)
    1:             self.writeTemp("test1")
    1:             entries = dircache.listdir(self.tempdir)
    1:             self.assertEqual(entries, ['test1'])
    1:             self.assertTrue(dircache.listdir(self.tempdir) is entries)
       
               ## UNSUCCESSFUL CASES
    1:         self.assertRaises(OSError, dircache.listdir, self.tempdir+"_nonexistent")
       
    1:     def test_annotate(self):
    1:         self.writeTemp("test2")
    1:         self.mkdirTemp("A")
    1:         lst = ['A', 'test2', 'test_nonexistent']
    1:         dircache.annotate(self.tempdir, lst)
    1:         self.assertEqual(lst, ['A/', 'test2', 'test_nonexistent'])
       
       
    1: def test_main():
    1:     try:
    1:         run_unittest(DircacheTests)
           finally:
    1:         dircache.reset()
       
       
    1: if __name__ == "__main__":
>>>>>>     test_main()
