    1: """Tests for distutils.command.bdist."""
    1: import os
    1: import unittest
       
    1: from test.test_support import run_unittest
       
    1: from distutils.command.bdist import bdist
    1: from distutils.tests import support
       
       
    2: class BuildTestCase(support.TempdirManager,
    1:                     unittest.TestCase):
       
    1:     def test_formats(self):
               # let's create a command and make sure
               # we can set the format
    1:         dist = self.create_dist()[1]
    1:         cmd = bdist(dist)
    1:         cmd.formats = ['msi']
    1:         cmd.ensure_finalized()
    1:         self.assertEqual(cmd.formats, ['msi'])
       
               # what formats does bdist offer?
    1:         formats = ['bztar', 'gztar', 'msi', 'rpm', 'tar',
    1:                    'wininst', 'zip', 'ztar']
    1:         found = sorted(cmd.format_command)
    1:         self.assertEqual(found, formats)
       
    1:     def test_skip_build(self):
               # bug #10946: bdist --skip-build should trickle down to subcommands
    1:         dist = self.create_dist()[1]
    1:         cmd = bdist(dist)
    1:         cmd.skip_build = 1
    1:         cmd.ensure_finalized()
    1:         dist.command_obj['bdist'] = cmd
       
    1:         names = ['bdist_dumb', 'bdist_wininst']
               # bdist_rpm does not support --skip-build
    1:         if os.name == 'nt':
>>>>>>             names.append('bdist_msi')
       
    3:         for name in names:
    2:             subcmd = cmd.get_finalized_command(name)
    2:             self.assertTrue(subcmd.skip_build,
    2:                             '%s should take --skip-build from bdist' % name)
       
       
    1: def test_suite():
    1:     return unittest.makeSuite(BuildTestCase)
       
    1: if __name__ == '__main__':
>>>>>>     run_unittest(test_suite())
