    1: import os
    1: import sys
    1: import unittest
       
       # Bob Ippolito:
       """
       Ok.. the code to find the filename for __getattr__ should look
       something like:
       
       import os
       from macholib.dyld import dyld_find
       
       def find_lib(name):
            possible = ['lib'+name+'.dylib', name+'.dylib',
            name+'.framework/'+name]
            for dylib in possible:
                try:
                    return os.path.realpath(dyld_find(dylib))
                except ValueError:
                    pass
            raise ValueError, "%s not found" % (name,)
       
       It'll have output like this:
       
        >>> find_lib('pthread')
       '/usr/lib/libSystem.B.dylib'
        >>> find_lib('z')
       '/usr/lib/libz.1.dylib'
        >>> find_lib('IOKit')
       '/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit'
       
       -bob
       
       """
       
    1: from ctypes.macholib.dyld import dyld_find
       
    1: def find_lib(name):
    3:     possible = ['lib'+name+'.dylib', name+'.dylib', name+'.framework/'+name]
    5:     for dylib in possible:
    5:         try:
    5:             return os.path.realpath(dyld_find(dylib))
    2:         except ValueError:
    2:             pass
>>>>>>     raise ValueError("%s not found" % (name,))
       
    2: class MachOTest(unittest.TestCase):
    1:     @unittest.skipUnless(sys.platform == "darwin", 'OSX-specific test')
           def test_find(self):
       
    1:         self.assertEqual(find_lib('pthread'),
    1:                              '/usr/lib/libSystem.B.dylib')
       
    1:         result = find_lib('z')
               # Issue #21093: dyld default search path includes $HOME/lib and
               # /usr/local/lib before /usr/lib, which caused test failures if
               # a local copy of libz exists in one of them. Now ignore the head
               # of the path.
    1:         self.assertRegexpMatches(result, r".*/lib/libz\..*.*\.dylib")
       
    1:         self.assertEqual(find_lib('IOKit'),
    1:                              '/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit')
       
    1: if __name__ == "__main__":
>>>>>>     unittest.main()
