       """
       Test suite to check compliance with PEP 247, the standard API
       for hashing algorithms
    1: """
       
    1: import warnings
    1: warnings.filterwarnings('ignore', 'the md5 module is deprecated.*',
    1:                         DeprecationWarning)
    1: warnings.filterwarnings('ignore', 'the sha module is deprecated.*',
    1:                         DeprecationWarning)
       
    1: import hmac
    1: import md5
    1: import sha
       
    1: import unittest
    1: from test import test_support
       
    2: class Pep247Test(unittest.TestCase):
       
    1:     def check_module(self, module, key=None):
    3:         self.assertTrue(hasattr(module, 'digest_size'))
    3:         self.assertTrue(module.digest_size is None or module.digest_size > 0)
       
    3:         if not key is None:
    1:             obj1 = module.new(key)
    1:             obj2 = module.new(key, 'string')
       
    1:             h1 = module.new(key, 'string').digest()
    1:             obj3 = module.new(key)
    1:             obj3.update('string')
    1:             h2 = obj3.digest()
               else:
    2:             obj1 = module.new()
    2:             obj2 = module.new('string')
       
    2:             h1 = module.new('string').digest()
    2:             obj3 = module.new()
    2:             obj3.update('string')
    2:             h2 = obj3.digest()
       
    3:         self.assertEqual(h1, h2)
       
    3:         self.assertTrue(hasattr(obj1, 'digest_size'))
       
    3:         if not module.digest_size is None:
    2:             self.assertEqual(obj1.digest_size, module.digest_size)
       
    3:         self.assertEqual(obj1.digest_size, len(h1))
    3:         obj1.update('string')
    3:         obj_copy = obj1.copy()
    3:         self.assertEqual(obj1.digest(), obj_copy.digest())
    3:         self.assertEqual(obj1.hexdigest(), obj_copy.hexdigest())
       
    3:         digest, hexdigest = obj1.digest(), obj1.hexdigest()
    3:         hd2 = ""
   55:         for byte in digest:
   52:             hd2 += '%02x' % ord(byte)
    3:         self.assertEqual(hd2, hexdigest)
       
    1:     def test_md5(self):
    1:         self.check_module(md5)
       
    1:     def test_sha(self):
    1:         self.check_module(sha)
       
    1:     def test_hmac(self):
    1:         self.check_module(hmac, key='abc')
       
    1: def test_main():
    1:     test_support.run_unittest(Pep247Test)
       
    1: if __name__ == '__main__':
>>>>>>     test_main()
