    1: """Custom exception hierachy used by CLgen."""
       
       
    2: class CLgenError(Exception):
    1:   """Top level error. Never directly thrown."""
    1:   pass
       
       
    2: class InternalError(CLgenError):
         """An internal module error.
       
         This class of errors should not leak outside of the module into user code.
    1:   """
    1:   pass
       
       
    2: class UserError(CLgenError):
    1:   """Raised in case of bad user interaction, e.g. an invalid argument."""
    1:   pass
       
       
    2: class File404(InternalError):
    1:   """Data not found."""
    1:   pass
       
       
    2: class InvalidFile(UserError):
    1:   """Raised in case a file contains invalid contents."""
    1:   pass
       
       
    2: class EmptyCorpusException(UserError):
    1:   """Raised in case a corpus contains no data."""
    1:   pass
       
       
    2: class LlvmException(CLgenError):
    1:   """LLVM Error."""
    1:   pass
       
       
    2: class OptException(LlvmException):
    1:   """LLVM opt error."""
    1:   pass
       
       
    2: class BadCodeException(CLgenError):
    1:   """Code is bad."""
    1:   pass
       
       
    2: class ClangException(BadCodeException):
    1:   """An error from clang."""
    1:   pass
       
       
    2: class ClangTimeout(ClangException):
    1:   """Clang failed to terminate without time limit."""
    1:   pass
       
       
    2: class ClangFormatException(ClangException):
    1:   """An error from clang-format."""
    1:   pass
       
       
    2: class RewriterException(ClangException):
    1:   """Program rewriter error."""
    1:   pass
       
       
    2: class InstructionCountException(BadCodeException):
    1:   """Instruction count error."""
    1:   pass
       
       
    2: class NoCodeException(BadCodeException):
    1:   """Sample contains no code."""
    1:   pass
       
       
    2: class GPUVerifyException(BadCodeException):
    1:   """GPUVerify found a bug."""
    1:   pass
       
       
    2: class GPUVerifyTimeoutException(GPUVerifyException):
    1:   """GPUVerify timed out."""
    1:   pass
       
       
    2: class FeaturesError(CLgenError):
    1:   """Thrown in case of error during features encoding."""
    1:   pass
       
       
    2: class VocabError(CLgenError):
    1:   """A character sequence is not in the atomizer's vocab"""
    1:   pass
       
       
    2: class InvalidVocab(VocabError):
    1:   """An invalid atomizer vocabulary"""
    1:   pass
       
       
    2: class InvalidStartText(InvalidVocab):
    1:   """A Sampler's start text cannot be encoded using the corpus vocabulary."""
    1:   pass
       
       
    2: class InvalidSymtokTokens(InvalidVocab):
    1:   """A Sampler's symmetrical depth tokens cannot be encoded."""
    1:   pass
