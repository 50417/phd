syntax = "proto2";
package deepsmith;

message ProfilingEvent {
  // A unique client name. A good starting point would be the hostname.
  optional string client = 1;

  // The type of profiling event. E.g. "overhead", "generation", "warmup", etc.
  optional string type = 2;

  // The duration of the event, expressed in milliseconds.
  optional int64 duration_ms = 3;

  // The start of the profiling event, expressed in milliseconds since the
  // epoch.
  optional int64 event_start_epoch_ms = 4;
}

message Testcase {
  optional string toolchain = 1;
  optional Generator generator = 2;
  optional Harness harness = 3;

  // <input_name, input_value>
  map<string, string> inputs = 4;

  map<string, string> invariant_opts = 5;

  repeated ProfilingEvent profiling_events = 6;
}

message Generator {
  optional string name = 1;
  map<string, string> opts = 2;
}

message Harness {
  optional string name = 1;
  map<string, string> opts = 2;
}

message Testbed {
  optional string toolchain = 1;
  optional string name = 2;
  map<string, string> opts = 3;
}

message Result {
  optional Testcase testcase = 1;
  optional Testbed testbed = 2;
  optional int32 returncode = 3;
  // <name, value>
  map<string, string> outputs = 4;
  repeated ProfilingEvent profiling_events = 5;
}

