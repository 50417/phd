// A Generator generates testcases.

syntax = "proto2";
package deepsmith;

import "deeplearning/deepsmith/proto/deepsmith.proto";
import "deeplearning/deepsmith/proto/service.proto";

service GeneratorService {
  rpc GenerateTestcases (GenerateTestcasesRequest) returns (GenerateTestcasesResponse);
}

message GenerateTestcasesRequest {
  optional ServiceStatus status = 1;
}

message GenerateTestcasesResponse {
  optional ServiceStatus status = 1;
  optional string client = 2 [default = "<anon>"];
  optional int32 error_code = 3;
  repeated deepsmith.Testcase testcases = 4;
}

// A testcase generator which uses CLgen to generate programs.
message ClgenGenerator {
  optional ServiceConfig service = 1;
}
