// A Harness executes testcases.

syntax = "proto2";
package deepsmith;

import "deeplearning/deepsmith/proto/deepsmith.proto";
import "deeplearning/deepsmith/proto/service.proto";

service HarnessService {
  rpc GetHarnessCapabilities (GetHarnessCapabilitiesRequest) returns (GetHarnessCapabilitiesResponse);
  rpc RunTestcases (RunTestcasesRequest) returns (RunTestcasesResponse);
}

message GetHarnessCapabilitiesRequest {
  optional ServiceStatus status = 1;
}

message GetHarnessCapabilitiesResponse {
  optional ServiceStatus status = 1;
  optional Harness harness = 2;
  repeated Testbed testbeds = 3;
}

message RunTestcasesRequest {
  optional ServiceStatus status = 1;
  optional Testbed testbed = 2;
  repeated Testcase testcases = 3;
}

message RunTestcasesResponse {
  optional ServiceStatus status = 1;
  repeated Result results = 2;
}

// A harness which uses cldrive to run testcases.
message CldriveHarness {
  optional ServiceConfig service = 1;
}
